Search.setIndex({"alltitles": {"About": [[334, null]], "Acknowledgements": [[335, null]], "BSD 3-Caluse license": [[1, "bsd-3-caluse-license"]], "BSD 3-Clause license": [[0, "bsd-3-clause-license"]], "Building Footprints": [[326, null]], "Cleaning the Dataset": [[0, "cleaning-the-dataset"], [1, "cleaning-the-dataset"]], "Contents:": [[333, null]], "Copyright": [[0, "copyright"], [1, "copyright"]], "Copyright and License": [[338, null]], "Downloading Images": [[327, null]], "Example:": [[226, "example"]], "Examples": [[84, "examples"], [325, null]], "Execute with pretrained model": [[1, "execute-with-pretrained-model"]], "Execute with the pretrained model": [[0, "execute-with-the-pretrained-model"]], "Footprint Notebook": [[326, "footprint-notebook"]], "Foundation Classification Model Training": [[0, "foundation-classification-model-training"], [1, "foundation-classification-model-training"]], "How to Cite": [[336, null]], "How to use": [[0, "how-to-use"], [1, "how-to-use"]], "Image Filters": [[328, null]], "Image Processors": [[329, null]], "Importer": [[330, null]], "Imputation Algorithms": [[331, null]], "Imputation Notebook": [[331, "imputation-notebook"]], "Indices and tables": [[333, "indices-and-tables"]], "Input Data Format for Training": [[0, "input-data-format-for-training"], [1, "input-data-format-for-training"]], "Installation": [[0, "installation"], [1, "installation"], [337, null]], "NSI Integration": [[332, null]], "NSI Integration Notebook": [[332, "nsi-integration-notebook"]], "Notes": [[84, "notes"]], "Notes:": [[226, "notes"]], "Optional Improvements": [[0, "optional-improvements"]], "Parameters": [[21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [24, "id1"], [24, "id3"], [24, "id5"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [241, "parameters"], [241, "id1"]], "Pre-Saving Masked Images": [[0, "pre-saving-masked-images"]], "Raised Foundation Classification": [[0, null]], "Returns": [[21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [24, "id2"], [24, "id4"], [24, "id6"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [84, "returns"], [241, "returns"], [241, "id2"]], "Submodules": [[2, "submodules"], [4, "submodules"], [6, "submodules"], [8, "submodules"], [10, "submodules"], [12, "submodules"], [13, "submodules"], [16, "submodules"], [18, "submodules"], [20, "submodules"], [41, "submodules"], [43, "submodules"], [47, "submodules"], [48, "submodules"], [50, "submodules"], [52, "submodules"], [54, "submodules"], [61, "submodules"], [67, "submodules"], [68, "submodules"], [75, "submodules"], [77, "submodules"], [79, "submodules"], [81, "submodules"], [82, "submodules"], [85, "submodules"], [86, "submodules"], [87, "submodules"], [95, "submodules"], [100, "submodules"], [102, "submodules"], [103, "submodules"], [109, "submodules"], [122, "submodules"], [130, "submodules"], [136, "submodules"], [140, "submodules"], [144, "submodules"], [152, "submodules"], [155, "submodules"], [160, "submodules"], [163, "submodules"], [165, "submodules"], [167, "submodules"], [174, "submodules"], [180, "submodules"], [181, "submodules"], [188, "submodules"], [191, "submodules"], [194, "submodules"], [196, "submodules"], [198, "submodules"], [200, "submodules"], [201, "submodules"], [203, "submodules"], [210, "submodules"], [216, "submodules"], [217, "submodules"], [225, "submodules"], [227, "submodules"], [230, "submodules"], [232, "submodules"], [234, "submodules"], [236, "submodules"], [238, "submodules"], [240, "submodules"], [245, "submodules"], [247, "submodules"], [251, "submodules"], [260, "submodules"], [265, "submodules"], [268, "submodules"], [275, "submodules"], [276, "submodules"], [279, "submodules"], [281, "submodules"], [284, "submodules"], [286, "submodules"], [288, "submodules"], [290, "submodules"], [292, "submodules"], [294, "submodules"], [296, "submodules"], [298, "submodules"], [300, "submodules"], [303, "submodules"], [307, "submodules"], [316, "submodules"]], "Subpackages": [[2, "subpackages"], [4, "subpackages"], [6, "subpackages"], [8, "subpackages"], [12, "subpackages"], [47, "subpackages"], [50, "subpackages"], [52, "subpackages"], [67, "subpackages"], [81, "subpackages"], [85, "subpackages"], [86, "subpackages"], [93, "subpackages"], [94, "subpackages"], [102, "subpackages"], [136, "subpackages"], [163, "subpackages"], [165, "subpackages"], [180, "subpackages"], [200, "subpackages"], [201, "subpackages"], [216, "subpackages"], [238, "subpackages"], [245, "subpackages"], [247, "subpackages"], [265, "subpackages"], [275, "subpackages"], [307, "subpackages"]], "Table of Contents": [[1, "table-of-contents"]], "Training the Model": [[0, "training-the-model"], [1, "training-the-model"]], "Unsupervised Pretraining": [[0, "unsupervised-pretraining"]], "What is Raised Foundation Classification": [[0, "what-is-raised-foundation-classification"]], "What is Year Built Classification": [[1, "what-is-year-built-classification"]], "Year Built Classification": [[1, null]], "brails package": [[2, null]], "brails.exceptions module": [[3, null]], "brails.filters package": [[4, null]], "brails.filters.filter module": [[5, null]], "brails.filters.house_view package": [[6, null]], "brails.filters.house_view.house_view module": [[7, null]], "brails.imputers package": [[8, null]], "brails.imputers.imputation module": [[9, null]], "brails.imputers.knn_imputer package": [[10, null]], "brails.imputers.knn_imputer.knn_imputer module": [[11, null]], "brails.inferers package": [[12, null]], "brails.inferers.hazus_inferer package": [[13, null]], "brails.inferers.hazus_inferer.hazus_inferer module": [[14, null]], "brails.inferers.hazus_inferer.hazus_rulesets module": [[15, null]], "brails.inferers.hazus_inferer_earthquake package": [[16, null]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake module": [[17, null]], "brails.inferers.hazus_inferer_flood package": [[18, null]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood module": [[19, null]], "brails.inferers.hazus_inferer_wind package": [[20, null]], "brails.inferers.hazus_inferer_wind.BuildingClassRulesets module": [[21, null]], "brails.inferers.hazus_inferer_wind.WindCECBRulesets module": [[22, null]], "brails.inferers.hazus_inferer_wind.WindCERBRulesets module": [[23, null]], "brails.inferers.hazus_inferer_wind.WindEFRulesets module": [[24, null]], "brails.inferers.hazus_inferer_wind.WindMECBRulesets module": [[25, null]], "brails.inferers.hazus_inferer_wind.WindMERBRulesets module": [[26, null]], "brails.inferers.hazus_inferer_wind.WindMHRulesets module": [[27, null]], "brails.inferers.hazus_inferer_wind.WindMLRIRulesets module": [[28, null]], "brails.inferers.hazus_inferer_wind.WindMLRMRulesets module": [[29, null]], "brails.inferers.hazus_inferer_wind.WindMMUHRulesets module": [[30, null]], "brails.inferers.hazus_inferer_wind.WindMSFRulesets module": [[31, null]], "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets module": [[32, null]], "brails.inferers.hazus_inferer_wind.WindSECBRulesets module": [[33, null]], "brails.inferers.hazus_inferer_wind.WindSERBRulesets module": [[34, null]], "brails.inferers.hazus_inferer_wind.WindSPMBRulesets module": [[35, null]], "brails.inferers.hazus_inferer_wind.WindWMUHRulesets module": [[36, null]], "brails.inferers.hazus_inferer_wind.WindWSFRulesets module": [[37, null]], "brails.inferers.hazus_inferer_wind.auto_HU_NJ module": [[38, null]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind module": [[39, null]], "brails.inferers.inferenceEngine module": [[40, null]], "brails.inferers.simcenter_inferer package": [[41, null]], "brails.inferers.simcenter_inferer.simCenter_inferer module": [[42, null]], "brails.inferers.user_inferer package": [[43, null]], "brails.inferers.user_inferer.content_value_inferer module": [[44, null]], "brails.inferers.user_inferer.floor_area_inferer module": [[45, null]], "brails.inferers.user_inferer.user_inferer module": [[46, null]], "brails.processors package": [[47, null]], "brails.processors.building_material_llm package": [[48, null]], "brails.processors.building_material_llm.building_material_llm module": [[49, null]], "brails.processors.chimney_detector package": [[50, null]], "brails.processors.chimney_detector.chimney_detector module": [[51, null]], "brails.processors.chimney_detector.lib package": [[52, null]], "brails.processors.chimney_detector.lib.backbone module": [[53, null]], "brails.processors.chimney_detector.lib.efficientdet package": [[54, null]], "brails.processors.chimney_detector.lib.efficientdet.coco module": [[55, null]], "brails.processors.chimney_detector.lib.efficientdet.config module": [[56, null]], "brails.processors.chimney_detector.lib.efficientdet.dataset module": [[57, null]], "brails.processors.chimney_detector.lib.efficientdet.loss module": [[58, null]], "brails.processors.chimney_detector.lib.efficientdet.model module": [[59, null]], "brails.processors.chimney_detector.lib.efficientdet.utils module": [[60, null]], "brails.processors.chimney_detector.lib.efficientnet package": [[61, null]], "brails.processors.chimney_detector.lib.efficientnet.model module": [[62, null]], "brails.processors.chimney_detector.lib.efficientnet.utils module": [[63, null]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra module": [[64, null]], "brails.processors.chimney_detector.lib.infer_detector module": [[65, null]], "brails.processors.chimney_detector.lib.train_detector module": [[66, null]], "brails.processors.chimney_detector.lib.utils package": [[67, null]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm package": [[68, null]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm module": [[69, null]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module": [[70, null]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm module": [[71, null]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate module": [[72, null]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest module": [[73, null]], "brails.processors.chimney_detector.lib.utils.utils module": [[74, null]], "brails.processors.cons_type_classifier package": [[75, null]], "brails.processors.cons_type_classifier.ConstructionTypeClassifier module": [[76, null]], "brails.processors.facade_parser package": [[77, null]], "brails.processors.facade_parser.facade_parser module": [[78, null]], "brails.processors.ffh_predictor_klepac package": [[79, null]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac module": [[80, null]], "brails.processors.foundation_classifier package": [[81, null]], "brails.processors.foundation_classifier.attention_utils package": [[82, null]], "brails.processors.foundation_classifier.attention_utils.radam module": [[83, null]], "brails.processors.foundation_classifier.attention_utils.utils module": [[84, null]], "brails.processors.foundation_classifier.csail_segmentation_tool package": [[85, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg package": [[86, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config package": [[87, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults module": [[88, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data package": [[89, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset module": [[90, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval module": [[91, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro module": [[92, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib package": [[93, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn package": [[94, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules package": [[95, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm module": [[96, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm module": [[97, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate module": [[98, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest module": [[99, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel package": [[100, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel module": [[101, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils package": [[102, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data package": [[103, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader module": [[104, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset module": [[105, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed module": [[106, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler module": [[107, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th module": [[108, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models package": [[109, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet module": [[110, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet module": [[111, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models module": [[112, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet module": [[113, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext module": [[114, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils module": [[115, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test module": [[116, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train module": [[117, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils module": [[118, null]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation module": [[119, null]], "brails.processors.foundation_classifier.detect module": [[120, null]], "brails.processors.foundation_classifier.foundation_classifier module": [[121, null]], "brails.processors.foundation_classifier.lib package": [[122, null]], "brails.processors.foundation_classifier.lib.LinearAverage module": [[123, null]], "brails.processors.foundation_classifier.lib.NCEAverage module": [[124, null]], "brails.processors.foundation_classifier.lib.NCECriterion module": [[125, null]], "brails.processors.foundation_classifier.lib.alias_multinomial module": [[126, null]], "brails.processors.foundation_classifier.lib.custom_transforms module": [[127, null]], "brails.processors.foundation_classifier.lib.normalize module": [[128, null]], "brails.processors.foundation_classifier.lib.utils module": [[129, null]], "brails.processors.foundation_classifier.models package": [[130, null]], "brails.processors.foundation_classifier.models.attention_module module": [[131, null]], "brails.processors.foundation_classifier.models.basic_layer module": [[132, null]], "brails.processors.foundation_classifier.models.residual_attention_network module": [[133, null]], "brails.processors.foundation_classifier.models.resnet_applied module": [[134, null]], "brails.processors.foundation_classifier.models.sknet module": [[135, null]], "brails.processors.foundation_classifier.npid package": [[136, null]], "brails.processors.foundation_classifier.npid.MDistance module": [[137, null]], "brails.processors.foundation_classifier.npid.cifar module": [[138, null]], "brails.processors.foundation_classifier.npid.main module": [[139, null]], "brails.processors.foundation_classifier.npid.npid_datasets package": [[140, null]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar module": [[141, null]], "brails.processors.foundation_classifier.npid.npid_datasets.folder module": [[142, null]], "brails.processors.foundation_classifier.npid.npid_datasets.mnist module": [[143, null]], "brails.processors.foundation_classifier.npid.npid_lib package": [[144, null]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage module": [[145, null]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage module": [[146, null]], "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion module": [[147, null]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial module": [[148, null]], "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms module": [[149, null]], "brails.processors.foundation_classifier.npid.npid_lib.normalize module": [[150, null]], "brails.processors.foundation_classifier.npid.npid_lib.utils module": [[151, null]], "brails.processors.foundation_classifier.npid.npid_models package": [[152, null]], "brails.processors.foundation_classifier.npid.npid_models.resnet module": [[153, null]], "brails.processors.foundation_classifier.npid.npid_models.resnet_cifar module": [[154, null]], "brails.processors.foundation_classifier.npid.npid_toolbox package": [[155, null]], "brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances module": [[156, null]], "brails.processors.foundation_classifier.npid.test module": [[157, null]], "brails.processors.foundation_classifier.save_masked_images module": [[158, null]], "brails.processors.foundation_classifier.train module": [[159, null]], "brails.processors.foundation_classifier.utils package": [[160, null]], "brails.processors.foundation_classifier.utils.Datasets module": [[161, null]], "brails.processors.foundation_classifier.utils.generate_csv module": [[162, null]], "brails.processors.garage_detector package": [[163, null]], "brails.processors.garage_detector.garage_detector module": [[164, null]], "brails.processors.garage_detector.lib package": [[165, null]], "brails.processors.garage_detector.lib.backbone module": [[166, null]], "brails.processors.garage_detector.lib.efficientdet package": [[167, null]], "brails.processors.garage_detector.lib.efficientdet.coco module": [[168, null]], "brails.processors.garage_detector.lib.efficientdet.config module": [[169, null]], "brails.processors.garage_detector.lib.efficientdet.dataset module": [[170, null]], "brails.processors.garage_detector.lib.efficientdet.loss module": [[171, null]], "brails.processors.garage_detector.lib.efficientdet.model module": [[172, null]], "brails.processors.garage_detector.lib.efficientdet.utils module": [[173, null]], "brails.processors.garage_detector.lib.efficientnet package": [[174, null]], "brails.processors.garage_detector.lib.efficientnet.model module": [[175, null]], "brails.processors.garage_detector.lib.efficientnet.utils module": [[176, null]], "brails.processors.garage_detector.lib.efficientnet.utils_extra module": [[177, null]], "brails.processors.garage_detector.lib.infer_detector module": [[178, null]], "brails.processors.garage_detector.lib.train_detector module": [[179, null]], "brails.processors.garage_detector.lib.utils package": [[180, null]], "brails.processors.garage_detector.lib.utils.sync_batchnorm package": [[181, null]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm module": [[182, null]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module": [[183, null]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm module": [[184, null]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate module": [[185, null]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest module": [[186, null]], "brails.processors.garage_detector.lib.utils.utils module": [[187, null]], "brails.processors.gpt_base_model package": [[188, null]], "brails.processors.gpt_base_model.GPT module": [[189, null]], "brails.processors.gpt_base_model.utils module": [[190, null]], "brails.processors.image_classifier package": [[191, null]], "brails.processors.image_classifier.image_classifier module": [[192, null]], "brails.processors.image_processor module": [[193, null]], "brails.processors.image_segmenter package": [[194, null]], "brails.processors.image_segmenter.image_segmenter module": [[195, null]], "brails.processors.nFloor_gpt package": [[196, null]], "brails.processors.nFloor_gpt.nFloor_gpt module": [[197, null]], "brails.processors.nFloor_vlm package": [[198, null]], "brails.processors.nFloor_vlm.nFloor_vlm module": [[199, null]], "brails.processors.nfloors_detector package": [[200, null]], "brails.processors.nfloors_detector.lib package": [[201, null]], "brails.processors.nfloors_detector.lib.backbone module": [[202, null]], "brails.processors.nfloors_detector.lib.efficientdet package": [[203, null]], "brails.processors.nfloors_detector.lib.efficientdet.coco module": [[204, null]], "brails.processors.nfloors_detector.lib.efficientdet.config module": [[205, null]], "brails.processors.nfloors_detector.lib.efficientdet.dataset module": [[206, null]], "brails.processors.nfloors_detector.lib.efficientdet.loss module": [[207, null]], "brails.processors.nfloors_detector.lib.efficientdet.model module": [[208, null]], "brails.processors.nfloors_detector.lib.efficientdet.utils module": [[209, null]], "brails.processors.nfloors_detector.lib.efficientnet package": [[210, null]], "brails.processors.nfloors_detector.lib.efficientnet.model module": [[211, null]], "brails.processors.nfloors_detector.lib.efficientnet.utils module": [[212, null]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra module": [[213, null]], "brails.processors.nfloors_detector.lib.infer_detector module": [[214, null]], "brails.processors.nfloors_detector.lib.train_detector module": [[215, null]], "brails.processors.nfloors_detector.lib.utils package": [[216, null]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm package": [[217, null]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm module": [[218, null]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module": [[219, null]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm module": [[220, null]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate module": [[221, null]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest module": [[222, null]], "brails.processors.nfloors_detector.lib.utils.utils module": [[223, null]], "brails.processors.nfloors_detector.nfloor_detector module": [[224, null]], "brails.processors.occupancy_classifier package": [[225, null]], "brails.processors.occupancy_classifier.occupancy_classifier module": [[226, null]], "brails.processors.other_idea package": [[227, null]], "brails.processors.other_idea.arial_processing module": [[228, null]], "brails.processors.other_idea.street_processor module": [[229, null]], "brails.processors.roof_shape_classifier package": [[230, null]], "brails.processors.roof_shape_classifier.roof_shape_classifier module": [[231, null]], "brails.processors.roof_shape_gpt package": [[232, null]], "brails.processors.roof_shape_gpt.roof_shape_gpt module": [[233, null]], "brails.processors.roof_shape_vlm package": [[234, null]], "brails.processors.roof_shape_vlm.roof_shape_vlm module": [[235, null]], "brails.processors.street_level_damage_detection package": [[236, null]], "brails.processors.street_level_damage_detection.street_level_damage_detection module": [[237, null]], "brails.processors.vlm_image_classifier package": [[238, null]], "brails.processors.vlm_image_classifier.CLIPClassifier module": [[239, null]], "brails.processors.vlm_image_classifier.clip package": [[240, null]], "brails.processors.vlm_image_classifier.clip.clip module": [[241, null]], "brails.processors.vlm_image_classifier.clip.model module": [[242, null]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer module": [[243, null]], "brails.processors.vlm_image_classifier.clip.utils module": [[244, null]], "brails.processors.vlm_segmenter package": [[245, null]], "brails.processors.vlm_segmenter.grounded_sam_utils module": [[246, null]], "brails.processors.vlm_segmenter.segment_anything package": [[247, null]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator module": [[248, null]], "brails.processors.vlm_segmenter.segment_anything.build_sam module": [[249, null]], "brails.processors.vlm_segmenter.segment_anything.build_sam_hq module": [[250, null]], "brails.processors.vlm_segmenter.segment_anything.modeling package": [[251, null]], "brails.processors.vlm_segmenter.segment_anything.modeling.common module": [[252, null]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder module": [[253, null]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder module": [[254, null]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq module": [[255, null]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder module": [[256, null]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam module": [[257, null]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer module": [[258, null]], "brails.processors.vlm_segmenter.segment_anything.predictor module": [[259, null]], "brails.processors.vlm_segmenter.segment_anything.utils package": [[260, null]], "brails.processors.vlm_segmenter.segment_anything.utils.amg module": [[261, null]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx module": [[262, null]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms module": [[263, null]], "brails.processors.vlm_segmenter.vlm_segmenter module": [[264, null]], "brails.processors.year_built_classifier package": [[265, null]], "brails.processors.year_built_classifier.Resnet module": [[266, null]], "brails.processors.year_built_classifier.detect module": [[267, null]], "brails.processors.year_built_classifier.lib package": [[268, null]], "brails.processors.year_built_classifier.lib.datasets module": [[269, null]], "brails.processors.year_built_classifier.lib.utils module": [[270, null]], "brails.processors.year_built_classifier.model module": [[271, null]], "brails.processors.year_built_classifier.train module": [[272, null]], "brails.processors.year_built_classifier.weights package": [[273, null]], "brails.processors.year_built_classifier.year_built_classifier module": [[274, null]], "brails.scrapers package": [[275, null]], "brails.scrapers.asce_hazard_data_scraper package": [[276, null]], "brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper module": [[277, null]], "brails.scrapers.footprint_scraper module": [[278, null]], "brails.scrapers.google_satellite package": [[279, null]], "brails.scrapers.google_satellite.google_satellite module": [[280, null]], "brails.scrapers.google_streetview package": [[281, null]], "brails.scrapers.google_streetview.google_streetview module": [[282, null]], "brails.scrapers.image_scraper module": [[283, null]], "brails.scrapers.ms_footprint_scraper package": [[284, null]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler module": [[285, null]], "brails.scrapers.nbi_scraper package": [[286, null]], "brails.scrapers.nbi_scraper.nbi_scraper module": [[287, null]], "brails.scrapers.nsi_parser package": [[288, null]], "brails.scrapers.nsi_parser.nsi_parser module": [[289, null]], "brails.scrapers.nti_scraper package": [[290, null]], "brails.scrapers.nti_scraper.nti_scraper module": [[291, null]], "brails.scrapers.osm_footprint_scraper package": [[292, null]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper module": [[293, null]], "brails.scrapers.osm_power_network_scraper package": [[294, null]], "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper module": [[295, null]], "brails.scrapers.overture_maps_scraper package": [[296, null]], "brails.scrapers.overture_maps_scraper.overture_maps_scraper module": [[297, null]], "brails.scrapers.rapid_image_processors package": [[298, null]], "brails.scrapers.rapid_image_processors.rapid_image_processors module": [[299, null]], "brails.scrapers.usa_footprint_scraper package": [[300, null]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper module": [[301, null]], "brails.scrapers.user_footprints module": [[302, null]], "brails.types package": [[303, null]], "brails.types.asset_inventory module": [[304, null]], "brails.types.image_set module": [[305, null]], "brails.types.region_boundary module": [[306, null]], "brails.utils package": [[307, null]], "brails.utils.arcgisapi_service_helper module": [[308, null]], "brails.utils.geo_tools module": [[309, null]], "brails.utils.importer module": [[310, null]], "brails.utils.input_validator module": [[311, null]], "brails.utils.inventory_validator module": [[312, null]], "brails.utils.model_utils module": [[313, null]], "brails.utils.plot_tools module": [[314, null]], "brails.utils.segmentation_utils module": [[315, null]], "brails.utils.spatial_join_methods package": [[316, null]], "brails.utils.spatial_join_methods.base module": [[317, null]], "brails.utils.spatial_join_methods.distance_based_point_matcher module": [[318, null]], "brails.utils.spatial_join_methods.get_points_in_polygons module": [[319, null]], "brails.utils.spatial_join_methods.get_points_near_polygons module": [[320, null]], "brails.utils.unit_converter module": [[321, null]], "brailsPlusPlus": [[323, null]], "conf module": [[322, null]], "setup module": [[324, null]]}, "docnames": ["brails/processors/foundation_classifier/README", "brails/processors/year_built_classifier/README", "docs/rst-code/brails", "docs/rst-code/brails.exceptions", "docs/rst-code/brails.filters", "docs/rst-code/brails.filters.filter", "docs/rst-code/brails.filters.house_view", "docs/rst-code/brails.filters.house_view.house_view", "docs/rst-code/brails.imputers", "docs/rst-code/brails.imputers.imputation", "docs/rst-code/brails.imputers.knn_imputer", "docs/rst-code/brails.imputers.knn_imputer.knn_imputer", "docs/rst-code/brails.inferers", "docs/rst-code/brails.inferers.hazus_inferer", "docs/rst-code/brails.inferers.hazus_inferer.hazus_inferer", "docs/rst-code/brails.inferers.hazus_inferer.hazus_rulesets", "docs/rst-code/brails.inferers.hazus_inferer_earthquake", "docs/rst-code/brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake", "docs/rst-code/brails.inferers.hazus_inferer_flood", "docs/rst-code/brails.inferers.hazus_inferer_flood.hazus_inferer_flood", "docs/rst-code/brails.inferers.hazus_inferer_wind", "docs/rst-code/brails.inferers.hazus_inferer_wind.BuildingClassRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindCECBRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindCERBRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindEFRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMECBRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMERBRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMHRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMLRIRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMLRMRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMMUHRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMSFRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMetaVarRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindSECBRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindSERBRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindSPMBRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindWMUHRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindWSFRulesets", "docs/rst-code/brails.inferers.hazus_inferer_wind.auto_HU_NJ", "docs/rst-code/brails.inferers.hazus_inferer_wind.hazus_inferer_wind", "docs/rst-code/brails.inferers.inferenceEngine", "docs/rst-code/brails.inferers.simcenter_inferer", "docs/rst-code/brails.inferers.simcenter_inferer.simCenter_inferer", "docs/rst-code/brails.inferers.user_inferer", "docs/rst-code/brails.inferers.user_inferer.content_value_inferer", "docs/rst-code/brails.inferers.user_inferer.floor_area_inferer", "docs/rst-code/brails.inferers.user_inferer.user_inferer", "docs/rst-code/brails.processors", "docs/rst-code/brails.processors.building_material_llm", "docs/rst-code/brails.processors.building_material_llm.building_material_llm", "docs/rst-code/brails.processors.chimney_detector", "docs/rst-code/brails.processors.chimney_detector.chimney_detector", "docs/rst-code/brails.processors.chimney_detector.lib", "docs/rst-code/brails.processors.chimney_detector.lib.backbone", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.coco", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.config", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.dataset", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.loss", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.model", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.utils", "docs/rst-code/brails.processors.chimney_detector.lib.efficientnet", "docs/rst-code/brails.processors.chimney_detector.lib.efficientnet.model", "docs/rst-code/brails.processors.chimney_detector.lib.efficientnet.utils", "docs/rst-code/brails.processors.chimney_detector.lib.efficientnet.utils_extra", "docs/rst-code/brails.processors.chimney_detector.lib.infer_detector", "docs/rst-code/brails.processors.chimney_detector.lib.train_detector", "docs/rst-code/brails.processors.chimney_detector.lib.utils", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest", "docs/rst-code/brails.processors.chimney_detector.lib.utils.utils", "docs/rst-code/brails.processors.cons_type_classifier", "docs/rst-code/brails.processors.cons_type_classifier.ConstructionTypeClassifier", "docs/rst-code/brails.processors.facade_parser", "docs/rst-code/brails.processors.facade_parser.facade_parser", "docs/rst-code/brails.processors.ffh_predictor_klepac", "docs/rst-code/brails.processors.ffh_predictor_klepac.ffh_predictor_klepac", "docs/rst-code/brails.processors.foundation_classifier", "docs/rst-code/brails.processors.foundation_classifier.attention_utils", "docs/rst-code/brails.processors.foundation_classifier.attention_utils.radam", "docs/rst-code/brails.processors.foundation_classifier.attention_utils.utils", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation", "docs/rst-code/brails.processors.foundation_classifier.detect", "docs/rst-code/brails.processors.foundation_classifier.foundation_classifier", "docs/rst-code/brails.processors.foundation_classifier.lib", "docs/rst-code/brails.processors.foundation_classifier.lib.LinearAverage", "docs/rst-code/brails.processors.foundation_classifier.lib.NCEAverage", "docs/rst-code/brails.processors.foundation_classifier.lib.NCECriterion", "docs/rst-code/brails.processors.foundation_classifier.lib.alias_multinomial", "docs/rst-code/brails.processors.foundation_classifier.lib.custom_transforms", "docs/rst-code/brails.processors.foundation_classifier.lib.normalize", "docs/rst-code/brails.processors.foundation_classifier.lib.utils", "docs/rst-code/brails.processors.foundation_classifier.models", "docs/rst-code/brails.processors.foundation_classifier.models.attention_module", "docs/rst-code/brails.processors.foundation_classifier.models.basic_layer", "docs/rst-code/brails.processors.foundation_classifier.models.residual_attention_network", "docs/rst-code/brails.processors.foundation_classifier.models.resnet_applied", "docs/rst-code/brails.processors.foundation_classifier.models.sknet", "docs/rst-code/brails.processors.foundation_classifier.npid", "docs/rst-code/brails.processors.foundation_classifier.npid.MDistance", "docs/rst-code/brails.processors.foundation_classifier.npid.cifar", "docs/rst-code/brails.processors.foundation_classifier.npid.main", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_datasets", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_datasets.cifar", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_datasets.folder", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_datasets.mnist", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.LinearAverage", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCEAverage", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCECriterion", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.custom_transforms", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.normalize", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.utils", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_models", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet_cifar", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_toolbox", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances", "docs/rst-code/brails.processors.foundation_classifier.npid.test", "docs/rst-code/brails.processors.foundation_classifier.save_masked_images", "docs/rst-code/brails.processors.foundation_classifier.train", "docs/rst-code/brails.processors.foundation_classifier.utils", "docs/rst-code/brails.processors.foundation_classifier.utils.Datasets", "docs/rst-code/brails.processors.foundation_classifier.utils.generate_csv", "docs/rst-code/brails.processors.garage_detector", "docs/rst-code/brails.processors.garage_detector.garage_detector", "docs/rst-code/brails.processors.garage_detector.lib", "docs/rst-code/brails.processors.garage_detector.lib.backbone", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.coco", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.config", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.dataset", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.loss", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.model", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.utils", "docs/rst-code/brails.processors.garage_detector.lib.efficientnet", "docs/rst-code/brails.processors.garage_detector.lib.efficientnet.model", "docs/rst-code/brails.processors.garage_detector.lib.efficientnet.utils", "docs/rst-code/brails.processors.garage_detector.lib.efficientnet.utils_extra", "docs/rst-code/brails.processors.garage_detector.lib.infer_detector", "docs/rst-code/brails.processors.garage_detector.lib.train_detector", "docs/rst-code/brails.processors.garage_detector.lib.utils", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.comm", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest", "docs/rst-code/brails.processors.garage_detector.lib.utils.utils", "docs/rst-code/brails.processors.gpt_base_model", "docs/rst-code/brails.processors.gpt_base_model.GPT", "docs/rst-code/brails.processors.gpt_base_model.utils", "docs/rst-code/brails.processors.image_classifier", "docs/rst-code/brails.processors.image_classifier.image_classifier", "docs/rst-code/brails.processors.image_processor", "docs/rst-code/brails.processors.image_segmenter", "docs/rst-code/brails.processors.image_segmenter.image_segmenter", "docs/rst-code/brails.processors.nFloor_gpt", "docs/rst-code/brails.processors.nFloor_gpt.nFloor_gpt", "docs/rst-code/brails.processors.nFloor_vlm", "docs/rst-code/brails.processors.nFloor_vlm.nFloor_vlm", "docs/rst-code/brails.processors.nfloors_detector", "docs/rst-code/brails.processors.nfloors_detector.lib", "docs/rst-code/brails.processors.nfloors_detector.lib.backbone", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.coco", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.config", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.dataset", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.loss", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.model", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.utils", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientnet", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientnet.model", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils_extra", "docs/rst-code/brails.processors.nfloors_detector.lib.infer_detector", "docs/rst-code/brails.processors.nfloors_detector.lib.train_detector", "docs/rst-code/brails.processors.nfloors_detector.lib.utils", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.utils", "docs/rst-code/brails.processors.nfloors_detector.nfloor_detector", "docs/rst-code/brails.processors.occupancy_classifier", "docs/rst-code/brails.processors.occupancy_classifier.occupancy_classifier", "docs/rst-code/brails.processors.other_idea", "docs/rst-code/brails.processors.other_idea.arial_processing", "docs/rst-code/brails.processors.other_idea.street_processor", "docs/rst-code/brails.processors.roof_shape_classifier", "docs/rst-code/brails.processors.roof_shape_classifier.roof_shape_classifier", "docs/rst-code/brails.processors.roof_shape_gpt", "docs/rst-code/brails.processors.roof_shape_gpt.roof_shape_gpt", "docs/rst-code/brails.processors.roof_shape_vlm", "docs/rst-code/brails.processors.roof_shape_vlm.roof_shape_vlm", "docs/rst-code/brails.processors.street_level_damage_detection", "docs/rst-code/brails.processors.street_level_damage_detection.street_level_damage_detection", "docs/rst-code/brails.processors.vlm_image_classifier", "docs/rst-code/brails.processors.vlm_image_classifier.CLIPClassifier", "docs/rst-code/brails.processors.vlm_image_classifier.clip", "docs/rst-code/brails.processors.vlm_image_classifier.clip.clip", "docs/rst-code/brails.processors.vlm_image_classifier.clip.model", "docs/rst-code/brails.processors.vlm_image_classifier.clip.simple_tokenizer", "docs/rst-code/brails.processors.vlm_image_classifier.clip.utils", "docs/rst-code/brails.processors.vlm_segmenter", "docs/rst-code/brails.processors.vlm_segmenter.grounded_sam_utils", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam_hq", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.common", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.sam", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.transformer", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.predictor", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.utils", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.utils.amg", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.utils.onnx", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.utils.transforms", "docs/rst-code/brails.processors.vlm_segmenter.vlm_segmenter", "docs/rst-code/brails.processors.year_built_classifier", "docs/rst-code/brails.processors.year_built_classifier.Resnet", "docs/rst-code/brails.processors.year_built_classifier.detect", "docs/rst-code/brails.processors.year_built_classifier.lib", "docs/rst-code/brails.processors.year_built_classifier.lib.datasets", "docs/rst-code/brails.processors.year_built_classifier.lib.utils", "docs/rst-code/brails.processors.year_built_classifier.model", "docs/rst-code/brails.processors.year_built_classifier.train", "docs/rst-code/brails.processors.year_built_classifier.weights", "docs/rst-code/brails.processors.year_built_classifier.year_built_classifier", "docs/rst-code/brails.scrapers", "docs/rst-code/brails.scrapers.asce_hazard_data_scraper", "docs/rst-code/brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper", "docs/rst-code/brails.scrapers.footprint_scraper", "docs/rst-code/brails.scrapers.google_satellite", "docs/rst-code/brails.scrapers.google_satellite.google_satellite", "docs/rst-code/brails.scrapers.google_streetview", "docs/rst-code/brails.scrapers.google_streetview.google_streetview", "docs/rst-code/brails.scrapers.image_scraper", "docs/rst-code/brails.scrapers.ms_footprint_scraper", "docs/rst-code/brails.scrapers.ms_footprint_scraper.ms_footprint_handler", "docs/rst-code/brails.scrapers.nbi_scraper", "docs/rst-code/brails.scrapers.nbi_scraper.nbi_scraper", "docs/rst-code/brails.scrapers.nsi_parser", "docs/rst-code/brails.scrapers.nsi_parser.nsi_parser", "docs/rst-code/brails.scrapers.nti_scraper", "docs/rst-code/brails.scrapers.nti_scraper.nti_scraper", "docs/rst-code/brails.scrapers.osm_footprint_scraper", "docs/rst-code/brails.scrapers.osm_footprint_scraper.osm_footprint_scraper", "docs/rst-code/brails.scrapers.osm_power_network_scraper", "docs/rst-code/brails.scrapers.osm_power_network_scraper.osm_power_network_scraper", "docs/rst-code/brails.scrapers.overture_maps_scraper", "docs/rst-code/brails.scrapers.overture_maps_scraper.overture_maps_scraper", "docs/rst-code/brails.scrapers.rapid_image_processors", "docs/rst-code/brails.scrapers.rapid_image_processors.rapid_image_processors", "docs/rst-code/brails.scrapers.usa_footprint_scraper", "docs/rst-code/brails.scrapers.usa_footprint_scraper.usa_footprint_scraper", "docs/rst-code/brails.scrapers.user_footprints", "docs/rst-code/brails.types", "docs/rst-code/brails.types.asset_inventory", "docs/rst-code/brails.types.image_set", "docs/rst-code/brails.types.region_boundary", "docs/rst-code/brails.utils", "docs/rst-code/brails.utils.arcgisapi_service_helper", "docs/rst-code/brails.utils.geo_tools", "docs/rst-code/brails.utils.importer", "docs/rst-code/brails.utils.input_validator", "docs/rst-code/brails.utils.inventory_validator", "docs/rst-code/brails.utils.model_utils", "docs/rst-code/brails.utils.plot_tools", "docs/rst-code/brails.utils.segmentation_utils", "docs/rst-code/brails.utils.spatial_join_methods", "docs/rst-code/brails.utils.spatial_join_methods.base", "docs/rst-code/brails.utils.spatial_join_methods.distance_based_point_matcher", "docs/rst-code/brails.utils.spatial_join_methods.get_points_in_polygons", "docs/rst-code/brails.utils.spatial_join_methods.get_points_near_polygons", "docs/rst-code/brails.utils.unit_converter", "docs/rst-code/conf", "docs/rst-code/modules", "docs/rst-code/setup", "examples/examples", "examples/footprint/footprint", "examples/image_downloads/image_downloads", "examples/image_filters/image_filters", "examples/image_processor/image_processors", "examples/importer/importer", "examples/imputation/imputation", "examples/nsi_integration/nsi_integration", "index", "rst-doc/about", "rst-doc/acknowledgements", "rst-doc/cite", "rst-doc/install", "rst-doc/license"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["brails/processors/foundation_classifier/README.rst", "brails/processors/year_built_classifier/README.rst", "docs/rst-code/brails.rst", "docs/rst-code/brails.exceptions.rst", "docs/rst-code/brails.filters.rst", "docs/rst-code/brails.filters.filter.rst", "docs/rst-code/brails.filters.house_view.rst", "docs/rst-code/brails.filters.house_view.house_view.rst", "docs/rst-code/brails.imputers.rst", "docs/rst-code/brails.imputers.imputation.rst", "docs/rst-code/brails.imputers.knn_imputer.rst", "docs/rst-code/brails.imputers.knn_imputer.knn_imputer.rst", "docs/rst-code/brails.inferers.rst", "docs/rst-code/brails.inferers.hazus_inferer.rst", "docs/rst-code/brails.inferers.hazus_inferer.hazus_inferer.rst", "docs/rst-code/brails.inferers.hazus_inferer.hazus_rulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_earthquake.rst", "docs/rst-code/brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.rst", "docs/rst-code/brails.inferers.hazus_inferer_flood.rst", "docs/rst-code/brails.inferers.hazus_inferer_flood.hazus_inferer_flood.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.BuildingClassRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindCECBRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindCERBRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindEFRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMECBRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMERBRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMHRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMLRIRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMLRMRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMMUHRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMSFRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindSECBRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindSERBRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindSPMBRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindWMUHRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.WindWSFRulesets.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.auto_HU_NJ.rst", "docs/rst-code/brails.inferers.hazus_inferer_wind.hazus_inferer_wind.rst", "docs/rst-code/brails.inferers.inferenceEngine.rst", "docs/rst-code/brails.inferers.simcenter_inferer.rst", "docs/rst-code/brails.inferers.simcenter_inferer.simCenter_inferer.rst", "docs/rst-code/brails.inferers.user_inferer.rst", "docs/rst-code/brails.inferers.user_inferer.content_value_inferer.rst", "docs/rst-code/brails.inferers.user_inferer.floor_area_inferer.rst", "docs/rst-code/brails.inferers.user_inferer.user_inferer.rst", "docs/rst-code/brails.processors.rst", "docs/rst-code/brails.processors.building_material_llm.rst", "docs/rst-code/brails.processors.building_material_llm.building_material_llm.rst", "docs/rst-code/brails.processors.chimney_detector.rst", "docs/rst-code/brails.processors.chimney_detector.chimney_detector.rst", "docs/rst-code/brails.processors.chimney_detector.lib.rst", "docs/rst-code/brails.processors.chimney_detector.lib.backbone.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.coco.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.config.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.dataset.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.loss.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.model.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientdet.utils.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientnet.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientnet.model.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientnet.utils.rst", "docs/rst-code/brails.processors.chimney_detector.lib.efficientnet.utils_extra.rst", "docs/rst-code/brails.processors.chimney_detector.lib.infer_detector.rst", "docs/rst-code/brails.processors.chimney_detector.lib.train_detector.rst", "docs/rst-code/brails.processors.chimney_detector.lib.utils.rst", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.rst", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.rst", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.rst", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.rst", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.rst", "docs/rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.rst", "docs/rst-code/brails.processors.chimney_detector.lib.utils.utils.rst", "docs/rst-code/brails.processors.cons_type_classifier.rst", "docs/rst-code/brails.processors.cons_type_classifier.ConstructionTypeClassifier.rst", "docs/rst-code/brails.processors.facade_parser.rst", "docs/rst-code/brails.processors.facade_parser.facade_parser.rst", "docs/rst-code/brails.processors.ffh_predictor_klepac.rst", "docs/rst-code/brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.rst", "docs/rst-code/brails.processors.foundation_classifier.rst", "docs/rst-code/brails.processors.foundation_classifier.attention_utils.rst", "docs/rst-code/brails.processors.foundation_classifier.attention_utils.radam.rst", "docs/rst-code/brails.processors.foundation_classifier.attention_utils.utils.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.rst", "docs/rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.rst", "docs/rst-code/brails.processors.foundation_classifier.detect.rst", "docs/rst-code/brails.processors.foundation_classifier.foundation_classifier.rst", "docs/rst-code/brails.processors.foundation_classifier.lib.rst", "docs/rst-code/brails.processors.foundation_classifier.lib.LinearAverage.rst", "docs/rst-code/brails.processors.foundation_classifier.lib.NCEAverage.rst", "docs/rst-code/brails.processors.foundation_classifier.lib.NCECriterion.rst", "docs/rst-code/brails.processors.foundation_classifier.lib.alias_multinomial.rst", "docs/rst-code/brails.processors.foundation_classifier.lib.custom_transforms.rst", "docs/rst-code/brails.processors.foundation_classifier.lib.normalize.rst", "docs/rst-code/brails.processors.foundation_classifier.lib.utils.rst", "docs/rst-code/brails.processors.foundation_classifier.models.rst", "docs/rst-code/brails.processors.foundation_classifier.models.attention_module.rst", "docs/rst-code/brails.processors.foundation_classifier.models.basic_layer.rst", "docs/rst-code/brails.processors.foundation_classifier.models.residual_attention_network.rst", "docs/rst-code/brails.processors.foundation_classifier.models.resnet_applied.rst", "docs/rst-code/brails.processors.foundation_classifier.models.sknet.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.MDistance.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.cifar.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.main.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_datasets.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_datasets.cifar.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_datasets.folder.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_datasets.mnist.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.normalize.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_lib.utils.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_models.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet_cifar.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_toolbox.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances.rst", "docs/rst-code/brails.processors.foundation_classifier.npid.test.rst", "docs/rst-code/brails.processors.foundation_classifier.save_masked_images.rst", "docs/rst-code/brails.processors.foundation_classifier.train.rst", "docs/rst-code/brails.processors.foundation_classifier.utils.rst", "docs/rst-code/brails.processors.foundation_classifier.utils.Datasets.rst", "docs/rst-code/brails.processors.foundation_classifier.utils.generate_csv.rst", "docs/rst-code/brails.processors.garage_detector.rst", "docs/rst-code/brails.processors.garage_detector.garage_detector.rst", "docs/rst-code/brails.processors.garage_detector.lib.rst", "docs/rst-code/brails.processors.garage_detector.lib.backbone.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.coco.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.config.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.dataset.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.loss.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.model.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientdet.utils.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientnet.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientnet.model.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientnet.utils.rst", "docs/rst-code/brails.processors.garage_detector.lib.efficientnet.utils_extra.rst", "docs/rst-code/brails.processors.garage_detector.lib.infer_detector.rst", "docs/rst-code/brails.processors.garage_detector.lib.train_detector.rst", "docs/rst-code/brails.processors.garage_detector.lib.utils.rst", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.rst", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.rst", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.rst", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.rst", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.rst", "docs/rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.rst", "docs/rst-code/brails.processors.garage_detector.lib.utils.utils.rst", "docs/rst-code/brails.processors.gpt_base_model.rst", "docs/rst-code/brails.processors.gpt_base_model.GPT.rst", "docs/rst-code/brails.processors.gpt_base_model.utils.rst", "docs/rst-code/brails.processors.image_classifier.rst", "docs/rst-code/brails.processors.image_classifier.image_classifier.rst", "docs/rst-code/brails.processors.image_processor.rst", "docs/rst-code/brails.processors.image_segmenter.rst", "docs/rst-code/brails.processors.image_segmenter.image_segmenter.rst", "docs/rst-code/brails.processors.nFloor_gpt.rst", "docs/rst-code/brails.processors.nFloor_gpt.nFloor_gpt.rst", "docs/rst-code/brails.processors.nFloor_vlm.rst", "docs/rst-code/brails.processors.nFloor_vlm.nFloor_vlm.rst", "docs/rst-code/brails.processors.nfloors_detector.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.backbone.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.coco.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.config.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.dataset.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.loss.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.model.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientdet.utils.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientnet.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientnet.model.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils_extra.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.infer_detector.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.train_detector.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.rst", "docs/rst-code/brails.processors.nfloors_detector.lib.utils.utils.rst", "docs/rst-code/brails.processors.nfloors_detector.nfloor_detector.rst", "docs/rst-code/brails.processors.occupancy_classifier.rst", "docs/rst-code/brails.processors.occupancy_classifier.occupancy_classifier.rst", "docs/rst-code/brails.processors.other_idea.rst", "docs/rst-code/brails.processors.other_idea.arial_processing.rst", "docs/rst-code/brails.processors.other_idea.street_processor.rst", "docs/rst-code/brails.processors.roof_shape_classifier.rst", "docs/rst-code/brails.processors.roof_shape_classifier.roof_shape_classifier.rst", "docs/rst-code/brails.processors.roof_shape_gpt.rst", "docs/rst-code/brails.processors.roof_shape_gpt.roof_shape_gpt.rst", "docs/rst-code/brails.processors.roof_shape_vlm.rst", "docs/rst-code/brails.processors.roof_shape_vlm.roof_shape_vlm.rst", "docs/rst-code/brails.processors.street_level_damage_detection.rst", "docs/rst-code/brails.processors.street_level_damage_detection.street_level_damage_detection.rst", "docs/rst-code/brails.processors.vlm_image_classifier.rst", "docs/rst-code/brails.processors.vlm_image_classifier.CLIPClassifier.rst", "docs/rst-code/brails.processors.vlm_image_classifier.clip.rst", "docs/rst-code/brails.processors.vlm_image_classifier.clip.clip.rst", "docs/rst-code/brails.processors.vlm_image_classifier.clip.model.rst", "docs/rst-code/brails.processors.vlm_image_classifier.clip.simple_tokenizer.rst", "docs/rst-code/brails.processors.vlm_image_classifier.clip.utils.rst", "docs/rst-code/brails.processors.vlm_segmenter.rst", "docs/rst-code/brails.processors.vlm_segmenter.grounded_sam_utils.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam_hq.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.common.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.sam.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.transformer.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.predictor.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.utils.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.utils.amg.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.utils.onnx.rst", "docs/rst-code/brails.processors.vlm_segmenter.segment_anything.utils.transforms.rst", "docs/rst-code/brails.processors.vlm_segmenter.vlm_segmenter.rst", "docs/rst-code/brails.processors.year_built_classifier.rst", "docs/rst-code/brails.processors.year_built_classifier.Resnet.rst", "docs/rst-code/brails.processors.year_built_classifier.detect.rst", "docs/rst-code/brails.processors.year_built_classifier.lib.rst", "docs/rst-code/brails.processors.year_built_classifier.lib.datasets.rst", "docs/rst-code/brails.processors.year_built_classifier.lib.utils.rst", "docs/rst-code/brails.processors.year_built_classifier.model.rst", "docs/rst-code/brails.processors.year_built_classifier.train.rst", "docs/rst-code/brails.processors.year_built_classifier.weights.rst", "docs/rst-code/brails.processors.year_built_classifier.year_built_classifier.rst", "docs/rst-code/brails.scrapers.rst", "docs/rst-code/brails.scrapers.asce_hazard_data_scraper.rst", "docs/rst-code/brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper.rst", "docs/rst-code/brails.scrapers.footprint_scraper.rst", "docs/rst-code/brails.scrapers.google_satellite.rst", "docs/rst-code/brails.scrapers.google_satellite.google_satellite.rst", "docs/rst-code/brails.scrapers.google_streetview.rst", "docs/rst-code/brails.scrapers.google_streetview.google_streetview.rst", "docs/rst-code/brails.scrapers.image_scraper.rst", "docs/rst-code/brails.scrapers.ms_footprint_scraper.rst", "docs/rst-code/brails.scrapers.ms_footprint_scraper.ms_footprint_handler.rst", "docs/rst-code/brails.scrapers.nbi_scraper.rst", "docs/rst-code/brails.scrapers.nbi_scraper.nbi_scraper.rst", "docs/rst-code/brails.scrapers.nsi_parser.rst", "docs/rst-code/brails.scrapers.nsi_parser.nsi_parser.rst", "docs/rst-code/brails.scrapers.nti_scraper.rst", "docs/rst-code/brails.scrapers.nti_scraper.nti_scraper.rst", "docs/rst-code/brails.scrapers.osm_footprint_scraper.rst", "docs/rst-code/brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.rst", "docs/rst-code/brails.scrapers.osm_power_network_scraper.rst", "docs/rst-code/brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.rst", "docs/rst-code/brails.scrapers.overture_maps_scraper.rst", "docs/rst-code/brails.scrapers.overture_maps_scraper.overture_maps_scraper.rst", "docs/rst-code/brails.scrapers.rapid_image_processors.rst", "docs/rst-code/brails.scrapers.rapid_image_processors.rapid_image_processors.rst", "docs/rst-code/brails.scrapers.usa_footprint_scraper.rst", "docs/rst-code/brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.rst", "docs/rst-code/brails.scrapers.user_footprints.rst", "docs/rst-code/brails.types.rst", "docs/rst-code/brails.types.asset_inventory.rst", "docs/rst-code/brails.types.image_set.rst", "docs/rst-code/brails.types.region_boundary.rst", "docs/rst-code/brails.utils.rst", "docs/rst-code/brails.utils.arcgisapi_service_helper.rst", "docs/rst-code/brails.utils.geo_tools.rst", "docs/rst-code/brails.utils.importer.rst", "docs/rst-code/brails.utils.input_validator.rst", "docs/rst-code/brails.utils.inventory_validator.rst", "docs/rst-code/brails.utils.model_utils.rst", "docs/rst-code/brails.utils.plot_tools.rst", "docs/rst-code/brails.utils.segmentation_utils.rst", "docs/rst-code/brails.utils.spatial_join_methods.rst", "docs/rst-code/brails.utils.spatial_join_methods.base.rst", "docs/rst-code/brails.utils.spatial_join_methods.distance_based_point_matcher.rst", "docs/rst-code/brails.utils.spatial_join_methods.get_points_in_polygons.rst", "docs/rst-code/brails.utils.spatial_join_methods.get_points_near_polygons.rst", "docs/rst-code/brails.utils.unit_converter.rst", "docs/rst-code/conf.rst", "docs/rst-code/modules.rst", "docs/rst-code/setup.rst", "examples/examples.rst", "examples/footprint/footprint.rst", "examples/image_downloads/image_downloads.rst", "examples/image_filters/image_filters.rst", "examples/image_processor/image_processors.rst", "examples/importer/importer.rst", "examples/imputation/imputation.rst", "examples/nsi_integration/nsi_integration.rst", "index.rst", "rst-doc/about.rst", "rst-doc/acknowledgements.rst", "rst-doc/cite.rst", "rst-doc/install.rst", "rst-doc/license.rst"], "indexentries": {"accuracy() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.accuracy", false]], "adamw (class in brails.processors.foundation_classifier.attention_utils.radam)": [[83, "brails.processors.foundation_classifier.attention_utils.radam.AdamW", false]], "add() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.add", false]], "add_asset() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.add_asset", false]], "add_asset_coordinates() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.add_asset_coordinates", false]], "add_asset_features() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.add_asset_features", false]], "add_asset_features_from_csv() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.add_asset_features_from_csv", false]], "add_decomposed_rel_pos() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.add_decomposed_rel_pos", false]], "add_default() (in module brails.inferers.hazus_inferer_wind.windmetavarrulesets)": [[32, "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.add_default", false]], "add_features() (brails.types.asset_inventory.asset method)": [[304, "brails.types.asset_inventory.Asset.add_features", false]], "add_features_to_asset() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.add_features_to_asset", false]], "add_image() (brails.types.image_set.imageset method)": [[305, "brails.types.image_set.ImageSet.add_image", false]], "add_model_predictions() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.add_model_predictions", false]], "addgaussiannoise (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.AddGaussianNoise", false]], "addgaussiannoise (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.AddGaussianNoise", false]], "addgaussianpoissonnoise (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.AddGaussianPoissonNoise", false]], "addgaussianpoissonnoise (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.AddGaussianPoissonNoise", false]], "addspecklenoise (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.AddSpeckleNoise", false]], "addspecklenoise (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.AddSpeckleNoise", false]], "aggregate_predictions() (in module brails.processors.vlm_image_classifier.clip.utils)": [[244, "brails.processors.vlm_image_classifier.clip.utils.aggregate_predictions", false]], "aliasmethod (class in brails.processors.foundation_classifier.lib.alias_multinomial)": [[126, "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod", false]], "aliasmethod (class in brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial)": [[148, "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod", false]], "anchors (class in brails.processors.chimney_detector.lib.efficientdet.utils)": [[60, "brails.processors.chimney_detector.lib.efficientdet.utils.Anchors", false]], "anchors (class in brails.processors.garage_detector.lib.efficientdet.utils)": [[173, "brails.processors.garage_detector.lib.efficientdet.utils.Anchors", false]], "anchors (class in brails.processors.nfloors_detector.lib.efficientdet.utils)": [[209, "brails.processors.nfloors_detector.lib.efficientdet.utils.Anchors", false]], "apply_boxes() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[263, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_boxes", false]], "apply_boxes_torch() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[263, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_boxes_torch", false]], "apply_coords() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[263, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_coords", false]], "apply_coords_torch() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[263, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_coords_torch", false]], "apply_image() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[263, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_image", false]], "apply_image_torch() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[263, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_image_torch", false]], "arcgisapiservicehelper (class in brails.utils.arcgisapi_service_helper)": [[308, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper", false]], "area_from_rle() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.area_from_rle", false]], "arialprocessing (class in brails.processors.other_idea.arial_processing)": [[228, "brails.processors.other_idea.arial_processing.ArialProcessing", false]], "as_numpy() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest)": [[99, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.as_numpy", false]], "as_numpy() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.as_numpy", false]], "as_variable() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.as_variable", false]], "aspectaware_resize_padding() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.aspectaware_resize_padding", false]], "aspectaware_resize_padding() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.aspectaware_resize_padding", false]], "aspectaware_resize_padding() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.aspectaware_resize_padding", false]], "asserttensorclose() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.torchtestcase method)": [[73, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase.assertTensorClose", false]], "asserttensorclose() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.torchtestcase method)": [[99, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.TorchTestCase.assertTensorClose", false]], "asserttensorclose() (brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.torchtestcase method)": [[186, "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase.assertTensorClose", false]], "asserttensorclose() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.torchtestcase method)": [[222, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase.assertTensorClose", false]], "asset (class in brails.types.asset_inventory)": [[304, "brails.types.asset_inventory.Asset", false]], "assetinventory (class in brails.types.asset_inventory)": [[304, "brails.types.asset_inventory.AssetInventory", false]], "async_copy_to() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.async_copy_to", false]], "attention (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Attention", false]], "attention (class in brails.processors.vlm_segmenter.segment_anything.modeling.transformer)": [[258, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.Attention", false]], "attention() (brails.processors.vlm_image_classifier.clip.model.residualattentionblock method)": [[242, "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock.attention", false]], "attentionmodule_pre (class in brails.processors.foundation_classifier.models.attention_module)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_pre", false]], "attentionmodule_stage0 (class in brails.processors.foundation_classifier.models.attention_module)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage0", false]], "attentionmodule_stage1 (class in brails.processors.foundation_classifier.models.attention_module)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1", false]], "attentionmodule_stage1_cifar (class in brails.processors.foundation_classifier.models.attention_module)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1_cifar", false]], "attentionmodule_stage2 (class in brails.processors.foundation_classifier.models.attention_module)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2", false]], "attentionmodule_stage2_cifar (class in brails.processors.foundation_classifier.models.attention_module)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2_cifar", false]], "attentionmodule_stage3 (class in brails.processors.foundation_classifier.models.attention_module)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3", false]], "attentionmodule_stage3_cifar (class in brails.processors.foundation_classifier.models.attention_module)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3_cifar", false]], "attentionpool2d (class in brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.AttentionPool2d", false]], "augmenter (class in brails.processors.chimney_detector.lib.efficientdet.dataset)": [[57, "brails.processors.chimney_detector.lib.efficientdet.dataset.Augmenter", false]], "augmenter (class in brails.processors.garage_detector.lib.efficientdet.dataset)": [[170, "brails.processors.garage_detector.lib.efficientdet.dataset.Augmenter", false]], "augmenter (class in brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[206, "brails.processors.nfloors_detector.lib.efficientdet.dataset.Augmenter", false]], "auto_populate() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[19, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.auto_populate", false]], "auto_populate() (in module brails.inferers.hazus_inferer_wind.auto_hu_nj)": [[38, "brails.inferers.hazus_inferer_wind.auto_HU_NJ.auto_populate", false]], "available_models() (in module brails.processors.vlm_image_classifier.clip.clip)": [[241, "brails.processors.vlm_image_classifier.clip.clip.available_models", false]], "average() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.average", false]], "averagemeter (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter", false]], "averagemeter (class in brails.processors.foundation_classifier.lib.utils)": [[129, "brails.processors.foundation_classifier.lib.utils.AverageMeter", false]], "averagemeter (class in brails.processors.foundation_classifier.npid.npid_lib.utils)": [[151, "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter", false]], "backward() (brails.processors.chimney_detector.lib.efficientnet.utils.swishimplementation static method)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation.backward", false]], "backward() (brails.processors.foundation_classifier.lib.linearaverage.linearaverageop static method)": [[123, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp.backward", false]], "backward() (brails.processors.foundation_classifier.lib.nceaverage.ncefunction static method)": [[124, "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction.backward", false]], "backward() (brails.processors.foundation_classifier.npid.npid_lib.linearaverage.linearaverageop static method)": [[145, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp.backward", false]], "backward() (brails.processors.foundation_classifier.npid.npid_lib.nceaverage.ncefunction static method)": [[146, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction.backward", false]], "backward() (brails.processors.garage_detector.lib.efficientnet.utils.swishimplementation static method)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation.backward", false]], "backward() (brails.processors.nfloors_detector.lib.efficientnet.utils.swishimplementation static method)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation.backward", false]], "base_folder (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[141, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.base_folder", false]], "base_folder (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.base_folder", false]], "basedataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[90, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset", false]], "basic_clean() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[243, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.basic_clean", false]], "basicconv (class in brails.processors.year_built_classifier.model)": [[271, "brails.processors.year_built_classifier.model.BasicConv", false]], "batch_iterator() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.batch_iterator", false]], "batch_norm_epsilon (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.batch_norm_epsilon", false]], "batch_norm_epsilon (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.batch_norm_epsilon", false]], "batch_norm_epsilon (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.batch_norm_epsilon", false]], "batch_norm_momentum (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.batch_norm_momentum", false]], "batch_norm_momentum (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.batch_norm_momentum", false]], "batch_norm_momentum (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.batch_norm_momentum", false]], "batched_mask_to_box() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.batched_mask_to_box", false]], "batchnorm2dreimpl (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl)": [[70, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl", false]], "batchnorm2dreimpl (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl)": [[183, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl", false]], "batchnorm2dreimpl (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl)": [[219, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl", false]], "batchsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.BatchSampler", false]], "bboxtransform (class in brails.processors.chimney_detector.lib.efficientdet.utils)": [[60, "brails.processors.chimney_detector.lib.efficientdet.utils.BBoxTransform", false]], "bboxtransform (class in brails.processors.garage_detector.lib.efficientdet.utils)": [[173, "brails.processors.garage_detector.lib.efficientdet.utils.BBoxTransform", false]], "bboxtransform (class in brails.processors.nfloors_detector.lib.efficientdet.utils)": [[209, "brails.processors.nfloors_detector.lib.efficientdet.utils.BBoxTransform", false]], "bifpn (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.BiFPN", false]], "bifpn (class in brails.processors.garage_detector.lib.efficientdet.model)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.BiFPN", false]], "bifpn (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.BiFPN", false]], "bilinearresize (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.BilinearResize", false]], "bilinearresize (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.BilinearResize", false]], "block (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Block", false]], "blockargs (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs", false]], "blockargs (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs", false]], "blockargs (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs", false]], "blockdecoder (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder", false]], "blockdecoder (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder", false]], "blockdecoder (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder", false]], "boolean_string() (in module brails.processors.chimney_detector.lib.train_detector)": [[66, "brails.processors.chimney_detector.lib.train_detector.boolean_string", false]], "boolean_string() (in module brails.processors.garage_detector.lib.train_detector)": [[179, "brails.processors.garage_detector.lib.train_detector.boolean_string", false]], "boolean_string() (in module brails.processors.nfloors_detector.lib.train_detector)": [[215, "brails.processors.nfloors_detector.lib.train_detector.boolean_string", false]], "bottleneck (class in brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.Bottleneck", false]], "boundingbox (class in brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox", false]], "box (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[7, "brails.filters.house_view.house_view.FilterDetectionResult.box", false]], "box (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.box", false]], "box_xyxy_to_xywh() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.box_xyxy_to_xywh", false]], "bpe() (brails.processors.vlm_image_classifier.clip.simple_tokenizer.simpletokenizer method)": [[243, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer.bpe", false]], "brails": [[2, "module-brails", false]], "brails.exceptions": [[3, "module-brails.exceptions", false]], "brails.filters": [[4, "module-brails.filters", false]], "brails.filters.filter": [[5, "module-brails.filters.filter", false]], "brails.filters.house_view": [[6, "module-brails.filters.house_view", false]], "brails.filters.house_view.house_view": [[7, "module-brails.filters.house_view.house_view", false]], "brails.imputers": [[8, "module-brails.imputers", false]], "brails.imputers.imputation": [[9, "module-brails.imputers.imputation", false]], "brails.imputers.knn_imputer": [[10, "module-brails.imputers.knn_imputer", false]], "brails.imputers.knn_imputer.knn_imputer": [[11, "module-brails.imputers.knn_imputer.knn_imputer", false]], "brails.inferers": [[12, "module-brails.inferers", false]], "brails.inferers.hazus_inferer": [[13, "module-brails.inferers.hazus_inferer", false]], "brails.inferers.hazus_inferer.hazus_inferer": [[14, "module-brails.inferers.hazus_inferer.hazus_inferer", false]], "brails.inferers.hazus_inferer.hazus_rulesets": [[15, "module-brails.inferers.hazus_inferer.hazus_rulesets", false]], "brails.inferers.hazus_inferer_earthquake": [[16, "module-brails.inferers.hazus_inferer_earthquake", false]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake": [[17, "module-brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake", false]], "brails.inferers.hazus_inferer_flood": [[18, "module-brails.inferers.hazus_inferer_flood", false]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood": [[19, "module-brails.inferers.hazus_inferer_flood.hazus_inferer_flood", false]], "brails.inferers.hazus_inferer_wind": [[20, "module-brails.inferers.hazus_inferer_wind", false]], "brails.inferers.hazus_inferer_wind.auto_hu_nj": [[38, "module-brails.inferers.hazus_inferer_wind.auto_HU_NJ", false]], "brails.inferers.hazus_inferer_wind.buildingclassrulesets": [[21, "module-brails.inferers.hazus_inferer_wind.BuildingClassRulesets", false]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind": [[39, "module-brails.inferers.hazus_inferer_wind.hazus_inferer_wind", false]], "brails.inferers.hazus_inferer_wind.windcecbrulesets": [[22, "module-brails.inferers.hazus_inferer_wind.WindCECBRulesets", false]], "brails.inferers.hazus_inferer_wind.windcerbrulesets": [[23, "module-brails.inferers.hazus_inferer_wind.WindCERBRulesets", false]], "brails.inferers.hazus_inferer_wind.windefrulesets": [[24, "module-brails.inferers.hazus_inferer_wind.WindEFRulesets", false]], "brails.inferers.hazus_inferer_wind.windmecbrulesets": [[25, "module-brails.inferers.hazus_inferer_wind.WindMECBRulesets", false]], "brails.inferers.hazus_inferer_wind.windmerbrulesets": [[26, "module-brails.inferers.hazus_inferer_wind.WindMERBRulesets", false]], "brails.inferers.hazus_inferer_wind.windmetavarrulesets": [[32, "module-brails.inferers.hazus_inferer_wind.WindMetaVarRulesets", false]], "brails.inferers.hazus_inferer_wind.windmhrulesets": [[27, "module-brails.inferers.hazus_inferer_wind.WindMHRulesets", false]], "brails.inferers.hazus_inferer_wind.windmlrirulesets": [[28, "module-brails.inferers.hazus_inferer_wind.WindMLRIRulesets", false]], "brails.inferers.hazus_inferer_wind.windmlrmrulesets": [[29, "module-brails.inferers.hazus_inferer_wind.WindMLRMRulesets", false]], "brails.inferers.hazus_inferer_wind.windmmuhrulesets": [[30, "module-brails.inferers.hazus_inferer_wind.WindMMUHRulesets", false]], "brails.inferers.hazus_inferer_wind.windmsfrulesets": [[31, "module-brails.inferers.hazus_inferer_wind.WindMSFRulesets", false]], "brails.inferers.hazus_inferer_wind.windsecbrulesets": [[33, "module-brails.inferers.hazus_inferer_wind.WindSECBRulesets", false]], "brails.inferers.hazus_inferer_wind.windserbrulesets": [[34, "module-brails.inferers.hazus_inferer_wind.WindSERBRulesets", false]], "brails.inferers.hazus_inferer_wind.windspmbrulesets": [[35, "module-brails.inferers.hazus_inferer_wind.WindSPMBRulesets", false]], "brails.inferers.hazus_inferer_wind.windwmuhrulesets": [[36, "module-brails.inferers.hazus_inferer_wind.WindWMUHRulesets", false]], "brails.inferers.hazus_inferer_wind.windwsfrulesets": [[37, "module-brails.inferers.hazus_inferer_wind.WindWSFRulesets", false]], "brails.inferers.inferenceengine": [[40, "module-brails.inferers.inferenceEngine", false]], "brails.inferers.simcenter_inferer": [[41, "module-brails.inferers.simcenter_inferer", false]], "brails.inferers.simcenter_inferer.simcenter_inferer": [[42, "module-brails.inferers.simcenter_inferer.simCenter_inferer", false]], "brails.inferers.user_inferer": [[43, "module-brails.inferers.user_inferer", false]], "brails.inferers.user_inferer.content_value_inferer": [[44, "module-brails.inferers.user_inferer.content_value_inferer", false]], "brails.inferers.user_inferer.floor_area_inferer": [[45, "module-brails.inferers.user_inferer.floor_area_inferer", false]], "brails.inferers.user_inferer.user_inferer": [[46, "module-brails.inferers.user_inferer.user_inferer", false]], "brails.processors": [[47, "module-brails.processors", false]], "brails.processors.building_material_llm": [[48, "module-brails.processors.building_material_llm", false]], "brails.processors.building_material_llm.building_material_llm": [[49, "module-brails.processors.building_material_llm.building_material_llm", false]], "brails.processors.chimney_detector": [[50, "module-brails.processors.chimney_detector", false]], "brails.processors.chimney_detector.chimney_detector": [[51, "module-brails.processors.chimney_detector.chimney_detector", false]], "brails.processors.chimney_detector.lib": [[52, "module-brails.processors.chimney_detector.lib", false]], "brails.processors.chimney_detector.lib.backbone": [[53, "module-brails.processors.chimney_detector.lib.backbone", false]], "brails.processors.chimney_detector.lib.efficientdet": [[54, "module-brails.processors.chimney_detector.lib.efficientdet", false]], "brails.processors.chimney_detector.lib.efficientdet.coco": [[55, "module-brails.processors.chimney_detector.lib.efficientdet.coco", false]], "brails.processors.chimney_detector.lib.efficientdet.config": [[56, "module-brails.processors.chimney_detector.lib.efficientdet.config", false]], "brails.processors.chimney_detector.lib.efficientdet.dataset": [[57, "module-brails.processors.chimney_detector.lib.efficientdet.dataset", false]], "brails.processors.chimney_detector.lib.efficientdet.loss": [[58, "module-brails.processors.chimney_detector.lib.efficientdet.loss", false]], "brails.processors.chimney_detector.lib.efficientdet.model": [[59, "module-brails.processors.chimney_detector.lib.efficientdet.model", false]], "brails.processors.chimney_detector.lib.efficientdet.utils": [[60, "module-brails.processors.chimney_detector.lib.efficientdet.utils", false]], "brails.processors.chimney_detector.lib.efficientnet": [[61, "module-brails.processors.chimney_detector.lib.efficientnet", false]], "brails.processors.chimney_detector.lib.efficientnet.model": [[62, "module-brails.processors.chimney_detector.lib.efficientnet.model", false]], "brails.processors.chimney_detector.lib.efficientnet.utils": [[63, "module-brails.processors.chimney_detector.lib.efficientnet.utils", false]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra": [[64, "module-brails.processors.chimney_detector.lib.efficientnet.utils_extra", false]], "brails.processors.chimney_detector.lib.infer_detector": [[65, "module-brails.processors.chimney_detector.lib.infer_detector", false]], "brails.processors.chimney_detector.lib.train_detector": [[66, "module-brails.processors.chimney_detector.lib.train_detector", false]], "brails.processors.chimney_detector.lib.utils": [[67, "module-brails.processors.chimney_detector.lib.utils", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm": [[68, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm": [[69, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[70, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm": [[71, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate": [[72, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest": [[73, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest", false]], "brails.processors.chimney_detector.lib.utils.utils": [[74, "module-brails.processors.chimney_detector.lib.utils.utils", false]], "brails.processors.cons_type_classifier": [[75, "module-brails.processors.cons_type_classifier", false]], "brails.processors.cons_type_classifier.constructiontypeclassifier": [[76, "module-brails.processors.cons_type_classifier.ConstructionTypeClassifier", false]], "brails.processors.facade_parser": [[77, "module-brails.processors.facade_parser", false]], "brails.processors.facade_parser.facade_parser": [[78, "module-brails.processors.facade_parser.facade_parser", false]], "brails.processors.ffh_predictor_klepac": [[79, "module-brails.processors.ffh_predictor_klepac", false]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac": [[80, "module-brails.processors.ffh_predictor_klepac.ffh_predictor_klepac", false]], "brails.processors.foundation_classifier": [[81, "module-brails.processors.foundation_classifier", false]], "brails.processors.foundation_classifier.attention_utils": [[82, "module-brails.processors.foundation_classifier.attention_utils", false]], "brails.processors.foundation_classifier.attention_utils.radam": [[83, "module-brails.processors.foundation_classifier.attention_utils.radam", false]], "brails.processors.foundation_classifier.attention_utils.utils": [[84, "module-brails.processors.foundation_classifier.attention_utils.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool": [[85, "module-brails.processors.foundation_classifier.csail_segmentation_tool", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg": [[86, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config": [[87, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults": [[88, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data": [[89, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset": [[90, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib": [[93, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn": [[94, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules": [[95, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm": [[96, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm": [[97, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate": [[98, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest": [[99, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel": [[100, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel": [[101, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils": [[102, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset": [[105, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler": [[107, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th": [[108, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models": [[109, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet": [[110, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet": [[111, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models": [[112, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet": [[113, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext": [[114, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils": [[115, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils": [[118, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation": [[119, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation", false]], "brails.processors.foundation_classifier.lib": [[122, "module-brails.processors.foundation_classifier.lib", false]], "brails.processors.foundation_classifier.lib.alias_multinomial": [[126, "module-brails.processors.foundation_classifier.lib.alias_multinomial", false]], "brails.processors.foundation_classifier.lib.custom_transforms": [[127, "module-brails.processors.foundation_classifier.lib.custom_transforms", false]], "brails.processors.foundation_classifier.lib.linearaverage": [[123, "module-brails.processors.foundation_classifier.lib.LinearAverage", false]], "brails.processors.foundation_classifier.lib.nceaverage": [[124, "module-brails.processors.foundation_classifier.lib.NCEAverage", false]], "brails.processors.foundation_classifier.lib.ncecriterion": [[125, "module-brails.processors.foundation_classifier.lib.NCECriterion", false]], "brails.processors.foundation_classifier.lib.normalize": [[128, "module-brails.processors.foundation_classifier.lib.normalize", false]], "brails.processors.foundation_classifier.lib.utils": [[129, "module-brails.processors.foundation_classifier.lib.utils", false]], "brails.processors.foundation_classifier.models": [[130, "module-brails.processors.foundation_classifier.models", false]], "brails.processors.foundation_classifier.models.attention_module": [[131, "module-brails.processors.foundation_classifier.models.attention_module", false]], "brails.processors.foundation_classifier.models.basic_layer": [[132, "module-brails.processors.foundation_classifier.models.basic_layer", false]], "brails.processors.foundation_classifier.models.residual_attention_network": [[133, "module-brails.processors.foundation_classifier.models.residual_attention_network", false]], "brails.processors.foundation_classifier.models.resnet_applied": [[134, "module-brails.processors.foundation_classifier.models.resnet_applied", false]], "brails.processors.foundation_classifier.models.sknet": [[135, "module-brails.processors.foundation_classifier.models.sknet", false]], "brails.processors.foundation_classifier.npid": [[136, "module-brails.processors.foundation_classifier.npid", false]], "brails.processors.foundation_classifier.npid.npid_datasets": [[140, "module-brails.processors.foundation_classifier.npid.npid_datasets", false]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar": [[141, "module-brails.processors.foundation_classifier.npid.npid_datasets.cifar", false]], "brails.processors.foundation_classifier.npid.npid_datasets.folder": [[142, "module-brails.processors.foundation_classifier.npid.npid_datasets.folder", false]], "brails.processors.foundation_classifier.npid.npid_datasets.mnist": [[143, "module-brails.processors.foundation_classifier.npid.npid_datasets.mnist", false]], "brails.processors.foundation_classifier.npid.npid_lib": [[144, "module-brails.processors.foundation_classifier.npid.npid_lib", false]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial": [[148, "module-brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial", false]], "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms": [[149, "module-brails.processors.foundation_classifier.npid.npid_lib.custom_transforms", false]], "brails.processors.foundation_classifier.npid.npid_lib.linearaverage": [[145, "module-brails.processors.foundation_classifier.npid.npid_lib.LinearAverage", false]], "brails.processors.foundation_classifier.npid.npid_lib.nceaverage": [[146, "module-brails.processors.foundation_classifier.npid.npid_lib.NCEAverage", false]], "brails.processors.foundation_classifier.npid.npid_lib.ncecriterion": [[147, "module-brails.processors.foundation_classifier.npid.npid_lib.NCECriterion", false]], "brails.processors.foundation_classifier.npid.npid_lib.normalize": [[150, "module-brails.processors.foundation_classifier.npid.npid_lib.normalize", false]], "brails.processors.foundation_classifier.npid.npid_lib.utils": [[151, "module-brails.processors.foundation_classifier.npid.npid_lib.utils", false]], "brails.processors.foundation_classifier.npid.npid_toolbox": [[155, "module-brails.processors.foundation_classifier.npid.npid_toolbox", false]], "brails.processors.foundation_classifier.utils": [[160, "module-brails.processors.foundation_classifier.utils", false]], "brails.processors.garage_detector": [[163, "module-brails.processors.garage_detector", false]], "brails.processors.garage_detector.garage_detector": [[164, "module-brails.processors.garage_detector.garage_detector", false]], "brails.processors.garage_detector.lib": [[165, "module-brails.processors.garage_detector.lib", false]], "brails.processors.garage_detector.lib.backbone": [[166, "module-brails.processors.garage_detector.lib.backbone", false]], "brails.processors.garage_detector.lib.efficientdet": [[167, "module-brails.processors.garage_detector.lib.efficientdet", false]], "brails.processors.garage_detector.lib.efficientdet.coco": [[168, "module-brails.processors.garage_detector.lib.efficientdet.coco", false]], "brails.processors.garage_detector.lib.efficientdet.config": [[169, "module-brails.processors.garage_detector.lib.efficientdet.config", false]], "brails.processors.garage_detector.lib.efficientdet.dataset": [[170, "module-brails.processors.garage_detector.lib.efficientdet.dataset", false]], "brails.processors.garage_detector.lib.efficientdet.loss": [[171, "module-brails.processors.garage_detector.lib.efficientdet.loss", false]], "brails.processors.garage_detector.lib.efficientdet.model": [[172, "module-brails.processors.garage_detector.lib.efficientdet.model", false]], "brails.processors.garage_detector.lib.efficientdet.utils": [[173, "module-brails.processors.garage_detector.lib.efficientdet.utils", false]], "brails.processors.garage_detector.lib.efficientnet": [[174, "module-brails.processors.garage_detector.lib.efficientnet", false]], "brails.processors.garage_detector.lib.efficientnet.model": [[175, "module-brails.processors.garage_detector.lib.efficientnet.model", false]], "brails.processors.garage_detector.lib.efficientnet.utils": [[176, "module-brails.processors.garage_detector.lib.efficientnet.utils", false]], "brails.processors.garage_detector.lib.efficientnet.utils_extra": [[177, "module-brails.processors.garage_detector.lib.efficientnet.utils_extra", false]], "brails.processors.garage_detector.lib.infer_detector": [[178, "module-brails.processors.garage_detector.lib.infer_detector", false]], "brails.processors.garage_detector.lib.train_detector": [[179, "module-brails.processors.garage_detector.lib.train_detector", false]], "brails.processors.garage_detector.lib.utils": [[180, "module-brails.processors.garage_detector.lib.utils", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm": [[181, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm": [[182, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[183, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm": [[184, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.comm", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate": [[185, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest": [[186, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest", false]], "brails.processors.garage_detector.lib.utils.utils": [[187, "module-brails.processors.garage_detector.lib.utils.utils", false]], "brails.processors.gpt_base_model": [[188, "module-brails.processors.gpt_base_model", false]], "brails.processors.gpt_base_model.gpt": [[189, "module-brails.processors.gpt_base_model.GPT", false]], "brails.processors.gpt_base_model.utils": [[190, "module-brails.processors.gpt_base_model.utils", false]], "brails.processors.image_classifier": [[191, "module-brails.processors.image_classifier", false]], "brails.processors.image_classifier.image_classifier": [[192, "module-brails.processors.image_classifier.image_classifier", false]], "brails.processors.image_processor": [[193, "module-brails.processors.image_processor", false]], "brails.processors.image_segmenter": [[194, "module-brails.processors.image_segmenter", false]], "brails.processors.nfloor_gpt": [[196, "module-brails.processors.nFloor_gpt", false]], "brails.processors.nfloor_gpt.nfloor_gpt": [[197, "module-brails.processors.nFloor_gpt.nFloor_gpt", false]], "brails.processors.nfloor_vlm": [[198, "module-brails.processors.nFloor_vlm", false]], "brails.processors.nfloor_vlm.nfloor_vlm": [[199, "module-brails.processors.nFloor_vlm.nFloor_vlm", false]], "brails.processors.nfloors_detector": [[200, "module-brails.processors.nfloors_detector", false]], "brails.processors.nfloors_detector.lib": [[201, "module-brails.processors.nfloors_detector.lib", false]], "brails.processors.nfloors_detector.lib.backbone": [[202, "module-brails.processors.nfloors_detector.lib.backbone", false]], "brails.processors.nfloors_detector.lib.efficientdet": [[203, "module-brails.processors.nfloors_detector.lib.efficientdet", false]], "brails.processors.nfloors_detector.lib.efficientdet.coco": [[204, "module-brails.processors.nfloors_detector.lib.efficientdet.coco", false]], "brails.processors.nfloors_detector.lib.efficientdet.config": [[205, "module-brails.processors.nfloors_detector.lib.efficientdet.config", false]], "brails.processors.nfloors_detector.lib.efficientdet.dataset": [[206, "module-brails.processors.nfloors_detector.lib.efficientdet.dataset", false]], "brails.processors.nfloors_detector.lib.efficientdet.loss": [[207, "module-brails.processors.nfloors_detector.lib.efficientdet.loss", false]], "brails.processors.nfloors_detector.lib.efficientdet.model": [[208, "module-brails.processors.nfloors_detector.lib.efficientdet.model", false]], "brails.processors.nfloors_detector.lib.efficientdet.utils": [[209, "module-brails.processors.nfloors_detector.lib.efficientdet.utils", false]], "brails.processors.nfloors_detector.lib.efficientnet": [[210, "module-brails.processors.nfloors_detector.lib.efficientnet", false]], "brails.processors.nfloors_detector.lib.efficientnet.model": [[211, "module-brails.processors.nfloors_detector.lib.efficientnet.model", false]], "brails.processors.nfloors_detector.lib.efficientnet.utils": [[212, "module-brails.processors.nfloors_detector.lib.efficientnet.utils", false]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra": [[213, "module-brails.processors.nfloors_detector.lib.efficientnet.utils_extra", false]], "brails.processors.nfloors_detector.lib.infer_detector": [[214, "module-brails.processors.nfloors_detector.lib.infer_detector", false]], "brails.processors.nfloors_detector.lib.train_detector": [[215, "module-brails.processors.nfloors_detector.lib.train_detector", false]], "brails.processors.nfloors_detector.lib.utils": [[216, "module-brails.processors.nfloors_detector.lib.utils", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm": [[217, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm": [[218, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[219, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm": [[220, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate": [[221, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest": [[222, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest", false]], "brails.processors.nfloors_detector.lib.utils.utils": [[223, "module-brails.processors.nfloors_detector.lib.utils.utils", false]], "brails.processors.nfloors_detector.nfloor_detector": [[224, "module-brails.processors.nfloors_detector.nfloor_detector", false]], "brails.processors.occupancy_classifier": [[225, "module-brails.processors.occupancy_classifier", false]], "brails.processors.occupancy_classifier.occupancy_classifier": [[226, "module-brails.processors.occupancy_classifier.occupancy_classifier", false]], "brails.processors.other_idea": [[227, "module-brails.processors.other_idea", false]], "brails.processors.other_idea.arial_processing": [[228, "module-brails.processors.other_idea.arial_processing", false]], "brails.processors.other_idea.street_processor": [[229, "module-brails.processors.other_idea.street_processor", false]], "brails.processors.roof_shape_classifier": [[230, "module-brails.processors.roof_shape_classifier", false]], "brails.processors.roof_shape_classifier.roof_shape_classifier": [[231, "module-brails.processors.roof_shape_classifier.roof_shape_classifier", false]], "brails.processors.roof_shape_gpt": [[232, "module-brails.processors.roof_shape_gpt", false]], "brails.processors.roof_shape_gpt.roof_shape_gpt": [[233, "module-brails.processors.roof_shape_gpt.roof_shape_gpt", false]], "brails.processors.roof_shape_vlm": [[234, "module-brails.processors.roof_shape_vlm", false]], "brails.processors.roof_shape_vlm.roof_shape_vlm": [[235, "module-brails.processors.roof_shape_vlm.roof_shape_vlm", false]], "brails.processors.street_level_damage_detection": [[236, "module-brails.processors.street_level_damage_detection", false]], "brails.processors.street_level_damage_detection.street_level_damage_detection": [[237, "module-brails.processors.street_level_damage_detection.street_level_damage_detection", false]], "brails.processors.vlm_image_classifier": [[238, "module-brails.processors.vlm_image_classifier", false]], "brails.processors.vlm_image_classifier.clip": [[240, "module-brails.processors.vlm_image_classifier.clip", false]], "brails.processors.vlm_image_classifier.clip.clip": [[241, "module-brails.processors.vlm_image_classifier.clip.clip", false]], "brails.processors.vlm_image_classifier.clip.model": [[242, "module-brails.processors.vlm_image_classifier.clip.model", false]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer": [[243, "module-brails.processors.vlm_image_classifier.clip.simple_tokenizer", false]], "brails.processors.vlm_image_classifier.clip.utils": [[244, "module-brails.processors.vlm_image_classifier.clip.utils", false]], "brails.processors.vlm_image_classifier.clipclassifier": [[239, "module-brails.processors.vlm_image_classifier.CLIPClassifier", false]], "brails.processors.vlm_segmenter": [[245, "module-brails.processors.vlm_segmenter", false]], "brails.processors.vlm_segmenter.grounded_sam_utils": [[246, "module-brails.processors.vlm_segmenter.grounded_sam_utils", false]], "brails.processors.vlm_segmenter.segment_anything": [[247, "module-brails.processors.vlm_segmenter.segment_anything", false]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator": [[248, "module-brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator", false]], "brails.processors.vlm_segmenter.segment_anything.build_sam": [[249, "module-brails.processors.vlm_segmenter.segment_anything.build_sam", false]], "brails.processors.vlm_segmenter.segment_anything.build_sam_hq": [[250, "module-brails.processors.vlm_segmenter.segment_anything.build_sam_hq", false]], "brails.processors.vlm_segmenter.segment_anything.modeling": [[251, "module-brails.processors.vlm_segmenter.segment_anything.modeling", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.common": [[252, "module-brails.processors.vlm_segmenter.segment_anything.modeling.common", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder": [[253, "module-brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder": [[254, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq": [[255, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder": [[256, "module-brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam": [[257, "module-brails.processors.vlm_segmenter.segment_anything.modeling.sam", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer": [[258, "module-brails.processors.vlm_segmenter.segment_anything.modeling.transformer", false]], "brails.processors.vlm_segmenter.segment_anything.predictor": [[259, "module-brails.processors.vlm_segmenter.segment_anything.predictor", false]], "brails.processors.vlm_segmenter.segment_anything.utils": [[260, "module-brails.processors.vlm_segmenter.segment_anything.utils", false]], "brails.processors.vlm_segmenter.segment_anything.utils.amg": [[261, "module-brails.processors.vlm_segmenter.segment_anything.utils.amg", false]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx": [[262, "module-brails.processors.vlm_segmenter.segment_anything.utils.onnx", false]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms": [[263, "module-brails.processors.vlm_segmenter.segment_anything.utils.transforms", false]], "brails.processors.vlm_segmenter.vlm_segmenter": [[264, "module-brails.processors.vlm_segmenter.vlm_segmenter", false]], "brails.processors.year_built_classifier": [[265, "module-brails.processors.year_built_classifier", false]], "brails.processors.year_built_classifier.lib": [[268, "module-brails.processors.year_built_classifier.lib", false]], "brails.processors.year_built_classifier.lib.utils": [[270, "module-brails.processors.year_built_classifier.lib.utils", false]], "brails.processors.year_built_classifier.model": [[271, "module-brails.processors.year_built_classifier.model", false]], "brails.processors.year_built_classifier.resnet": [[266, "module-brails.processors.year_built_classifier.Resnet", false]], "brails.processors.year_built_classifier.weights": [[273, "module-brails.processors.year_built_classifier.weights", false]], "brails.scrapers": [[275, "module-brails.scrapers", false]], "brails.scrapers.asce_hazard_data_scraper": [[276, "module-brails.scrapers.asce_hazard_data_scraper", false]], "brails.scrapers.footprint_scraper": [[278, "module-brails.scrapers.footprint_scraper", false]], "brails.scrapers.google_satellite": [[279, "module-brails.scrapers.google_satellite", false]], "brails.scrapers.google_satellite.google_satellite": [[280, "module-brails.scrapers.google_satellite.google_satellite", false]], "brails.scrapers.google_streetview": [[281, "module-brails.scrapers.google_streetview", false]], "brails.scrapers.google_streetview.google_streetview": [[282, "module-brails.scrapers.google_streetview.google_streetview", false]], "brails.scrapers.image_scraper": [[283, "module-brails.scrapers.image_scraper", false]], "brails.scrapers.ms_footprint_scraper": [[284, "module-brails.scrapers.ms_footprint_scraper", false]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler": [[285, "module-brails.scrapers.ms_footprint_scraper.ms_footprint_handler", false]], "brails.scrapers.nbi_scraper": [[286, "module-brails.scrapers.nbi_scraper", false]], "brails.scrapers.nbi_scraper.nbi_scraper": [[287, "module-brails.scrapers.nbi_scraper.nbi_scraper", false]], "brails.scrapers.nsi_parser": [[288, "module-brails.scrapers.nsi_parser", false]], "brails.scrapers.nsi_parser.nsi_parser": [[289, "module-brails.scrapers.nsi_parser.nsi_parser", false]], "brails.scrapers.nti_scraper": [[290, "module-brails.scrapers.nti_scraper", false]], "brails.scrapers.nti_scraper.nti_scraper": [[291, "module-brails.scrapers.nti_scraper.nti_scraper", false]], "brails.scrapers.osm_footprint_scraper": [[292, "module-brails.scrapers.osm_footprint_scraper", false]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper": [[293, "module-brails.scrapers.osm_footprint_scraper.osm_footprint_scraper", false]], "brails.scrapers.osm_power_network_scraper": [[294, "module-brails.scrapers.osm_power_network_scraper", false]], "brails.scrapers.overture_maps_scraper": [[296, "module-brails.scrapers.overture_maps_scraper", false]], "brails.scrapers.rapid_image_processors": [[298, "module-brails.scrapers.rapid_image_processors", false]], "brails.scrapers.rapid_image_processors.rapid_image_processors": [[299, "module-brails.scrapers.rapid_image_processors.rapid_image_processors", false]], "brails.scrapers.usa_footprint_scraper": [[300, "module-brails.scrapers.usa_footprint_scraper", false]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper": [[301, "module-brails.scrapers.usa_footprint_scraper.usa_footprint_scraper", false]], "brails.scrapers.user_footprints": [[302, "module-brails.scrapers.user_footprints", false]], "brails.types": [[303, "module-brails.types", false]], "brails.types.asset_inventory": [[304, "module-brails.types.asset_inventory", false]], "brails.types.image_set": [[305, "module-brails.types.image_set", false]], "brails.types.region_boundary": [[306, "module-brails.types.region_boundary", false]], "brails.utils": [[307, "module-brails.utils", false]], "brails.utils.arcgisapi_service_helper": [[308, "module-brails.utils.arcgisapi_service_helper", false]], "brails.utils.geo_tools": [[309, "module-brails.utils.geo_tools", false]], "brails.utils.importer": [[310, "module-brails.utils.importer", false]], "brails.utils.input_validator": [[311, "module-brails.utils.input_validator", false]], "brails.utils.inventory_validator": [[312, "module-brails.utils.inventory_validator", false]], "brails.utils.model_utils": [[313, "module-brails.utils.model_utils", false]], "brails.utils.plot_tools": [[314, "module-brails.utils.plot_tools", false]], "brails.utils.segmentation_utils": [[315, "module-brails.utils.segmentation_utils", false]], "brails.utils.spatial_join_methods": [[316, "module-brails.utils.spatial_join_methods", false]], "brails.utils.spatial_join_methods.base": [[317, "module-brails.utils.spatial_join_methods.base", false]], "brails.utils.spatial_join_methods.distance_based_point_matcher": [[318, "module-brails.utils.spatial_join_methods.distance_based_point_matcher", false]], "brails.utils.spatial_join_methods.get_points_in_polygons": [[319, "module-brails.utils.spatial_join_methods.get_points_in_polygons", false]], "brails.utils.spatial_join_methods.get_points_near_polygons": [[320, "module-brails.utils.spatial_join_methods.get_points_near_polygons", false]], "brails.utils.unit_converter": [[321, "module-brails.utils.unit_converter", false]], "brailserror": [[3, "brails.exceptions.BrailsError", false]], "build_all_layer_point_grids() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.build_all_layer_point_grids", false]], "build_attention_mask() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[242, "brails.processors.vlm_image_classifier.clip.model.CLIP.build_attention_mask", false]], "build_decoder() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.modelbuilder static method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder.build_decoder", false]], "build_encoder() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.modelbuilder static method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder.build_encoder", false]], "build_model() (in module brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.build_model", false]], "build_models() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.build_models", false]], "build_point_grid() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.build_point_grid", false]], "build_sam() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[249, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam", false]], "build_sam_hq() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[250, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq", false]], "build_sam_hq_vit_b() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[250, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq_vit_b", false]], "build_sam_hq_vit_h() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[250, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq_vit_h", false]], "build_sam_hq_vit_l() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[250, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq_vit_l", false]], "build_sam_vit_b() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[249, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam_vit_b", false]], "build_sam_vit_h() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[249, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam_vit_h", false]], "build_sam_vit_l() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[249, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam_vit_l", false]], "building_class() (in module brails.inferers.hazus_inferer_wind.buildingclassrulesets)": [[21, "brails.inferers.hazus_inferer_wind.BuildingClassRulesets.building_class", false]], "buildingmaterialllm (class in brails.processors.building_material_llm.building_material_llm)": [[49, "brails.processors.building_material_llm.building_material_llm.BuildingMaterialLLM", false]], "bytes_to_unicode() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[243, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.bytes_to_unicode", false]], "c1 (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1", false]], "c1deepsup (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1DeepSup", false]], "calc_iou() (in module brails.processors.chimney_detector.lib.efficientdet.loss)": [[58, "brails.processors.chimney_detector.lib.efficientdet.loss.calc_iou", false]], "calc_iou() (in module brails.processors.garage_detector.lib.efficientdet.loss)": [[171, "brails.processors.garage_detector.lib.efficientdet.loss.calc_iou", false]], "calc_iou() (in module brails.processors.nfloors_detector.lib.efficientdet.loss)": [[207, "brails.processors.nfloors_detector.lib.efficientdet.loss.calc_iou", false]], "calculate_stability_score() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.calculate_stability_score", false]], "callbackcontext (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[72, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.CallbackContext", false]], "callbackcontext (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[98, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.CallbackContext", false]], "callbackcontext (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[185, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.CallbackContext", false]], "callbackcontext (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[221, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.CallbackContext", false]], "cat() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.cat", false]], "categorize_and_split_cells() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[308, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.categorize_and_split_cells", false]], "category_in_df_to_indices() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[11, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.category_in_df_to_indices", false]], "cecb_config() (in module brails.inferers.hazus_inferer_wind.windcecbrulesets)": [[22, "brails.inferers.hazus_inferer_wind.WindCECBRulesets.CECB_config", false]], "center_crop() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.center_crop", false]], "center_crop() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.center_crop", false]], "centercropnumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.CenterCropNumpy", false]], "centercropnumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.CenterCropNumpy", false]], "cerb_config() (in module brails.inferers.hazus_inferer_wind.windcerbrulesets)": [[23, "brails.inferers.hazus_inferer_wind.WindCERBRulesets.CERB_config", false]], "change_feature_names() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.change_feature_names", false]], "check_keys() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.check_keys", false]], "check_keys() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[17, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.check_keys", false]], "chimneydetector (class in brails.processors.chimney_detector.chimney_detector)": [[51, "brails.processors.chimney_detector.chimney_detector.ChimneyDetector", false]], "cifar100instance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance", false]], "cifar100instance (class in brails.processors.foundation_classifier.npid.npid_datasets.cifar)": [[141, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance", false]], "cifar10instance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR10Instance", false]], "cifar10instance (class in brails.processors.foundation_classifier.npid.npid_datasets.cifar)": [[141, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR10Instance", false]], "classifier (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.Classifier", false]], "classifier (class in brails.processors.garage_detector.lib.efficientdet.model)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.Classifier", false]], "classifier (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.Classifier", false]], "clean_floats() (in module brails.types.asset_inventory)": [[304, "brails.types.asset_inventory.clean_floats", false]], "clip (class in brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.CLIP", false]], "clipboxes (class in brails.processors.chimney_detector.lib.efficientdet.utils)": [[60, "brails.processors.chimney_detector.lib.efficientdet.utils.ClipBoxes", false]], "clipboxes (class in brails.processors.garage_detector.lib.efficientdet.utils)": [[173, "brails.processors.garage_detector.lib.efficientdet.utils.ClipBoxes", false]], "clipboxes (class in brails.processors.nfloors_detector.lib.efficientdet.utils)": [[209, "brails.processors.nfloors_detector.lib.efficientdet.utils.ClipBoxes", false]], "clipclassifier (class in brails.processors.vlm_image_classifier.clipclassifier)": [[239, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier", false]], "clustering() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[11, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.clustering", false]], "coco (class in brails.processors.chimney_detector.lib.efficientdet.coco)": [[55, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO", false]], "coco (class in brails.processors.garage_detector.lib.efficientdet.coco)": [[168, "brails.processors.garage_detector.lib.efficientdet.coco.COCO", false]], "coco (class in brails.processors.nfloors_detector.lib.efficientdet.coco)": [[204, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO", false]], "coco_encode_rle() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.coco_encode_rle", false]], "cocodataset (class in brails.processors.chimney_detector.lib.efficientdet.dataset)": [[57, "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset", false]], "cocodataset (class in brails.processors.garage_detector.lib.efficientdet.dataset)": [[170, "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset", false]], "cocodataset (class in brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[206, "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset", false]], "collater() (in module brails.processors.chimney_detector.lib.efficientdet.dataset)": [[57, "brails.processors.chimney_detector.lib.efficientdet.dataset.collater", false]], "collater() (in module brails.processors.garage_detector.lib.efficientdet.dataset)": [[170, "brails.processors.garage_detector.lib.efficientdet.dataset.collater", false]], "collater() (in module brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[206, "brails.processors.nfloors_detector.lib.efficientdet.dataset.collater", false]], "colorencode() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.colorEncode", false]], "colors (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.colors", false]], "combinedmaskdataset (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CombinedMaskDataset", false]], "combinedmaskdataset (class in brails.processors.foundation_classifier.npid.npid_datasets.folder)": [[142, "brails.processors.foundation_classifier.npid.npid_datasets.folder.CombinedMaskDataset", false]], "compute_n_possible_worlds() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[17, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.compute_n_possible_worlds", false]], "compute_similarity() (in module brails.processors.vlm_image_classifier.clip.utils)": [[244, "brails.processors.vlm_image_classifier.clip.utils.compute_similarity", false]], "concatdataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[105, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset", false]], "conf": [[322, "module-conf", false]], "config_file (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.config_file", false]], "construct_confusion_matrix_image() (in module brails.processors.foundation_classifier.attention_utils.utils)": [[84, "brails.processors.foundation_classifier.attention_utils.utils.construct_confusion_matrix_image", false]], "construct_confusion_matrix_image() (in module brails.processors.year_built_classifier.lib.utils)": [[270, "brails.processors.year_built_classifier.lib.utils.construct_confusion_matrix_image", false]], "constypeclassifier (class in brails.processors.cons_type_classifier.constructiontypeclassifier)": [[76, "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier", false]], "conv2ddynamicsamepadding (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding", false]], "conv2ddynamicsamepadding (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding", false]], "conv2ddynamicsamepadding (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding", false]], "conv2dstaticsamepadding (class in brails.processors.chimney_detector.lib.efficientnet.utils_extra)": [[64, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding", false]], "conv2dstaticsamepadding (class in brails.processors.garage_detector.lib.efficientnet.utils_extra)": [[177, "brails.processors.garage_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding", false]], "conv2dstaticsamepadding (class in brails.processors.nfloors_detector.lib.efficientnet.utils_extra)": [[213, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding", false]], "conv3x3_bn_relu() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.conv3x3_bn_relu", false]], "convert_area() (brails.utils.unit_converter.unitconverter static method)": [[321, "brails.utils.unit_converter.UnitConverter.convert_area", false]], "convert_length() (brails.utils.unit_converter.unitconverter static method)": [[321, "brails.utils.unit_converter.UnitConverter.convert_length", false]], "convert_model() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[69, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.convert_model", false]], "convert_model() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[182, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.convert_model", false]], "convert_model() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[218, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.convert_model", false]], "convert_polygons_to_centroids() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.convert_polygons_to_centroids", false]], "convert_unit() (brails.utils.unit_converter.unitconverter static method)": [[321, "brails.utils.unit_converter.UnitConverter.convert_unit", false]], "convert_weight() (brails.utils.unit_converter.unitconverter static method)": [[321, "brails.utils.unit_converter.UnitConverter.convert_weight", false]], "convert_weights() (in module brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.convert_weights", false]], "correct() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[39, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.correct", false]], "cosine_anneal_schedule() (in module brails.processors.year_built_classifier.lib.utils)": [[270, "brails.processors.year_built_classifier.lib.utils.cosine_anneal_schedule", false]], "create_overlaid_image() (in module brails.utils.segmentation_utils)": [[315, "brails.utils.segmentation_utils.create_overlaid_image", false]], "createindex() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[55, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.createIndex", false]], "createindex() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[168, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.createIndex", false]], "createindex() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[204, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.createIndex", false]], "cuda() (brails.processors.foundation_classifier.lib.alias_multinomial.aliasmethod method)": [[126, "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod.cuda", false]], "cuda() (brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.aliasmethod method)": [[148, "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod.cuda", false]], "cummulative_sizes (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.concatdataset property)": [[105, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset.cummulative_sizes", false]], "cumsum() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.concatdataset static method)": [[105, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset.cumsum", false]], "customdataparallel (class in brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.CustomDataParallel", false]], "customdataparallel (class in brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.CustomDataParallel", false]], "customdataparallel (class in brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.CustomDataParallel", false]], "damagedetection_streetlevel (class in brails.processors.street_level_damage_detection.street_level_damage_detection)": [[237, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel", false]], "data (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[141, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.data", false]], "dataparallelwithcallback (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[72, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback", false]], "dataparallelwithcallback (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[98, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.DataParallelWithCallback", false]], "dataparallelwithcallback (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[185, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback", false]], "dataparallelwithcallback (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[221, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback", false]], "dataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[105, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.Dataset", false]], "datatype (brails.types.region_boundary.regioninput attribute)": [[306, "brails.types.region_boundary.RegionInput.dataType", false]], "dec_weights (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.dec_weights", false]], "decode() (brails.processors.chimney_detector.lib.efficientnet.utils.blockdecoder static method)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder.decode", false]], "decode() (brails.processors.garage_detector.lib.efficientnet.utils.blockdecoder static method)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder.decode", false]], "decode() (brails.processors.nfloors_detector.lib.efficientnet.utils.blockdecoder static method)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder.decode", false]], "decode() (brails.processors.vlm_image_classifier.clip.simple_tokenizer.simpletokenizer method)": [[243, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer.decode", false]], "decode_segmap() (in module brails.utils.segmentation_utils)": [[315, "brails.utils.segmentation_utils.decode_segmap", false]], "default_bpe() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[243, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.default_bpe", false]], "denseblock (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.DenseBlock", false]], "depth_coefficient (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.depth_coefficient", false]], "depth_coefficient (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.depth_coefficient", false]], "depth_coefficient (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.depth_coefficient", false]], "depth_divisor (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.depth_divisor", false]], "depth_divisor (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.depth_divisor", false]], "depth_divisor (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.depth_divisor", false]], "detect() (in module brails.filters.house_view.house_view)": [[7, "brails.filters.house_view.house_view.detect", false]], "detect() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.detect", false]], "detectionresult (class in brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult", false]], "detector (class in brails.processors.chimney_detector.lib.train_detector)": [[66, "brails.processors.chimney_detector.lib.train_detector.Detector", false]], "detector (class in brails.processors.garage_detector.lib.train_detector)": [[179, "brails.processors.garage_detector.lib.train_detector.Detector", false]], "detector (class in brails.processors.nfloors_detector.lib.train_detector)": [[215, "brails.processors.nfloors_detector.lib.train_detector.Detector", false]], "device (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam property)": [[257, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.device", false]], "device (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor property)": [[259, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.device", false]], "display() (brails.processors.chimney_detector.lib.infer_detector.infer method)": [[65, "brails.processors.chimney_detector.lib.infer_detector.Infer.display", false]], "display() (brails.processors.garage_detector.lib.infer_detector.infer method)": [[178, "brails.processors.garage_detector.lib.infer_detector.Infer.display", false]], "display() (brails.processors.nfloors_detector.lib.infer_detector.infer method)": [[214, "brails.processors.nfloors_detector.lib.infer_detector.Infer.display", false]], "display() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.display", false]], "display() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.display", false]], "display() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.display", false]], "distancebasedpointmatcher (class in brails.utils.spatial_join_methods.distance_based_point_matcher)": [[318, "brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher", false]], "download_all_attr_for_region() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[308, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.download_all_attr_for_region", false]], "download_all_attr_from_api() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[308, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.download_all_attr_from_api", false]], "download_attr_from_api() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[308, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.download_attr_from_api", false]], "draw() (brails.processors.foundation_classifier.lib.alias_multinomial.aliasmethod method)": [[126, "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod.draw", false]], "draw() (brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.aliasmethod method)": [[148, "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod.draw", false]], "drop_connect() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.drop_connect", false]], "drop_connect() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.drop_connect", false]], "drop_connect() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.drop_connect", false]], "drop_connect_rate (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.drop_connect_rate", false]], "drop_connect_rate (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.drop_connect_rate", false]], "drop_connect_rate (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.drop_connect_rate", false]], "dropout_rate (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.dropout_rate", false]], "dropout_rate (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.dropout_rate", false]], "dropout_rate (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.dropout_rate", false]], "dtype (brails.processors.vlm_image_classifier.clip.model.clip property)": [[242, "brails.processors.vlm_image_classifier.clip.model.CLIP.dtype", false]], "efficientdetbackbone (class in brails.processors.chimney_detector.lib.backbone)": [[53, "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone", false]], "efficientdetbackbone (class in brails.processors.garage_detector.lib.backbone)": [[166, "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone", false]], "efficientdetbackbone (class in brails.processors.nfloors_detector.lib.backbone)": [[202, "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone", false]], "efficientnet (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.EfficientNet", false]], "efficientnet (class in brails.processors.chimney_detector.lib.efficientnet.model)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet", false]], "efficientnet (class in brails.processors.garage_detector.lib.efficientdet.model)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.EfficientNet", false]], "efficientnet (class in brails.processors.garage_detector.lib.efficientnet.model)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet", false]], "efficientnet (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.EfficientNet", false]], "efficientnet (class in brails.processors.nfloors_detector.lib.efficientnet.model)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet", false]], "efficientnet() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.efficientnet", false]], "efficientnet() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.efficientnet", false]], "efficientnet() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.efficientnet", false]], "efficientnet_params() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.efficientnet_params", false]], "efficientnet_params() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.efficientnet_params", false]], "efficientnet_params() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.efficientnet_params", false]], "elastic_transform() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.elastic_transform", false]], "elastic_transform() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.elastic_transform", false]], "elastictransform (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.ElasticTransform", false]], "elastictransform (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.ElasticTransform", false]], "enc_weights (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.enc_weights", false]], "encode() (brails.processors.chimney_detector.lib.efficientnet.utils.blockdecoder static method)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder.encode", false]], "encode() (brails.processors.garage_detector.lib.efficientnet.utils.blockdecoder static method)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder.encode", false]], "encode() (brails.processors.nfloors_detector.lib.efficientnet.utils.blockdecoder static method)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder.encode", false]], "encode() (brails.processors.vlm_image_classifier.clip.simple_tokenizer.simpletokenizer method)": [[243, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer.encode", false]], "encode_image() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[242, "brails.processors.vlm_image_classifier.clip.model.CLIP.encode_image", false]], "encode_image() (in module brails.processors.gpt_base_model.utils)": [[190, "brails.processors.gpt_base_model.utils.encode_image", false]], "encode_text() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[242, "brails.processors.vlm_image_classifier.clip.model.CLIP.encode_text", false]], "enhancedcompose (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.EnhancedCompose", false]], "enhancedcompose (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.EnhancedCompose", false]], "errormessage (brails.types.region_boundary.regioninput attribute)": [[306, "brails.types.region_boundary.RegionInput.errorMessage", false]], "evaluate() (in module brails.processors.foundation_classifier.attention_utils.utils)": [[84, "brails.processors.foundation_classifier.attention_utils.utils.evaluate", false]], "execute() (brails.utils.spatial_join_methods.base.spatialjoinmethods static method)": [[317, "brails.utils.spatial_join_methods.base.SpatialJoinMethods.execute", false]], "execute_replication_callbacks() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[72, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.execute_replication_callbacks", false]], "execute_replication_callbacks() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[98, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.execute_replication_callbacks", false]], "execute_replication_callbacks() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[185, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.execute_replication_callbacks", false]], "execute_replication_callbacks() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[221, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.execute_replication_callbacks", false]], "expand_ratio (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.expand_ratio", false]], "expand_ratio (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.expand_ratio", false]], "expand_ratio (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.expand_ratio", false]], "expansion (brails.processors.vlm_image_classifier.clip.model.bottleneck attribute)": [[242, "brails.processors.vlm_image_classifier.clip.model.Bottleneck.expansion", false]], "extract_features() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet method)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.extract_features", false]], "extract_features() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet method)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.extract_features", false]], "extract_features() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet method)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.extract_features", false]], "facadeparser (class in brails.processors.facade_parser.facade_parser)": [[78, "brails.processors.facade_parser.facade_parser.FacadeParser", false]], "fetch_data_for_cells() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[308, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.fetch_data_for_cells", false]], "fetch_footprint_data() (brails.scrapers.user_footprints.userfootprint method)": [[302, "brails.scrapers.user_footprints.UserFootprint.fetch_footprint_data", false]], "fetch_max_records_per_query() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[308, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.fetch_max_records_per_query", false]], "ffhpredictorklepac (class in brails.processors.ffh_predictor_klepac.ffh_predictor_klepac)": [[80, "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.FFHPredictorKlepac", false]], "filename (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[141, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.filename", false]], "filename (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.filename", false]], "filter (class in brails.filters.filter)": [[5, "brails.filters.filter.Filter", false]], "filter() (brails.filters.filter.filter method)": [[5, "brails.filters.filter.Filter.filter", false]], "filter() (brails.filters.house_view.house_view.houseview method)": [[7, "brails.filters.house_view.house_view.HouseView.filter", false]], "filter() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.filter", false]], "filter1() (brails.filters.house_view.house_view.houseview method)": [[7, "brails.filters.house_view.house_view.HouseView.filter1", false]], "filterboundingbox (class in brails.filters.house_view.house_view)": [[7, "brails.filters.house_view.house_view.FilterBoundingBox", false]], "filterdetectionresult (class in brails.filters.house_view.house_view)": [[7, "brails.filters.house_view.house_view.FilterDetectionResult", false]], "find_json() (in module brails.processors.gpt_base_model.utils)": [[190, "brails.processors.gpt_base_model.utils.find_json", false]], "find_recursive() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.find_recursive", false]], "flatten_array() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.flatten_array", false]], "focalloss (class in brails.processors.chimney_detector.lib.efficientdet.loss)": [[58, "brails.processors.chimney_detector.lib.efficientdet.loss.FocalLoss", false]], "focalloss (class in brails.processors.garage_detector.lib.efficientdet.loss)": [[171, "brails.processors.garage_detector.lib.efficientdet.loss.FocalLoss", false]], "focalloss (class in brails.processors.nfloors_detector.lib.efficientdet.loss)": [[207, "brails.processors.nfloors_detector.lib.efficientdet.loss.FocalLoss", false]], "footprintscraper (class in brails.scrapers.footprint_scraper)": [[278, "brails.scrapers.footprint_scraper.FootprintScraper", false]], "forward() (brails.processors.chimney_detector.lib.backbone.efficientdetbackbone method)": [[53, "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.loss.focalloss method)": [[58, "brails.processors.chimney_detector.lib.efficientdet.loss.FocalLoss.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.bifpn method)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.BiFPN.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.classifier method)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.Classifier.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.efficientnet method)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.EfficientNet.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.regressor method)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.Regressor.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.separableconvblock method)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.SeparableConvBlock.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.utils.anchors method)": [[60, "brails.processors.chimney_detector.lib.efficientdet.utils.Anchors.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.utils.bboxtransform method)": [[60, "brails.processors.chimney_detector.lib.efficientdet.utils.BBoxTransform.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.utils.clipboxes method)": [[60, "brails.processors.chimney_detector.lib.efficientdet.utils.ClipBoxes.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet method)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.model.mbconvblock method)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.conv2ddynamicsamepadding method)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.identity method)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.Identity.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.memoryefficientswish method)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.MemoryEfficientSwish.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.swish method)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.Swish.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.swishimplementation static method)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils_extra.conv2dstaticsamepadding method)": [[64, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils_extra.maxpool2dstaticsamepadding method)": [[64, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding.forward", false]], "forward() (brails.processors.chimney_detector.lib.train_detector.modelwithloss method)": [[66, "brails.processors.chimney_detector.lib.train_detector.ModelWithLoss.forward", false]], "forward() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[70, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.c1 method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.c1deepsup method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1DeepSup.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.mobilenetv2dilated method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.MobileNetV2Dilated.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ppm method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPM.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ppmdeepsup method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPMDeepsup.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.resnet method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.Resnet.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.resnetdilated method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ResnetDilated.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.segmentationmodule method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModule.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.upernet method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.UPerNet.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet method)": [[113, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.ResNet.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.resnext method)": [[114, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.ResNeXt.forward", false]], "forward() (brails.processors.foundation_classifier.lib.linearaverage.linearaverage method)": [[123, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverage.forward", false]], "forward() (brails.processors.foundation_classifier.lib.linearaverage.linearaverageop static method)": [[123, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp.forward", false]], "forward() (brails.processors.foundation_classifier.lib.nceaverage.nceaverage method)": [[124, "brails.processors.foundation_classifier.lib.NCEAverage.NCEAverage.forward", false]], "forward() (brails.processors.foundation_classifier.lib.nceaverage.ncefunction static method)": [[124, "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction.forward", false]], "forward() (brails.processors.foundation_classifier.lib.ncecriterion.ncecriterion method)": [[125, "brails.processors.foundation_classifier.lib.NCECriterion.NCECriterion.forward", false]], "forward() (brails.processors.foundation_classifier.lib.normalize.normalize method)": [[128, "brails.processors.foundation_classifier.lib.normalize.Normalize.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_pre method)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_pre.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage0 method)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage0.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage1 method)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage1_cifar method)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1_cifar.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage2 method)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage2_cifar method)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2_cifar.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage3 method)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage3_cifar method)": [[131, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3_cifar.forward", false]], "forward() (brails.processors.foundation_classifier.models.basic_layer.residualblock method)": [[132, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock.forward", false]], "forward() (brails.processors.foundation_classifier.models.basic_layer.residualblock1d method)": [[132, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock1D.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.denseblock method)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.DenseBlock.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.mlp method)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.MLP.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92 method)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_32input method)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_32input_update method)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input_update.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_small method)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_small_1d method)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small_1D.forward", false]], "forward() (brails.processors.foundation_classifier.models.resnet_applied.resnet method)": [[134, "brails.processors.foundation_classifier.models.resnet_applied.ResNet.forward", false]], "forward() (brails.processors.foundation_classifier.models.sknet.skconv method)": [[135, "brails.processors.foundation_classifier.models.sknet.SKConv.forward", false]], "forward() (brails.processors.foundation_classifier.models.sknet.sknet method)": [[135, "brails.processors.foundation_classifier.models.sknet.SKNet.forward", false]], "forward() (brails.processors.foundation_classifier.models.sknet.skunit method)": [[135, "brails.processors.foundation_classifier.models.sknet.SKUnit.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.linearaverage.linearaverage method)": [[145, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverage.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.linearaverage.linearaverageop static method)": [[145, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.nceaverage.nceaverage method)": [[146, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEAverage.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.nceaverage.ncefunction static method)": [[146, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.ncecriterion.ncecriterion method)": [[147, "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.NCECriterion.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.normalize.normalize method)": [[150, "brails.processors.foundation_classifier.npid.npid_lib.normalize.Normalize.forward", false]], "forward() (brails.processors.garage_detector.lib.backbone.efficientdetbackbone method)": [[166, "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.loss.focalloss method)": [[171, "brails.processors.garage_detector.lib.efficientdet.loss.FocalLoss.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.bifpn method)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.BiFPN.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.classifier method)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.Classifier.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.efficientnet method)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.EfficientNet.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.regressor method)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.Regressor.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.separableconvblock method)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.SeparableConvBlock.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.utils.anchors method)": [[173, "brails.processors.garage_detector.lib.efficientdet.utils.Anchors.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.utils.bboxtransform method)": [[173, "brails.processors.garage_detector.lib.efficientdet.utils.BBoxTransform.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.utils.clipboxes method)": [[173, "brails.processors.garage_detector.lib.efficientdet.utils.ClipBoxes.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet method)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.model.mbconvblock method)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.conv2ddynamicsamepadding method)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.identity method)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.Identity.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.memoryefficientswish method)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.MemoryEfficientSwish.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.swish method)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.Swish.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.swishimplementation static method)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils_extra.conv2dstaticsamepadding method)": [[177, "brails.processors.garage_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils_extra.maxpool2dstaticsamepadding method)": [[177, "brails.processors.garage_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding.forward", false]], "forward() (brails.processors.garage_detector.lib.train_detector.modelwithloss method)": [[179, "brails.processors.garage_detector.lib.train_detector.ModelWithLoss.forward", false]], "forward() (brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[183, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", false]], "forward() (brails.processors.nfloors_detector.lib.backbone.efficientdetbackbone method)": [[202, "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.loss.focalloss method)": [[207, "brails.processors.nfloors_detector.lib.efficientdet.loss.FocalLoss.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.bifpn method)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.BiFPN.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.classifier method)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.Classifier.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.efficientnet method)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.EfficientNet.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.regressor method)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.Regressor.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.separableconvblock method)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.SeparableConvBlock.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.utils.anchors method)": [[209, "brails.processors.nfloors_detector.lib.efficientdet.utils.Anchors.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.utils.bboxtransform method)": [[209, "brails.processors.nfloors_detector.lib.efficientdet.utils.BBoxTransform.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.utils.clipboxes method)": [[209, "brails.processors.nfloors_detector.lib.efficientdet.utils.ClipBoxes.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet method)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.model.mbconvblock method)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.conv2ddynamicsamepadding method)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.identity method)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.Identity.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.memoryefficientswish method)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.MemoryEfficientSwish.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.swish method)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.Swish.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.swishimplementation static method)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils_extra.conv2dstaticsamepadding method)": [[213, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils_extra.maxpool2dstaticsamepadding method)": [[213, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding.forward", false]], "forward() (brails.processors.nfloors_detector.lib.train_detector.modelwithloss method)": [[215, "brails.processors.nfloors_detector.lib.train_detector.ModelWithLoss.forward", false]], "forward() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[219, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.attentionpool2d method)": [[242, "brails.processors.vlm_image_classifier.clip.model.AttentionPool2d.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.bottleneck method)": [[242, "brails.processors.vlm_image_classifier.clip.model.Bottleneck.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[242, "brails.processors.vlm_image_classifier.clip.model.CLIP.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.layernorm method)": [[242, "brails.processors.vlm_image_classifier.clip.model.LayerNorm.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.modifiedresnet method)": [[242, "brails.processors.vlm_image_classifier.clip.model.ModifiedResNet.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.quickgelu method)": [[242, "brails.processors.vlm_image_classifier.clip.model.QuickGELU.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.residualattentionblock method)": [[242, "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.transformer method)": [[242, "brails.processors.vlm_image_classifier.clip.model.Transformer.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.visiontransformer method)": [[242, "brails.processors.vlm_image_classifier.clip.model.VisionTransformer.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.common.layernorm2d method)": [[252, "brails.processors.vlm_segmenter.segment_anything.modeling.common.LayerNorm2d.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.common.mlpblock method)": [[252, "brails.processors.vlm_segmenter.segment_anything.modeling.common.MLPBlock.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.attention method)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Attention.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.block method)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Block.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.imageencodervit method)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.ImageEncoderViT.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.patchembed method)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.PatchEmbed.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.maskdecoder method)": [[254, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.mlp method)": [[254, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MLP.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.maskdecoderhq method)": [[255, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.mlp method)": [[255, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MLP.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.positionembeddingrandom method)": [[256, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.promptencoder method)": [[256, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam method)": [[257, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.transformer.attention method)": [[258, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.Attention.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.transformer.twowayattentionblock method)": [[258, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayAttentionBlock.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.transformer.twowaytransformer method)": [[258, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayTransformer.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel method)": [[262, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.forward", false]], "forward() (brails.processors.year_built_classifier.model.basicconv method)": [[271, "brails.processors.year_built_classifier.model.BasicConv.forward", false]], "forward() (brails.processors.year_built_classifier.model.pmg method)": [[271, "brails.processors.year_built_classifier.model.PMG.forward", false]], "forward() (brails.processors.year_built_classifier.resnet.resnet method)": [[266, "brails.processors.year_built_classifier.Resnet.ResNet.forward", false]], "forward_with_coords() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.positionembeddingrandom method)": [[256, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom.forward_with_coords", false]], "freeze_bn() (brails.processors.chimney_detector.lib.backbone.efficientdetbackbone method)": [[53, "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone.freeze_bn", false]], "freeze_bn() (brails.processors.garage_detector.lib.backbone.efficientdetbackbone method)": [[166, "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone.freeze_bn", false]], "freeze_bn() (brails.processors.nfloors_detector.lib.backbone.efficientdetbackbone method)": [[202, "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone.freeze_bn", false]], "from_colorname_to_bgr() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.from_colorname_to_bgr", false]], "from_colorname_to_bgr() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.from_colorname_to_bgr", false]], "from_colorname_to_bgr() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.from_colorname_to_bgr", false]], "from_dict() (brails.filters.house_view.house_view.filterdetectionresult class method)": [[7, "brails.filters.house_view.house_view.FilterDetectionResult.from_dict", false]], "from_dict() (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult class method)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.from_dict", false]], "from_name() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet class method)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.from_name", false]], "from_name() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet class method)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.from_name", false]], "from_name() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet class method)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.from_name", false]], "from_pretrained() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet class method)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.from_pretrained", false]], "from_pretrained() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet class method)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.from_pretrained", false]], "from_pretrained() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet class method)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.from_pretrained", false]], "futureresult (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm)": [[71, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult", false]], "futureresult (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm)": [[97, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult", false]], "futureresult (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.comm)": [[184, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult", false]], "futureresult (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm)": [[220, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult", false]], "garagedetector (class in brails.processors.garage_detector.garage_detector)": [[164, "brails.processors.garage_detector.garage_detector.GarageDetector", false]], "generate() (brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.samautomaticmaskgenerator method)": [[248, "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator.generate", false]], "generate_crop_boxes() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.generate_crop_boxes", false]], "geospatial_knn() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[11, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.geospatial_knn", false]], "geotools (class in brails.utils.geo_tools)": [[309, "brails.utils.geo_tools.GeoTools", false]], "get() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[71, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult.get", false]], "get() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.futureresult method)": [[97, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult.get", false]], "get() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[184, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult.get", false]], "get() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[220, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult.get", false]], "get_asset_coordinates() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_asset_coordinates", false]], "get_asset_features() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_asset_features", false]], "get_asset_ids() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_asset_ids", false]], "get_assets() (brails.scrapers.nbi_scraper.nbi_scraper.nbiscraper method)": [[287, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper.get_assets", false]], "get_assets() (brails.scrapers.nti_scraper.nti_scraper.ntiscraper method)": [[291, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper.get_assets", false]], "get_boundary() (brails.types.region_boundary.regionboundary method)": [[306, "brails.types.region_boundary.RegionBoundary.get_boundary", false]], "get_class() (brails.utils.importer.importer method)": [[310, "brails.utils.importer.Importer.get_class", false]], "get_coordinates() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_coordinates", false]], "get_dataframe() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_dataframe", false]], "get_dense_pe() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.promptencoder method)": [[256, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder.get_dense_pe", false]], "get_element_counts() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[308, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.get_element_counts", false]], "get_era_height_foundation_class() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[17, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.get_era_height_foundation_class", false]], "get_extent() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_extent", false]], "get_filtered_data_given_inventory() (brails.scrapers.nsi_parser.nsi_parser.nsi_parser method)": [[289, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.get_filtered_data_given_inventory", false]], "get_footprints() (brails.scrapers.footprint_scraper.footprintscraper method)": [[278, "brails.scrapers.footprint_scraper.FootprintScraper.get_footprints", false]], "get_footprints() (brails.scrapers.ms_footprint_scraper.ms_footprint_handler.ms_footprintscraper method)": [[285, "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper.get_footprints", false]], "get_footprints() (brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.osm_footprintscraper method)": [[293, "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper.get_footprints", false]], "get_footprints() (brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.usa_footprintscraper method)": [[301, "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper.get_footprints", false]], "get_geojson() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_geojson", false]], "get_hazus_base_replacement_cost() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[15, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_base_replacement_cost", false]], "get_hazus_height_classes() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[15, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_height_classes", false]], "get_hazus_height_classes_res1() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[15, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_height_classes_RES1", false]], "get_hazus_income_to_const_class() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[15, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_income_to_const_class", false]], "get_hazus_occ_type_mapping() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[15, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_occ_type_mapping", false]], "get_hazus_region_to_garage() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[15, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_region_to_garage", false]], "get_hazus_state_region_mapping() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[15, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_state_region_mapping", false]], "get_hazus_year_classes() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[15, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_year_classes", false]], "get_image() (brails.types.image_set.imageset method)": [[305, "brails.types.image_set.ImageSet.get_image", false]], "get_image_embedding() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[259, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.get_image_embedding", false]], "get_image_size() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet class method)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.get_image_size", false]], "get_image_size() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet class method)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.get_image_size", false]], "get_image_size() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet class method)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.get_image_size", false]], "get_images() (brails.scrapers.google_satellite.google_satellite.googlesatellite method)": [[280, "brails.scrapers.google_satellite.google_satellite.GoogleSatellite.get_images", false]], "get_images() (brails.scrapers.google_streetview.google_streetview.googlestreetview method)": [[282, "brails.scrapers.google_streetview.google_streetview.GoogleStreetview.get_images", false]], "get_images() (brails.scrapers.image_scraper.imagescraper method)": [[283, "brails.scrapers.image_scraper.ImageScraper.get_images", false]], "get_index_label() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.get_index_label", false]], "get_index_label() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.get_index_label", false]], "get_index_label() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.get_index_label", false]], "get_last_weights() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.get_last_weights", false]], "get_last_weights() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.get_last_weights", false]], "get_last_weights() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.get_last_weights", false]], "get_mask() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding method)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.get_mask", false]], "get_model_params() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.get_model_params", false]], "get_model_params() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.get_model_params", false]], "get_model_params() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.get_model_params", false]], "get_model_path() (brails.utils.model_utils.modelutils static method)": [[313, "brails.utils.model_utils.ModelUtils.get_model_path", false]], "get_multi_keys() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_multi_keys", false]], "get_n_pw() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_n_pw", false]], "get_object() (brails.utils.importer.importer method)": [[310, "brails.utils.importer.Importer.get_object", false]], "get_pairs() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[243, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.get_pairs", false]], "get_preprocess_shape() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside static method)": [[263, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.get_preprocess_shape", false]], "get_random_sample() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_random_sample", false]], "get_raw_data() (brails.scrapers.nsi_parser.nsi_parser.nsi_parser method)": [[289, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.get_raw_data", false]], "get_rel_pos() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.get_rel_pos", false]], "get_replacement_cost() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.get_replacement_cost", false]], "get_same_padding_conv2d() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.get_same_padding_conv2d", false]], "get_same_padding_conv2d() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.get_same_padding_conv2d", false]], "get_same_padding_conv2d() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.get_same_padding_conv2d", false]], "get_str_from_occ() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.get_str_from_occ", false]], "get_supported_units() (brails.utils.unit_converter.unitconverter method)": [[321, "brails.utils.unit_converter.UnitConverter.get_supported_units", false]], "get_unit_type() (brails.utils.unit_converter.unitconverter static method)": [[321, "brails.utils.unit_converter.UnitConverter.get_unit_type", false]], "get_world_realization() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.get_world_realization", false]], "getannids() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[55, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.getAnnIds", false]], "getannids() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[168, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.getAnnIds", false]], "getannids() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[204, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.getAnnIds", false]], "getcatids() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[55, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.getCatIds", false]], "getcatids() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[168, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.getCatIds", false]], "getcatids() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[204, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.getCatIds", false]], "getimgids() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[55, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.getImgIds", false]], "getimgids() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[168, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.getImgIds", false]], "getimgids() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[204, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.getImgIds", false]], "getnsidata() (brails.scrapers.nsi_parser.nsi_parser.nsi_parser method)": [[289, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.GetNSIData", false]], "getpointsinpolygons (class in brails.utils.spatial_join_methods.get_points_in_polygons)": [[319, "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons", false]], "getpointsnearpolygons (class in brails.utils.spatial_join_methods.get_points_near_polygons)": [[320, "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons", false]], "global_rulesets() (in module brails.inferers.hazus_inferer_wind.windmetavarrulesets)": [[32, "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.global_rulesets", false]], "globalparams (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams", false]], "globalparams (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams", false]], "globalparams (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams", false]], "googlesatellite (class in brails.scrapers.google_satellite.google_satellite)": [[280, "brails.scrapers.google_satellite.google_satellite.GoogleSatellite", false]], "googlestreetview (class in brails.scrapers.google_streetview.google_streetview)": [[282, "brails.scrapers.google_streetview.google_streetview.GoogleStreetview", false]], "gpt (class in brails.processors.gpt_base_model.gpt)": [[189, "brails.processors.gpt_base_model.GPT.GPT", false]], "haversine_dist() (brails.utils.geo_tools.geotools static method)": [[309, "brails.utils.geo_tools.GeoTools.haversine_dist", false]], "hazusinferer (class in brails.inferers.hazus_inferer.hazus_inferer)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer", false]], "hazusinfererearthquake (class in brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake)": [[17, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake", false]], "hazusinfererflood (class in brails.inferers.hazus_inferer_flood.hazus_inferer_flood)": [[19, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood", false]], "hazusinfererwind (class in brails.inferers.hazus_inferer_wind.hazus_inferer_wind)": [[39, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind", false]], "houseview (class in brails.filters.house_view.house_view)": [[7, "brails.filters.house_view.house_view.HouseView", false]], "hrnetv2() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet)": [[110, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet.hrnetv2", false]], "hueffs_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[24, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFFS_config", false]], "huefh_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[24, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFH_config", false]], "huefs_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[24, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFS_config", false]], "huefss_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[24, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFSS_config", false]], "id_skip (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.id_skip", false]], "id_skip (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.id_skip", false]], "id_skip (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.id_skip", false]], "identity (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.Identity", false]], "identity (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.Identity", false]], "identity (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.Identity", false]], "image (class in brails.types.image_set)": [[305, "brails.types.image_set.Image", false]], "image_format (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam attribute)": [[257, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.image_format", false]], "image_size (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.image_size", false]], "image_size (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.image_size", false]], "image_size (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.image_size", false]], "imageclassifier (class in brails.processors.image_classifier.image_classifier)": [[192, "brails.processors.image_classifier.image_classifier.ImageClassifier", false]], "imageencodervit (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.ImageEncoderViT", false]], "imagefolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.ImageFolderInstance", false]], "imagefolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets.folder)": [[142, "brails.processors.foundation_classifier.npid.npid_datasets.folder.ImageFolderInstance", false]], "imageprocessor (class in brails.processors.image_processor)": [[193, "brails.processors.image_processor.ImageProcessor", false]], "imagescraper (class in brails.scrapers.image_scraper)": [[283, "brails.scrapers.image_scraper.ImageScraper", false]], "imageset (class in brails.types.image_set)": [[305, "brails.types.image_set.ImageSet", false]], "img_transform() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[90, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.img_transform", false]], "importer (class in brails.utils.importer)": [[310, "brails.utils.importer.Importer", false]], "imputation (class in brails.imputers.imputation)": [[9, "brails.imputers.imputation.Imputation", false]], "impute() (brails.imputers.imputation.imputation method)": [[9, "brails.imputers.imputation.Imputation.impute", false]], "impute() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[11, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.impute", false]], "imresize() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[90, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.imresize", false]], "infer (class in brails.processors.chimney_detector.lib.infer_detector)": [[65, "brails.processors.chimney_detector.lib.infer_detector.Infer", false]], "infer (class in brails.processors.garage_detector.lib.infer_detector)": [[178, "brails.processors.garage_detector.lib.infer_detector.Infer", false]], "infer (class in brails.processors.nfloors_detector.lib.infer_detector)": [[214, "brails.processors.nfloors_detector.lib.infer_detector.Infer", false]], "infer() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.infer", false]], "infer() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[17, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.infer", false]], "infer() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[19, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.infer", false]], "infer() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[39, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.infer", false]], "infer() (brails.inferers.inferenceengine.inferenceengine method)": [[40, "brails.inferers.inferenceEngine.InferenceEngine.infer", false]], "infer() (brails.inferers.user_inferer.user_inferer.userinferer method)": [[46, "brails.inferers.user_inferer.user_inferer.UserInferer.infer", false]], "infer_building_one_by_one() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[19, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.infer_building_one_by_one", false]], "infer_building_one_by_one() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[39, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.infer_building_one_by_one", false]], "inferenceengine (class in brails.inferers.inferenceengine)": [[40, "brails.inferers.inferenceEngine.InferenceEngine", false]], "info() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[55, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.info", false]], "info() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[168, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.info", false]], "info() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[204, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.info", false]], "init_backbone() (brails.processors.chimney_detector.lib.backbone.efficientdetbackbone method)": [[53, "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone.init_backbone", false]], "init_backbone() (brails.processors.garage_detector.lib.backbone.efficientdetbackbone method)": [[166, "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone.init_backbone", false]], "init_backbone() (brails.processors.nfloors_detector.lib.backbone.efficientdetbackbone method)": [[202, "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone.init_backbone", false]], "init_weights() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.init_weights", false]], "init_weights() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.init_weights", false]], "init_weights() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.init_weights", false]], "initialize() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.initialize", false]], "initialize_parameters() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[242, "brails.processors.vlm_image_classifier.clip.model.CLIP.initialize_parameters", false]], "input_filters (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.input_filters", false]], "input_filters (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.input_filters", false]], "input_filters (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.input_filters", false]], "inputvalidator (class in brails.utils.input_validator)": [[311, "brails.utils.input_validator.InputValidator", false]], "intersectionandunion() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.intersectionAndUnion", false]], "inventoryvalidator (class in brails.utils.inventory_validator)": [[312, "brails.utils.inventory_validator.InventoryValidator", false]], "invert_affine() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.invert_affine", false]], "invert_affine() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.invert_affine", false]], "invert_affine() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.invert_affine", false]], "invetory_to_df() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[11, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.invetory_to_df", false]], "is_box() (brails.utils.geo_tools.geotools static method)": [[309, "brails.utils.geo_tools.GeoTools.is_box", false]], "is_box_near_crop_edge() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.is_box_near_crop_edge", false]], "is_float() (brails.utils.input_validator.inputvalidator static method)": [[311, "brails.utils.input_validator.InputValidator.is_float", false]], "is_image() (brails.utils.input_validator.inputvalidator static method)": [[311, "brails.utils.input_validator.InputValidator.is_image", false]], "is_inventory() (brails.utils.inventory_validator.inventoryvalidator static method)": [[312, "brails.utils.inventory_validator.InventoryValidator.is_inventory", false]], "is_linestring() (brails.utils.input_validator.inputvalidator static method)": [[311, "brails.utils.input_validator.InputValidator.is_linestring", false]], "is_multilinestring() (brails.utils.input_validator.inputvalidator static method)": [[311, "brails.utils.input_validator.InputValidator.is_multilinestring", false]], "is_multipolygon() (brails.utils.input_validator.inputvalidator static method)": [[311, "brails.utils.input_validator.InputValidator.is_multipolygon", false]], "is_point() (brails.utils.input_validator.inputvalidator static method)": [[311, "brails.utils.input_validator.InputValidator.is_point", false]], "is_polygon() (brails.utils.input_validator.inputvalidator static method)": [[311, "brails.utils.input_validator.InputValidator.is_polygon", false]], "is_ready_to_infer() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[19, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.is_ready_to_infer", false]], "is_ready_to_infer() (in module brails.inferers.hazus_inferer_wind.windmetavarrulesets)": [[32, "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.is_ready_to_infer", false]], "is_valid_geometry() (brails.utils.input_validator.inputvalidator static method)": [[311, "brails.utils.input_validator.InputValidator.is_valid_geometry", false]], "items() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.items", false]], "jigsaw_generator() (in module brails.processors.year_built_classifier.lib.utils)": [[270, "brails.processors.year_built_classifier.lib.utils.jigsaw_generator", false]], "join() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.join", false]], "join_inventories() (brails.utils.spatial_join_methods.base.spatialjoinmethods class method)": [[317, "brails.utils.spatial_join_methods.base.SpatialJoinMethods.join_inventories", false]], "kernel_size (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.kernel_size", false]], "kernel_size (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.kernel_size", false]], "kernel_size (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.kernel_size", false]], "knnimputer (class in brails.imputers.knn_imputer.knn_imputer)": [[11, "brails.imputers.knn_imputer.knn_imputer.KnnImputer", false]], "label (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[7, "brails.filters.house_view.house_view.FilterDetectionResult.label", false]], "label (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.label", false]], "layernorm (class in brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.LayerNorm", false]], "layernorm2d (class in brails.processors.vlm_segmenter.segment_anything.modeling.common)": [[252, "brails.processors.vlm_segmenter.segment_anything.modeling.common.LayerNorm2d", false]], "linearaverage (class in brails.processors.foundation_classifier.lib.linearaverage)": [[123, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverage", false]], "linearaverage (class in brails.processors.foundation_classifier.npid.npid_lib.linearaverage)": [[145, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverage", false]], "linearaverageop (class in brails.processors.foundation_classifier.lib.linearaverage)": [[123, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp", false]], "linearaverageop (class in brails.processors.foundation_classifier.npid.npid_lib.linearaverage)": [[145, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp", false]], "load() (in module brails.processors.vlm_image_classifier.clip.clip)": [[241, "brails.processors.vlm_image_classifier.clip.clip.load", false]], "load_annotations() (brails.processors.chimney_detector.lib.efficientdet.dataset.cocodataset method)": [[57, "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset.load_annotations", false]], "load_annotations() (brails.processors.garage_detector.lib.efficientdet.dataset.cocodataset method)": [[170, "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset.load_annotations", false]], "load_annotations() (brails.processors.nfloors_detector.lib.efficientdet.dataset.cocodataset method)": [[206, "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset.load_annotations", false]], "load_classes() (brails.processors.chimney_detector.lib.efficientdet.dataset.cocodataset method)": [[57, "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset.load_classes", false]], "load_classes() (brails.processors.garage_detector.lib.efficientdet.dataset.cocodataset method)": [[170, "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset.load_classes", false]], "load_classes() (brails.processors.nfloors_detector.lib.efficientdet.dataset.cocodataset method)": [[206, "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset.load_classes", false]], "load_image() (brails.processors.chimney_detector.lib.efficientdet.dataset.cocodataset method)": [[57, "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset.load_image", false]], "load_image() (brails.processors.garage_detector.lib.efficientdet.dataset.cocodataset method)": [[170, "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset.load_image", false]], "load_image() (brails.processors.nfloors_detector.lib.efficientdet.dataset.cocodataset method)": [[206, "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset.load_image", false]], "load_model() (brails.processors.chimney_detector.lib.infer_detector.infer method)": [[65, "brails.processors.chimney_detector.lib.infer_detector.Infer.load_model", false]], "load_model() (brails.processors.garage_detector.lib.infer_detector.infer method)": [[178, "brails.processors.garage_detector.lib.infer_detector.Infer.load_model", false]], "load_model() (brails.processors.nfloors_detector.lib.infer_detector.infer method)": [[214, "brails.processors.nfloors_detector.lib.infer_detector.Infer.load_model", false]], "load_model() (in module brails.processors.year_built_classifier.lib.utils)": [[270, "brails.processors.year_built_classifier.lib.utils.load_model", false]], "load_predictions_from_json() (in module brails.processors.gpt_base_model.utils)": [[190, "brails.processors.gpt_base_model.utils.load_predictions_from_json", false]], "load_pretrained_weights() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.load_pretrained_weights", false]], "load_pretrained_weights() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.load_pretrained_weights", false]], "load_pretrained_weights() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.load_pretrained_weights", false]], "load_url() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils)": [[115, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils.load_url", false]], "loadanns() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[55, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.loadAnns", false]], "loadanns() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[168, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.loadAnns", false]], "loadanns() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[204, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.loadAnns", false]], "loadcats() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[55, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.loadCats", false]], "loadcats() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[168, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.loadCats", false]], "loadcats() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[204, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.loadCats", false]], "loader() (brails.processors.foundation_classifier.npid.npid_datasets.combinedmaskdataset method)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CombinedMaskDataset.loader", false]], "loader() (brails.processors.foundation_classifier.npid.npid_datasets.folder.combinedmaskdataset method)": [[142, "brails.processors.foundation_classifier.npid.npid_datasets.folder.CombinedMaskDataset.loader", false]], "loadimgs() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[55, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.loadImgs", false]], "loadimgs() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[168, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.loadImgs", false]], "loadimgs() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[204, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.loadImgs", false]], "mark_volatile() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.mark_volatile", false]], "mask (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[7, "brails.filters.house_view.house_view.FilterDetectionResult.mask", false]], "mask (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.mask", false]], "mask_postprocessing() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel method)": [[262, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.mask_postprocessing", false]], "mask_threshold (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam attribute)": [[257, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.mask_threshold", false]], "mask_to_rle_pytorch() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.mask_to_rle_pytorch", false]], "maskbuilding (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding", false]], "maskdata (class in brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData", false]], "maskdecoder (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder)": [[254, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder", false]], "maskdecoderhq (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq)": [[255, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ", false]], "maskfolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.MaskFolderInstance", false]], "maskfolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets.folder)": [[142, "brails.processors.foundation_classifier.npid.npid_datasets.folder.MaskFolderInstance", false]], "match_points_to_polygons() (brails.utils.geo_tools.geotools static method)": [[309, "brails.utils.geo_tools.GeoTools.match_points_to_polygons", false]], "maxpool2dstaticsamepadding (class in brails.processors.chimney_detector.lib.efficientnet.utils_extra)": [[64, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding", false]], "maxpool2dstaticsamepadding (class in brails.processors.garage_detector.lib.efficientnet.utils_extra)": [[177, "brails.processors.garage_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding", false]], "maxpool2dstaticsamepadding (class in brails.processors.nfloors_detector.lib.efficientnet.utils_extra)": [[213, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding", false]], "maxscalenumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.MaxScaleNumpy", false]], "maxscalenumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.MaxScaleNumpy", false]], "mbconvblock (class in brails.processors.chimney_detector.lib.efficientnet.model)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock", false]], "mbconvblock (class in brails.processors.garage_detector.lib.efficientnet.model)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock", false]], "mbconvblock (class in brails.processors.nfloors_detector.lib.efficientnet.model)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock", false]], "mecb_config() (in module brails.inferers.hazus_inferer_wind.windmecbrulesets)": [[25, "brails.inferers.hazus_inferer_wind.WindMECBRulesets.MECB_config", false]], "medianscalenumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.MedianScaleNumpy", false]], "medianscalenumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.MedianScaleNumpy", false]], "memoryefficientswish (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.MemoryEfficientSwish", false]], "memoryefficientswish (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.MemoryEfficientSwish", false]], "memoryefficientswish (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.MemoryEfficientSwish", false]], "merb_config() (in module brails.inferers.hazus_inferer_wind.windmerbrulesets)": [[26, "brails.inferers.hazus_inferer_wind.WindMERBRulesets.MERB_config", false]], "merge (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.Merge", false]], "merge (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.Merge", false]], "merge_two_json() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[11, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[17, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[19, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[39, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.merge_two_json", false]], "merge_two_json() (brails.inferers.user_inferer.user_inferer.userinferer method)": [[46, "brails.inferers.user_inferer.user_inferer.UserInferer.merge_two_json", false]], "mesh_polygon() (brails.utils.geo_tools.geotools static method)": [[309, "brails.utils.geo_tools.GeoTools.mesh_polygon", false]], "mh_config() (in module brails.inferers.hazus_inferer_wind.windmhrulesets)": [[27, "brails.inferers.hazus_inferer_wind.WindMHRulesets.MH_config", false]], "min_depth (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.min_depth", false]], "min_depth (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.min_depth", false]], "min_depth (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.min_depth", false]], "mlp (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.MLP", false]], "mlp (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder)": [[254, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MLP", false]], "mlp (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq)": [[255, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MLP", false]], "mlpblock (class in brails.processors.vlm_segmenter.segment_anything.modeling.common)": [[252, "brails.processors.vlm_segmenter.segment_anything.modeling.common.MLPBlock", false]], "mlri_config() (in module brails.inferers.hazus_inferer_wind.windmlrirulesets)": [[28, "brails.inferers.hazus_inferer_wind.WindMLRIRulesets.MLRI_config", false]], "mlrm_config() (in module brails.inferers.hazus_inferer_wind.windmlrmrulesets)": [[29, "brails.inferers.hazus_inferer_wind.WindMLRMRulesets.MLRM_config", false]], "mmuh_config() (in module brails.inferers.hazus_inferer_wind.windmmuhrulesets)": [[30, "brails.inferers.hazus_inferer_wind.WindMMUHRulesets.MMUH_config", false]], "mnistinstance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.MNISTInstance", false]], "mnistinstance (class in brails.processors.foundation_classifier.npid.npid_datasets.mnist)": [[143, "brails.processors.foundation_classifier.npid.npid_datasets.mnist.MNISTInstance", false]], "mobilenetv2() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet)": [[111, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet.mobilenetv2", false]], "mobilenetv2dilated (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.MobileNetV2Dilated", false]], "model_info() (in module brails.processors.year_built_classifier.lib.utils)": [[270, "brails.processors.year_built_classifier.lib.utils.model_info", false]], "modelbuilder (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder", false]], "modelutils (class in brails.utils.model_utils)": [[313, "brails.utils.model_utils.ModelUtils", false]], "modelwithloss (class in brails.processors.chimney_detector.lib.train_detector)": [[66, "brails.processors.chimney_detector.lib.train_detector.ModelWithLoss", false]], "modelwithloss (class in brails.processors.garage_detector.lib.train_detector)": [[179, "brails.processors.garage_detector.lib.train_detector.ModelWithLoss", false]], "modelwithloss (class in brails.processors.nfloors_detector.lib.train_detector)": [[215, "brails.processors.nfloors_detector.lib.train_detector.ModelWithLoss", false]], "modifiedresnet (class in brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.ModifiedResNet", false]], "modulate_occ() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.modulate_occ", false]], "modulate_occ() (brails.inferers.simcenter_inferer.simcenter_inferer.simcenterinferer method)": [[42, "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer.modulate_occ", false]], "modulate_weights() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[14, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.modulate_weights", false]], "modulate_weights() (brails.inferers.simcenter_inferer.simcenter_inferer.simcenterinferer method)": [[42, "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer.modulate_weights", false]], "module": [[2, "module-brails", false], [3, "module-brails.exceptions", false], [4, "module-brails.filters", false], [5, "module-brails.filters.filter", false], [6, "module-brails.filters.house_view", false], [7, "module-brails.filters.house_view.house_view", false], [8, "module-brails.imputers", false], [9, "module-brails.imputers.imputation", false], [10, "module-brails.imputers.knn_imputer", false], [11, "module-brails.imputers.knn_imputer.knn_imputer", false], [12, "module-brails.inferers", false], [13, "module-brails.inferers.hazus_inferer", false], [14, "module-brails.inferers.hazus_inferer.hazus_inferer", false], [15, "module-brails.inferers.hazus_inferer.hazus_rulesets", false], [16, "module-brails.inferers.hazus_inferer_earthquake", false], [17, "module-brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake", false], [18, "module-brails.inferers.hazus_inferer_flood", false], [19, "module-brails.inferers.hazus_inferer_flood.hazus_inferer_flood", false], [20, "module-brails.inferers.hazus_inferer_wind", false], [21, "module-brails.inferers.hazus_inferer_wind.BuildingClassRulesets", false], [22, "module-brails.inferers.hazus_inferer_wind.WindCECBRulesets", false], [23, "module-brails.inferers.hazus_inferer_wind.WindCERBRulesets", false], [24, "module-brails.inferers.hazus_inferer_wind.WindEFRulesets", false], [25, "module-brails.inferers.hazus_inferer_wind.WindMECBRulesets", false], [26, "module-brails.inferers.hazus_inferer_wind.WindMERBRulesets", false], [27, "module-brails.inferers.hazus_inferer_wind.WindMHRulesets", false], [28, "module-brails.inferers.hazus_inferer_wind.WindMLRIRulesets", false], [29, "module-brails.inferers.hazus_inferer_wind.WindMLRMRulesets", false], [30, "module-brails.inferers.hazus_inferer_wind.WindMMUHRulesets", false], [31, "module-brails.inferers.hazus_inferer_wind.WindMSFRulesets", false], [32, "module-brails.inferers.hazus_inferer_wind.WindMetaVarRulesets", false], [33, "module-brails.inferers.hazus_inferer_wind.WindSECBRulesets", false], [34, "module-brails.inferers.hazus_inferer_wind.WindSERBRulesets", false], [35, "module-brails.inferers.hazus_inferer_wind.WindSPMBRulesets", false], [36, "module-brails.inferers.hazus_inferer_wind.WindWMUHRulesets", false], [37, "module-brails.inferers.hazus_inferer_wind.WindWSFRulesets", false], [38, "module-brails.inferers.hazus_inferer_wind.auto_HU_NJ", false], [39, "module-brails.inferers.hazus_inferer_wind.hazus_inferer_wind", false], [40, "module-brails.inferers.inferenceEngine", false], [41, "module-brails.inferers.simcenter_inferer", false], [42, "module-brails.inferers.simcenter_inferer.simCenter_inferer", false], [43, "module-brails.inferers.user_inferer", false], [44, "module-brails.inferers.user_inferer.content_value_inferer", false], [45, "module-brails.inferers.user_inferer.floor_area_inferer", false], [46, "module-brails.inferers.user_inferer.user_inferer", false], [47, "module-brails.processors", false], [48, "module-brails.processors.building_material_llm", false], [49, "module-brails.processors.building_material_llm.building_material_llm", false], [50, "module-brails.processors.chimney_detector", false], [51, "module-brails.processors.chimney_detector.chimney_detector", false], [52, "module-brails.processors.chimney_detector.lib", false], [53, "module-brails.processors.chimney_detector.lib.backbone", false], [54, "module-brails.processors.chimney_detector.lib.efficientdet", false], [55, "module-brails.processors.chimney_detector.lib.efficientdet.coco", false], [56, "module-brails.processors.chimney_detector.lib.efficientdet.config", false], [57, "module-brails.processors.chimney_detector.lib.efficientdet.dataset", false], [58, "module-brails.processors.chimney_detector.lib.efficientdet.loss", false], [59, "module-brails.processors.chimney_detector.lib.efficientdet.model", false], [60, "module-brails.processors.chimney_detector.lib.efficientdet.utils", false], [61, "module-brails.processors.chimney_detector.lib.efficientnet", false], [62, "module-brails.processors.chimney_detector.lib.efficientnet.model", false], [63, "module-brails.processors.chimney_detector.lib.efficientnet.utils", false], [64, "module-brails.processors.chimney_detector.lib.efficientnet.utils_extra", false], [65, "module-brails.processors.chimney_detector.lib.infer_detector", false], [66, "module-brails.processors.chimney_detector.lib.train_detector", false], [67, "module-brails.processors.chimney_detector.lib.utils", false], [68, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm", false], [69, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm", false], [70, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false], [71, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm", false], [72, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate", false], [73, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest", false], [74, "module-brails.processors.chimney_detector.lib.utils.utils", false], [75, "module-brails.processors.cons_type_classifier", false], [76, "module-brails.processors.cons_type_classifier.ConstructionTypeClassifier", false], [77, "module-brails.processors.facade_parser", false], [78, "module-brails.processors.facade_parser.facade_parser", false], [79, "module-brails.processors.ffh_predictor_klepac", false], [80, "module-brails.processors.ffh_predictor_klepac.ffh_predictor_klepac", false], [81, "module-brails.processors.foundation_classifier", false], [82, "module-brails.processors.foundation_classifier.attention_utils", false], [83, "module-brails.processors.foundation_classifier.attention_utils.radam", false], [84, "module-brails.processors.foundation_classifier.attention_utils.utils", false], [85, "module-brails.processors.foundation_classifier.csail_segmentation_tool", false], [86, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg", false], [87, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config", false], [88, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults", false], [89, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data", false], [90, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset", false], [93, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib", false], [94, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn", false], [95, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules", false], [96, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm", false], [97, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm", false], [98, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate", false], [99, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest", false], [100, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel", false], [101, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel", false], [102, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils", false], [105, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset", false], [107, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler", false], [108, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th", false], [109, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models", false], [110, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet", false], [111, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet", false], [112, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models", false], [113, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet", false], [114, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext", false], [115, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils", false], [118, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils", false], [119, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation", false], [122, "module-brails.processors.foundation_classifier.lib", false], [123, "module-brails.processors.foundation_classifier.lib.LinearAverage", false], [124, "module-brails.processors.foundation_classifier.lib.NCEAverage", false], [125, "module-brails.processors.foundation_classifier.lib.NCECriterion", false], [126, "module-brails.processors.foundation_classifier.lib.alias_multinomial", false], [127, "module-brails.processors.foundation_classifier.lib.custom_transforms", false], [128, "module-brails.processors.foundation_classifier.lib.normalize", false], [129, "module-brails.processors.foundation_classifier.lib.utils", false], [130, "module-brails.processors.foundation_classifier.models", false], [131, "module-brails.processors.foundation_classifier.models.attention_module", false], [132, "module-brails.processors.foundation_classifier.models.basic_layer", false], [133, "module-brails.processors.foundation_classifier.models.residual_attention_network", false], [134, "module-brails.processors.foundation_classifier.models.resnet_applied", false], [135, "module-brails.processors.foundation_classifier.models.sknet", false], [136, "module-brails.processors.foundation_classifier.npid", false], [140, "module-brails.processors.foundation_classifier.npid.npid_datasets", false], [141, "module-brails.processors.foundation_classifier.npid.npid_datasets.cifar", false], [142, "module-brails.processors.foundation_classifier.npid.npid_datasets.folder", false], [143, "module-brails.processors.foundation_classifier.npid.npid_datasets.mnist", false], [144, "module-brails.processors.foundation_classifier.npid.npid_lib", false], [145, "module-brails.processors.foundation_classifier.npid.npid_lib.LinearAverage", false], [146, "module-brails.processors.foundation_classifier.npid.npid_lib.NCEAverage", false], [147, "module-brails.processors.foundation_classifier.npid.npid_lib.NCECriterion", false], [148, "module-brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial", false], [149, "module-brails.processors.foundation_classifier.npid.npid_lib.custom_transforms", false], [150, "module-brails.processors.foundation_classifier.npid.npid_lib.normalize", false], [151, "module-brails.processors.foundation_classifier.npid.npid_lib.utils", false], [155, "module-brails.processors.foundation_classifier.npid.npid_toolbox", false], [160, "module-brails.processors.foundation_classifier.utils", false], [163, "module-brails.processors.garage_detector", false], [164, "module-brails.processors.garage_detector.garage_detector", false], [165, "module-brails.processors.garage_detector.lib", false], [166, "module-brails.processors.garage_detector.lib.backbone", false], [167, "module-brails.processors.garage_detector.lib.efficientdet", false], [168, "module-brails.processors.garage_detector.lib.efficientdet.coco", false], [169, "module-brails.processors.garage_detector.lib.efficientdet.config", false], [170, "module-brails.processors.garage_detector.lib.efficientdet.dataset", false], [171, "module-brails.processors.garage_detector.lib.efficientdet.loss", false], [172, "module-brails.processors.garage_detector.lib.efficientdet.model", false], [173, "module-brails.processors.garage_detector.lib.efficientdet.utils", false], [174, "module-brails.processors.garage_detector.lib.efficientnet", false], [175, "module-brails.processors.garage_detector.lib.efficientnet.model", false], [176, "module-brails.processors.garage_detector.lib.efficientnet.utils", false], [177, "module-brails.processors.garage_detector.lib.efficientnet.utils_extra", false], [178, "module-brails.processors.garage_detector.lib.infer_detector", false], [179, "module-brails.processors.garage_detector.lib.train_detector", false], [180, "module-brails.processors.garage_detector.lib.utils", false], [181, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm", false], [182, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm", false], [183, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false], [184, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.comm", false], [185, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate", false], [186, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest", false], [187, "module-brails.processors.garage_detector.lib.utils.utils", false], [188, "module-brails.processors.gpt_base_model", false], [189, "module-brails.processors.gpt_base_model.GPT", false], [190, "module-brails.processors.gpt_base_model.utils", false], [191, "module-brails.processors.image_classifier", false], [192, "module-brails.processors.image_classifier.image_classifier", false], [193, "module-brails.processors.image_processor", false], [194, "module-brails.processors.image_segmenter", false], [196, "module-brails.processors.nFloor_gpt", false], [197, "module-brails.processors.nFloor_gpt.nFloor_gpt", false], [198, "module-brails.processors.nFloor_vlm", false], [199, "module-brails.processors.nFloor_vlm.nFloor_vlm", false], [200, "module-brails.processors.nfloors_detector", false], [201, "module-brails.processors.nfloors_detector.lib", false], [202, "module-brails.processors.nfloors_detector.lib.backbone", false], [203, "module-brails.processors.nfloors_detector.lib.efficientdet", false], [204, "module-brails.processors.nfloors_detector.lib.efficientdet.coco", false], [205, "module-brails.processors.nfloors_detector.lib.efficientdet.config", false], [206, "module-brails.processors.nfloors_detector.lib.efficientdet.dataset", false], [207, "module-brails.processors.nfloors_detector.lib.efficientdet.loss", false], [208, "module-brails.processors.nfloors_detector.lib.efficientdet.model", false], [209, "module-brails.processors.nfloors_detector.lib.efficientdet.utils", false], [210, "module-brails.processors.nfloors_detector.lib.efficientnet", false], [211, "module-brails.processors.nfloors_detector.lib.efficientnet.model", false], [212, "module-brails.processors.nfloors_detector.lib.efficientnet.utils", false], [213, "module-brails.processors.nfloors_detector.lib.efficientnet.utils_extra", false], [214, "module-brails.processors.nfloors_detector.lib.infer_detector", false], [215, "module-brails.processors.nfloors_detector.lib.train_detector", false], [216, "module-brails.processors.nfloors_detector.lib.utils", false], [217, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm", false], [218, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm", false], [219, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false], [220, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm", false], [221, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate", false], [222, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest", false], [223, "module-brails.processors.nfloors_detector.lib.utils.utils", false], [224, "module-brails.processors.nfloors_detector.nfloor_detector", false], [225, "module-brails.processors.occupancy_classifier", false], [226, "module-brails.processors.occupancy_classifier.occupancy_classifier", false], [227, "module-brails.processors.other_idea", false], [228, "module-brails.processors.other_idea.arial_processing", false], [229, "module-brails.processors.other_idea.street_processor", false], [230, "module-brails.processors.roof_shape_classifier", false], [231, "module-brails.processors.roof_shape_classifier.roof_shape_classifier", false], [232, "module-brails.processors.roof_shape_gpt", false], [233, "module-brails.processors.roof_shape_gpt.roof_shape_gpt", false], [234, "module-brails.processors.roof_shape_vlm", false], [235, "module-brails.processors.roof_shape_vlm.roof_shape_vlm", false], [236, "module-brails.processors.street_level_damage_detection", false], [237, "module-brails.processors.street_level_damage_detection.street_level_damage_detection", false], [238, "module-brails.processors.vlm_image_classifier", false], [239, "module-brails.processors.vlm_image_classifier.CLIPClassifier", false], [240, "module-brails.processors.vlm_image_classifier.clip", false], [241, "module-brails.processors.vlm_image_classifier.clip.clip", false], [242, "module-brails.processors.vlm_image_classifier.clip.model", false], [243, "module-brails.processors.vlm_image_classifier.clip.simple_tokenizer", false], [244, "module-brails.processors.vlm_image_classifier.clip.utils", false], [245, "module-brails.processors.vlm_segmenter", false], [246, "module-brails.processors.vlm_segmenter.grounded_sam_utils", false], [247, "module-brails.processors.vlm_segmenter.segment_anything", false], [248, "module-brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator", false], [249, "module-brails.processors.vlm_segmenter.segment_anything.build_sam", false], [250, "module-brails.processors.vlm_segmenter.segment_anything.build_sam_hq", false], [251, "module-brails.processors.vlm_segmenter.segment_anything.modeling", false], [252, "module-brails.processors.vlm_segmenter.segment_anything.modeling.common", false], [253, "module-brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder", false], [254, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder", false], [255, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq", false], [256, "module-brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder", false], [257, "module-brails.processors.vlm_segmenter.segment_anything.modeling.sam", false], [258, "module-brails.processors.vlm_segmenter.segment_anything.modeling.transformer", false], [259, "module-brails.processors.vlm_segmenter.segment_anything.predictor", false], [260, "module-brails.processors.vlm_segmenter.segment_anything.utils", false], [261, "module-brails.processors.vlm_segmenter.segment_anything.utils.amg", false], [262, "module-brails.processors.vlm_segmenter.segment_anything.utils.onnx", false], [263, "module-brails.processors.vlm_segmenter.segment_anything.utils.transforms", false], [264, "module-brails.processors.vlm_segmenter.vlm_segmenter", false], [265, "module-brails.processors.year_built_classifier", false], [266, "module-brails.processors.year_built_classifier.Resnet", false], [268, "module-brails.processors.year_built_classifier.lib", false], [270, "module-brails.processors.year_built_classifier.lib.utils", false], [271, "module-brails.processors.year_built_classifier.model", false], [273, "module-brails.processors.year_built_classifier.weights", false], [275, "module-brails.scrapers", false], [276, "module-brails.scrapers.asce_hazard_data_scraper", false], [278, "module-brails.scrapers.footprint_scraper", false], [279, "module-brails.scrapers.google_satellite", false], [280, "module-brails.scrapers.google_satellite.google_satellite", false], [281, "module-brails.scrapers.google_streetview", false], [282, "module-brails.scrapers.google_streetview.google_streetview", false], [283, "module-brails.scrapers.image_scraper", false], [284, "module-brails.scrapers.ms_footprint_scraper", false], [285, "module-brails.scrapers.ms_footprint_scraper.ms_footprint_handler", false], [286, "module-brails.scrapers.nbi_scraper", false], [287, "module-brails.scrapers.nbi_scraper.nbi_scraper", false], [288, "module-brails.scrapers.nsi_parser", false], [289, "module-brails.scrapers.nsi_parser.nsi_parser", false], [290, "module-brails.scrapers.nti_scraper", false], [291, "module-brails.scrapers.nti_scraper.nti_scraper", false], [292, "module-brails.scrapers.osm_footprint_scraper", false], [293, "module-brails.scrapers.osm_footprint_scraper.osm_footprint_scraper", false], [294, "module-brails.scrapers.osm_power_network_scraper", false], [296, "module-brails.scrapers.overture_maps_scraper", false], [298, "module-brails.scrapers.rapid_image_processors", false], [299, "module-brails.scrapers.rapid_image_processors.rapid_image_processors", false], [300, "module-brails.scrapers.usa_footprint_scraper", false], [301, "module-brails.scrapers.usa_footprint_scraper.usa_footprint_scraper", false], [302, "module-brails.scrapers.user_footprints", false], [303, "module-brails.types", false], [304, "module-brails.types.asset_inventory", false], [305, "module-brails.types.image_set", false], [306, "module-brails.types.region_boundary", false], [307, "module-brails.utils", false], [308, "module-brails.utils.arcgisapi_service_helper", false], [309, "module-brails.utils.geo_tools", false], [310, "module-brails.utils.importer", false], [311, "module-brails.utils.input_validator", false], [312, "module-brails.utils.inventory_validator", false], [313, "module-brails.utils.model_utils", false], [314, "module-brails.utils.plot_tools", false], [315, "module-brails.utils.segmentation_utils", false], [316, "module-brails.utils.spatial_join_methods", false], [317, "module-brails.utils.spatial_join_methods.base", false], [318, "module-brails.utils.spatial_join_methods.distance_based_point_matcher", false], [319, "module-brails.utils.spatial_join_methods.get_points_in_polygons", false], [320, "module-brails.utils.spatial_join_methods.get_points_near_polygons", false], [321, "module-brails.utils.unit_converter", false], [322, "module-conf", false]], "ms_footprintscraper (class in brails.scrapers.ms_footprint_scraper.ms_footprint_handler)": [[285, "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper", false]], "msf_config() (in module brails.inferers.hazus_inferer_wind.windmsfrulesets)": [[31, "brails.inferers.hazus_inferer_wind.WindMSFRulesets.MSF_config", false]], "mutualexclude (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.MutualExclude", false]], "mutualexclude (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.MutualExclude", false]], "nbiscraper (class in brails.scrapers.nbi_scraper.nbi_scraper)": [[287, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper", false]], "nceaverage (class in brails.processors.foundation_classifier.lib.nceaverage)": [[124, "brails.processors.foundation_classifier.lib.NCEAverage.NCEAverage", false]], "nceaverage (class in brails.processors.foundation_classifier.npid.npid_lib.nceaverage)": [[146, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEAverage", false]], "ncecriterion (class in brails.processors.foundation_classifier.lib.ncecriterion)": [[125, "brails.processors.foundation_classifier.lib.NCECriterion.NCECriterion", false]], "ncecriterion (class in brails.processors.foundation_classifier.npid.npid_lib.ncecriterion)": [[147, "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.NCECriterion", false]], "ncefunction (class in brails.processors.foundation_classifier.lib.nceaverage)": [[124, "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction", false]], "ncefunction (class in brails.processors.foundation_classifier.npid.npid_lib.nceaverage)": [[146, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction", false]], "nfloordetector (class in brails.processors.nfloors_detector.nfloor_detector)": [[224, "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector", false]], "nfloorgpt (class in brails.processors.nfloor_gpt.nfloor_gpt)": [[197, "brails.processors.nFloor_gpt.nFloor_gpt.NFloorGPT", false]], "nfloorvlm (class in brails.processors.nfloor_vlm.nfloor_vlm)": [[199, "brails.processors.nFloor_vlm.nFloor_vlm.NFloorVLM", false]], "nms() (in module brails.processors.chimney_detector.lib.efficientdet.model)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.nms", false]], "nms() (in module brails.processors.garage_detector.lib.efficientdet.model)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.nms", false]], "nms() (in module brails.processors.nfloors_detector.lib.efficientdet.model)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.nms", false]], "normalize (class in brails.processors.foundation_classifier.lib.normalize)": [[128, "brails.processors.foundation_classifier.lib.normalize.Normalize", false]], "normalize (class in brails.processors.foundation_classifier.npid.npid_lib.normalize)": [[150, "brails.processors.foundation_classifier.npid.npid_lib.normalize.Normalize", false]], "normalize_unit() (brails.utils.unit_converter.unitconverter static method)": [[321, "brails.utils.unit_converter.UnitConverter.normalize_unit", false]], "normalizenumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.NormalizeNumpy", false]], "normalizenumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.NormalizeNumpy", false]], "normalizer (class in brails.processors.chimney_detector.lib.efficientdet.dataset)": [[57, "brails.processors.chimney_detector.lib.efficientdet.dataset.Normalizer", false]], "normalizer (class in brails.processors.garage_detector.lib.efficientdet.dataset)": [[170, "brails.processors.garage_detector.lib.efficientdet.dataset.Normalizer", false]], "normalizer (class in brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[206, "brails.processors.nfloors_detector.lib.efficientdet.dataset.Normalizer", false]], "notfounderror": [[3, "brails.exceptions.NotFoundError", false]], "notsupportedcliexception": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.NotSupportedCliException", false]], "nr_slaves (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.syncmaster property)": [[71, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster.nr_slaves", false]], "nr_slaves (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.syncmaster property)": [[97, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster.nr_slaves", false]], "nr_slaves (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.syncmaster property)": [[184, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster.nr_slaves", false]], "nr_slaves (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.syncmaster property)": [[220, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster.nr_slaves", false]], "nsi_parser (class in brails.scrapers.nsi_parser.nsi_parser)": [[289, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser", false]], "ntiscraper (class in brails.scrapers.nti_scraper.nti_scraper)": [[291, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper", false]], "num_classes (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.num_classes", false]], "num_classes (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.num_classes", false]], "num_classes (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.num_classes", false]], "num_repeat (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.num_repeat", false]], "num_repeat (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.num_repeat", false]], "num_repeat (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.num_repeat", false]], "occupancyclassifier (class in brails.processors.occupancy_classifier.occupancy_classifier)": [[226, "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier", false]], "osm_footprintscraper (class in brails.scrapers.osm_footprint_scraper.osm_footprint_scraper)": [[293, "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper", false]], "output_filters (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.output_filters", false]], "output_filters (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.output_filters", false]], "output_filters (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.output_filters", false]], "parse_devices() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.parse_devices", false]], "parse_input_list() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[90, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.parse_input_list", false]], "parse_units() (brails.utils.unit_converter.unitconverter static method)": [[321, "brails.utils.unit_converter.UnitConverter.parse_units", false]], "patch_replication_callback() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[72, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.patch_replication_callback", false]], "patch_replication_callback() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[98, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.patch_replication_callback", false]], "patch_replication_callback() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[185, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.patch_replication_callback", false]], "patch_replication_callback() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[221, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.patch_replication_callback", false]], "patch_sync_batchnorm() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[69, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.patch_sync_batchnorm", false]], "patch_sync_batchnorm() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[182, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.patch_sync_batchnorm", false]], "patch_sync_batchnorm() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[218, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.patch_sync_batchnorm", false]], "patchembed (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.PatchEmbed", false]], "pixel_acc() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.segmentationmodulebase method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModuleBase.pixel_acc", false]], "plainradam (class in brails.processors.foundation_classifier.attention_utils.radam)": [[83, "brails.processors.foundation_classifier.attention_utils.radam.PlainRAdam", false]], "plot_one_box() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.plot_one_box", false]], "plot_one_box() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.plot_one_box", false]], "plot_one_box() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.plot_one_box", false]], "plot_polygon_cells() (brails.utils.geo_tools.geotools static method)": [[309, "brails.utils.geo_tools.GeoTools.plot_polygon_cells", false]], "plottools (class in brails.utils.plot_tools)": [[314, "brails.utils.plot_tools.PlotTools", false]], "pmg (class in brails.processors.year_built_classifier.model)": [[271, "brails.processors.year_built_classifier.model.PMG", false]], "poisson_downsampling() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.poisson_downsampling", false]], "poisson_downsampling() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.poisson_downsampling", false]], "poissonsubsampling (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.PoissonSubsampling", false]], "poissonsubsampling (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.PoissonSubsampling", false]], "positionembeddingrandom (class in brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder)": [[256, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom", false]], "postprocess() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.postprocess", false]], "postprocess() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.postprocess", false]], "postprocess() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.postprocess", false]], "postprocess_masks() (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam method)": [[257, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.postprocess_masks", false]], "postprocess_small_regions() (brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.samautomaticmaskgenerator static method)": [[248, "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator.postprocess_small_regions", false]], "ppm (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPM", false]], "ppmdeepsup (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPMDeepsup", false]], "pred_idx_to_labels() (in module brails.processors.vlm_image_classifier.clip.utils)": [[244, "brails.processors.vlm_image_classifier.clip.utils.pred_idx_to_labels", false]], "predict() (brails.processors.chimney_detector.chimney_detector.chimneydetector method)": [[51, "brails.processors.chimney_detector.chimney_detector.ChimneyDetector.predict", false]], "predict() (brails.processors.chimney_detector.lib.infer_detector.infer method)": [[65, "brails.processors.chimney_detector.lib.infer_detector.Infer.predict", false]], "predict() (brails.processors.cons_type_classifier.constructiontypeclassifier.constypeclassifier method)": [[76, "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier.predict", false]], "predict() (brails.processors.facade_parser.facade_parser.facadeparser method)": [[78, "brails.processors.facade_parser.facade_parser.FacadeParser.predict", false]], "predict() (brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.ffhpredictorklepac method)": [[80, "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.FFHPredictorKlepac.predict", false]], "predict() (brails.processors.garage_detector.garage_detector.garagedetector method)": [[164, "brails.processors.garage_detector.garage_detector.GarageDetector.predict", false]], "predict() (brails.processors.garage_detector.lib.infer_detector.infer method)": [[178, "brails.processors.garage_detector.lib.infer_detector.Infer.predict", false]], "predict() (brails.processors.gpt_base_model.gpt.gpt method)": [[189, "brails.processors.gpt_base_model.GPT.GPT.predict", false]], "predict() (brails.processors.image_classifier.image_classifier.imageclassifier method)": [[192, "brails.processors.image_classifier.image_classifier.ImageClassifier.predict", false]], "predict() (brails.processors.image_processor.imageprocessor method)": [[193, "brails.processors.image_processor.ImageProcessor.predict", false]], "predict() (brails.processors.nfloors_detector.lib.infer_detector.infer method)": [[214, "brails.processors.nfloors_detector.lib.infer_detector.Infer.predict", false]], "predict() (brails.processors.nfloors_detector.nfloor_detector.nfloordetector method)": [[224, "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector.predict", false]], "predict() (brails.processors.occupancy_classifier.occupancy_classifier.occupancyclassifier method)": [[226, "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier.predict", false]], "predict() (brails.processors.other_idea.arial_processing.arialprocessing method)": [[228, "brails.processors.other_idea.arial_processing.ArialProcessing.predict", false]], "predict() (brails.processors.other_idea.street_processor.streetprocessor method)": [[229, "brails.processors.other_idea.street_processor.StreetProcessor.predict", false]], "predict() (brails.processors.roof_shape_classifier.roof_shape_classifier.roofshapeclassifier method)": [[231, "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier.predict", false]], "predict() (brails.processors.street_level_damage_detection.street_level_damage_detection.damagedetection_streetlevel method)": [[237, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel.predict", false]], "predict() (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier method)": [[239, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.predict", false]], "predict() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[259, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.predict", false]], "predict() (brails.processors.vlm_segmenter.vlm_segmenter.vlmsegmenter method)": [[264, "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter.predict", false]], "predict_masks() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.maskdecoder method)": [[254, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder.predict_masks", false]], "predict_masks() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.maskdecoderhq method)": [[255, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ.predict_masks", false]], "predict_torch() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[259, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.predict_torch", false]], "predict_wrapper() (in module brails.processors.vlm_image_classifier.clip.utils)": [[244, "brails.processors.vlm_image_classifier.clip.utils.predict_wrapper", false]], "preprocess() (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam method)": [[257, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.preprocess", false]], "preprocess() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.preprocess", false]], "preprocess() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.preprocess", false]], "preprocess() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.preprocess", false]], "preprocess_batch_img() (in module brails.processors.vlm_image_classifier.clip.utils)": [[244, "brails.processors.vlm_image_classifier.clip.utils.preprocess_batch_img", false]], "preprocess_video() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.preprocess_video", false]], "preprocess_video() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.preprocess_video", false]], "preprocess_video() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.preprocess_video", false]], "print_info() (brails.types.asset_inventory.asset method)": [[304, "brails.types.asset_inventory.Asset.print_info", false]], "print_info() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.print_info", false]], "print_info() (brails.types.image_set.image method)": [[305, "brails.types.image_set.Image.print_info", false]], "print_info() (brails.types.image_set.imageset method)": [[305, "brails.types.image_set.ImageSet.print_info", false]], "process_range() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.process_range", false]], "prompt_and_save_caption() (in module brails.processors.gpt_base_model.utils)": [[190, "brails.processors.gpt_base_model.utils.prompt_and_save_caption", false]], "promptencoder (class in brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder)": [[256, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder", false]], "pulsar_image_extractor() (brails.scrapers.rapid_image_processors.rapid_image_processors.rapidimageprocessors method)": [[299, "brails.scrapers.rapid_image_processors.rapid_image_processors.RAPIDImageProcessors.pulsar_image_extractor", false]], "put() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[71, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult.put", false]], "put() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.futureresult method)": [[97, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult.put", false]], "put() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[184, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult.put", false]], "put() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[220, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult.put", false]], "quickgelu (class in brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.QuickGELU", false]], "radam (class in brails.processors.foundation_classifier.attention_utils.radam)": [[83, "brails.processors.foundation_classifier.attention_utils.radam.RAdam", false]], "random_num_generator() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.random_num_generator", false]], "random_num_generator() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.random_num_generator", false]], "random_split() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[105, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.random_split", false]], "randomcropnumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.RandomCropNumpy", false]], "randomcropnumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.RandomCropNumpy", false]], "randomgaussianblurring (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.RandomGaussianBlurring", false]], "randomgaussianblurring (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.RandomGaussianBlurring", false]], "randomrotate (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.RandomRotate", false]], "randomrotate (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.RandomRotate", false]], "randomsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.RandomSampler", false]], "rapidimageprocessors (class in brails.scrapers.rapid_image_processors.rapid_image_processors)": [[299, "brails.scrapers.rapid_image_processors.rapid_image_processors.RAPIDImageProcessors", false]], "read_from_csv() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.read_from_csv", false]], "regionboundary (class in brails.types.region_boundary)": [[306, "brails.types.region_boundary.RegionBoundary", false]], "regioninput (class in brails.types.region_boundary)": [[306, "brails.types.region_boundary.RegionInput", false]], "register_slave() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[71, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster.register_slave", false]], "register_slave() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.syncmaster method)": [[97, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster.register_slave", false]], "register_slave() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[184, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster.register_slave", false]], "register_slave() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[220, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster.register_slave", false]], "regressor (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.Regressor", false]], "regressor (class in brails.processors.garage_detector.lib.efficientdet.model)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.Regressor", false]], "regressor (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.Regressor", false]], "remove_asset() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.remove_asset", false]], "remove_features() (brails.types.asset_inventory.asset method)": [[304, "brails.types.asset_inventory.Asset.remove_features", false]], "remove_features() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.remove_features", false]], "remove_small_regions() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.remove_small_regions", false]], "replace_w_sync_bn() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.replace_w_sync_bn", false]], "replace_w_sync_bn() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.replace_w_sync_bn", false]], "replace_w_sync_bn() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.replace_w_sync_bn", false]], "replicate() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.dataparallelwithcallback method)": [[72, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback.replicate", false]], "replicate() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.dataparallelwithcallback method)": [[98, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.DataParallelWithCallback.replicate", false]], "replicate() (brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.dataparallelwithcallback method)": [[185, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback.replicate", false]], "replicate() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.dataparallelwithcallback method)": [[221, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback.replicate", false]], "reset() (brails.processors.foundation_classifier.lib.utils.averagemeter method)": [[129, "brails.processors.foundation_classifier.lib.utils.AverageMeter.reset", false]], "reset() (brails.processors.foundation_classifier.npid.npid_lib.utils.averagemeter method)": [[151, "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter.reset", false]], "reset_image() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[259, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.reset_image", false]], "reset_parameters() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[70, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", false]], "reset_parameters() (brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[183, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", false]], "reset_parameters() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[219, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", false]], "reset_running_stats() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[70, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", false]], "reset_running_stats() (brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[183, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", false]], "reset_running_stats() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[219, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", false]], "residualattentionblock (class in brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock", false]], "residualattentionmodel_92 (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92", false]], "residualattentionmodel_92_32input (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input", false]], "residualattentionmodel_92_32input_update (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input_update", false]], "residualattentionmodel_92_small (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small", false]], "residualattentionmodel_92_small_1d (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[133, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small_1D", false]], "residualblock (class in brails.processors.foundation_classifier.models.basic_layer)": [[132, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock", false]], "residualblock1d (class in brails.processors.foundation_classifier.models.basic_layer)": [[132, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock1D", false]], "resize_longest_image_size() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel static method)": [[262, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.resize_longest_image_size", false]], "resizelongestside (class in brails.processors.vlm_segmenter.segment_anything.utils.transforms)": [[263, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide", false]], "resizer (class in brails.processors.chimney_detector.lib.efficientdet.dataset)": [[57, "brails.processors.chimney_detector.lib.efficientdet.dataset.Resizer", false]], "resizer (class in brails.processors.garage_detector.lib.efficientdet.dataset)": [[170, "brails.processors.garage_detector.lib.efficientdet.dataset.Resizer", false]], "resizer (class in brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[206, "brails.processors.nfloors_detector.lib.efficientdet.dataset.Resizer", false]], "resnet (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.Resnet", false]], "resnet (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[113, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.ResNet", false]], "resnet (class in brails.processors.foundation_classifier.models.resnet_applied)": [[134, "brails.processors.foundation_classifier.models.resnet_applied.ResNet", false]], "resnet (class in brails.processors.year_built_classifier.resnet)": [[266, "brails.processors.year_built_classifier.Resnet.ResNet", false]], "resnet101() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[113, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet101", false]], "resnet101() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[134, "brails.processors.foundation_classifier.models.resnet_applied.resnet101", false]], "resnet101() (in module brails.processors.year_built_classifier.resnet)": [[266, "brails.processors.year_built_classifier.Resnet.resnet101", false]], "resnet152() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[134, "brails.processors.foundation_classifier.models.resnet_applied.resnet152", false]], "resnet152() (in module brails.processors.year_built_classifier.resnet)": [[266, "brails.processors.year_built_classifier.Resnet.resnet152", false]], "resnet18() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[113, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet18", false]], "resnet18() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[134, "brails.processors.foundation_classifier.models.resnet_applied.resnet18", false]], "resnet18() (in module brails.processors.year_built_classifier.resnet)": [[266, "brails.processors.year_built_classifier.Resnet.resnet18", false]], "resnet34() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[134, "brails.processors.foundation_classifier.models.resnet_applied.resnet34", false]], "resnet34() (in module brails.processors.year_built_classifier.resnet)": [[266, "brails.processors.year_built_classifier.Resnet.resnet34", false]], "resnet50() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[113, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet50", false]], "resnet50() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[134, "brails.processors.foundation_classifier.models.resnet_applied.resnet50", false]], "resnet50() (in module brails.processors.year_built_classifier.resnet)": [[266, "brails.processors.year_built_classifier.Resnet.resnet50", false]], "resnetdilated (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ResnetDilated", false]], "resnext (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext)": [[114, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.ResNeXt", false]], "resnext101() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext)": [[114, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.resnext101", false]], "resnext101_32x8d() (in module brails.processors.year_built_classifier.resnet)": [[266, "brails.processors.year_built_classifier.Resnet.resnext101_32x8d", false]], "resnext50_32x4d() (in module brails.processors.year_built_classifier.resnet)": [[266, "brails.processors.year_built_classifier.Resnet.resnext50_32x4d", false]], "retrain() (brails.processors.chimney_detector.chimney_detector.chimneydetector method)": [[51, "brails.processors.chimney_detector.chimney_detector.ChimneyDetector.retrain", false]], "retrain() (brails.processors.cons_type_classifier.constructiontypeclassifier.constypeclassifier method)": [[76, "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier.retrain", false]], "retrain() (brails.processors.garage_detector.garage_detector.garagedetector method)": [[164, "brails.processors.garage_detector.garage_detector.GarageDetector.retrain", false]], "retrain() (brails.processors.image_classifier.image_classifier.imageclassifier method)": [[192, "brails.processors.image_classifier.image_classifier.ImageClassifier.retrain", false]], "retrain() (brails.processors.nfloors_detector.nfloor_detector.nfloordetector method)": [[224, "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector.retrain", false]], "retrain() (brails.processors.occupancy_classifier.occupancy_classifier.occupancyclassifier method)": [[226, "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier.retrain", false]], "retrain() (brails.processors.roof_shape_classifier.roof_shape_classifier.roofshapeclassifier method)": [[231, "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier.retrain", false]], "rle_to_mask() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.rle_to_mask", false]], "roofshapeclassifier (class in brails.processors.roof_shape_classifier.roof_shape_classifier)": [[231, "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier", false]], "roofshapegpt (class in brails.processors.roof_shape_gpt.roof_shape_gpt)": [[233, "brails.processors.roof_shape_gpt.roof_shape_gpt.RoofShapeGPT", false]], "roofshapevlm (class in brails.processors.roof_shape_vlm.roof_shape_vlm)": [[235, "brails.processors.roof_shape_vlm.roof_shape_vlm.RoofShapeVLM", false]], "round() (in module brails.processors.vlm_image_classifier.clip.utils)": [[244, "brails.processors.vlm_image_classifier.clip.utils.round", false]], "round2nearest_multiple() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[90, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.round2nearest_multiple", false]], "round2nearest_multiple() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding method)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.round2nearest_multiple", false]], "round_filters() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.round_filters", false]], "round_filters() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.round_filters", false]], "round_filters() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.round_filters", false]], "round_repeats() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.round_repeats", false]], "round_repeats() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.round_repeats", false]], "round_repeats() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.round_repeats", false]], "run_master() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[71, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster.run_master", false]], "run_master() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.syncmaster method)": [[97, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster.run_master", false]], "run_master() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[184, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster.run_master", false]], "run_master() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[220, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster.run_master", false]], "run_on_one_image() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.run_on_one_image", false]], "run_slave() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.slavepipe method)": [[71, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SlavePipe.run_slave", false]], "run_slave() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.slavepipe method)": [[97, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SlavePipe.run_slave", false]], "run_slave() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.slavepipe method)": [[184, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SlavePipe.run_slave", false]], "run_slave() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.slavepipe method)": [[220, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SlavePipe.run_slave", false]], "sam (class in brails.processors.vlm_segmenter.segment_anything.modeling.sam)": [[257, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam", false]], "samautomaticmaskgenerator (class in brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator)": [[248, "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator", false]], "samonnxmodel (class in brails.processors.vlm_segmenter.segment_anything.utils.onnx)": [[262, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel", false]], "sampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.Sampler", false]], "sampredictor (class in brails.processors.vlm_segmenter.segment_anything.predictor)": [[259, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor", false]], "save_checkpoint() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[66, "brails.processors.chimney_detector.lib.train_detector.Detector.save_checkpoint", false]], "save_checkpoint() (brails.processors.garage_detector.lib.train_detector.detector method)": [[179, "brails.processors.garage_detector.lib.train_detector.Detector.save_checkpoint", false]], "save_checkpoint() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[215, "brails.processors.nfloors_detector.lib.train_detector.Detector.save_checkpoint", false]], "scatter() (brails.processors.chimney_detector.lib.utils.utils.customdataparallel method)": [[74, "brails.processors.chimney_detector.lib.utils.utils.CustomDataParallel.scatter", false]], "scatter() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.userscattereddataparallel method)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.UserScatteredDataParallel.scatter", false]], "scatter() (brails.processors.garage_detector.lib.utils.utils.customdataparallel method)": [[187, "brails.processors.garage_detector.lib.utils.utils.CustomDataParallel.scatter", false]], "scatter() (brails.processors.nfloors_detector.lib.utils.utils.customdataparallel method)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.CustomDataParallel.scatter", false]], "score (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[7, "brails.filters.house_view.house_view.FilterDetectionResult.score", false]], "score (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.score", false]], "se_ratio (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.se_ratio", false]], "se_ratio (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.se_ratio", false]], "se_ratio (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.se_ratio", false]], "secb_config() (in module brails.inferers.hazus_inferer_wind.windsecbrulesets)": [[33, "brails.inferers.hazus_inferer_wind.WindSECBRulesets.SECB_config", false]], "segm_transform() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[90, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.segm_transform", false]], "segment() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.segment", false]], "segmentationmodule (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModule", false]], "segmentationmodulebase (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModuleBase", false]], "select_masks() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel method)": [[262, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.select_masks", false]], "separableconvblock (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[59, "brails.processors.chimney_detector.lib.efficientdet.model.SeparableConvBlock", false]], "separableconvblock (class in brails.processors.garage_detector.lib.efficientdet.model)": [[172, "brails.processors.garage_detector.lib.efficientdet.model.SeparableConvBlock", false]], "separableconvblock (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[208, "brails.processors.nfloors_detector.lib.efficientdet.model.SeparableConvBlock", false]], "sequential_imputer() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[11, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.sequential_imputer", false]], "sequentialsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.SequentialSampler", false]], "serb_config() (in module brails.inferers.hazus_inferer_wind.windserbrulesets)": [[34, "brails.inferers.hazus_inferer_wind.WindSERBRulesets.SERB_config", false]], "set_directory() (brails.types.image_set.imageset method)": [[305, "brails.types.image_set.ImageSet.set_directory", false]], "set_fixed_params() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[66, "brails.processors.chimney_detector.lib.train_detector.Detector.set_fixed_params", false]], "set_fixed_params() (brails.processors.garage_detector.lib.train_detector.detector method)": [[179, "brails.processors.garage_detector.lib.train_detector.Detector.set_fixed_params", false]], "set_fixed_params() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[215, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_fixed_params", false]], "set_hyperparams() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[66, "brails.processors.chimney_detector.lib.train_detector.Detector.set_hyperparams", false]], "set_hyperparams() (brails.processors.garage_detector.lib.train_detector.detector method)": [[179, "brails.processors.garage_detector.lib.train_detector.Detector.set_hyperparams", false]], "set_hyperparams() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[215, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_hyperparams", false]], "set_image() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[259, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.set_image", false]], "set_image() (brails.types.image_set.image method)": [[305, "brails.types.image_set.Image.set_image", false]], "set_model() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[66, "brails.processors.chimney_detector.lib.train_detector.Detector.set_model", false]], "set_model() (brails.processors.garage_detector.lib.train_detector.detector method)": [[179, "brails.processors.garage_detector.lib.train_detector.Detector.set_model", false]], "set_model() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[215, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_model", false]], "set_swish() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet method)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.set_swish", false]], "set_swish() (brails.processors.chimney_detector.lib.efficientnet.model.mbconvblock method)": [[62, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock.set_swish", false]], "set_swish() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet method)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.set_swish", false]], "set_swish() (brails.processors.garage_detector.lib.efficientnet.model.mbconvblock method)": [[175, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock.set_swish", false]], "set_swish() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet method)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.set_swish", false]], "set_swish() (brails.processors.nfloors_detector.lib.efficientnet.model.mbconvblock method)": [[211, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock.set_swish", false]], "set_torch_image() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[259, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.set_torch_image", false]], "set_train_dataset() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[66, "brails.processors.chimney_detector.lib.train_detector.Detector.set_train_dataset", false]], "set_train_dataset() (brails.processors.garage_detector.lib.train_detector.detector method)": [[179, "brails.processors.garage_detector.lib.train_detector.Detector.set_train_dataset", false]], "set_train_dataset() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[215, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_train_dataset", false]], "set_val_dataset() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[66, "brails.processors.chimney_detector.lib.train_detector.Detector.set_val_dataset", false]], "set_val_dataset() (brails.processors.garage_detector.lib.train_detector.detector method)": [[179, "brails.processors.garage_detector.lib.train_detector.Detector.set_val_dataset", false]], "set_val_dataset() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[215, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_val_dataset", false]], "setup_logger() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.setup_logger", false]], "show_binary_mask() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.show_binary_mask", false]], "show_box() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.show_box", false]], "show_points() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.show_points", false]], "show_predictions() (brails.utils.plot_tools.plottools static method)": [[314, "brails.utils.plot_tools.PlotTools.show_predictions", false]], "simcenterinferer (class in brails.inferers.simcenter_inferer.simcenter_inferer)": [[42, "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer", false]], "simpletokenizer (class in brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[243, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer", false]], "skconv (class in brails.processors.foundation_classifier.models.sknet)": [[135, "brails.processors.foundation_classifier.models.sknet.SKConv", false]], "sknet (class in brails.processors.foundation_classifier.models.sknet)": [[135, "brails.processors.foundation_classifier.models.sknet.SKNet", false]], "sknet101() (in module brails.processors.foundation_classifier.models.sknet)": [[135, "brails.processors.foundation_classifier.models.sknet.SKNet101", false]], "sknet26() (in module brails.processors.foundation_classifier.models.sknet)": [[135, "brails.processors.foundation_classifier.models.sknet.SKNet26", false]], "sknet50() (in module brails.processors.foundation_classifier.models.sknet)": [[135, "brails.processors.foundation_classifier.models.sknet.SKNet50", false]], "skunit (class in brails.processors.foundation_classifier.models.sknet)": [[135, "brails.processors.foundation_classifier.models.sknet.SKUnit", false]], "slavepipe (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm)": [[71, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SlavePipe", false]], "slavepipe (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm)": [[97, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SlavePipe", false]], "slavepipe (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.comm)": [[184, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SlavePipe", false]], "slavepipe (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm)": [[220, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SlavePipe", false]], "sliding_window() (in module brails.processors.foundation_classifier.attention_utils.utils)": [[84, "brails.processors.foundation_classifier.attention_utils.utils.sliding_window", false]], "spatialjoinmethods (class in brails.utils.spatial_join_methods.base)": [[317, "brails.utils.spatial_join_methods.base.SpatialJoinMethods", false]], "split (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.Split", false]], "split (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.Split", false]], "split_polygon_into_cells() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[308, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.split_polygon_into_cells", false]], "spmb_config() (in module brails.inferers.hazus_inferer_wind.windspmbrulesets)": [[35, "brails.inferers.hazus_inferer_wind.WindSPMBRulesets.SPMB_config", false]], "standard_to_bgr() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.standard_to_bgr", false]], "standard_to_bgr() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.standard_to_bgr", false]], "standard_to_bgr() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.standard_to_bgr", false]], "start_training() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[66, "brails.processors.chimney_detector.lib.train_detector.Detector.start_training", false]], "start_training() (brails.processors.garage_detector.lib.train_detector.detector method)": [[179, "brails.processors.garage_detector.lib.train_detector.Detector.start_training", false]], "start_training() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[215, "brails.processors.nfloors_detector.lib.train_detector.Detector.start_training", false]], "step() (brails.processors.foundation_classifier.attention_utils.radam.adamw method)": [[83, "brails.processors.foundation_classifier.attention_utils.radam.AdamW.step", false]], "step() (brails.processors.foundation_classifier.attention_utils.radam.plainradam method)": [[83, "brails.processors.foundation_classifier.attention_utils.radam.PlainRAdam.step", false]], "step() (brails.processors.foundation_classifier.attention_utils.radam.radam method)": [[83, "brails.processors.foundation_classifier.attention_utils.radam.RAdam.step", false]], "streetprocessor (class in brails.processors.other_idea.street_processor)": [[229, "brails.processors.other_idea.street_processor.StreetProcessor", false]], "stride (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.stride", false]], "stride (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.stride", false]], "stride (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.stride", false]], "subset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[105, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.Subset", false]], "subsetrandomsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.SubsetRandomSampler", false]], "swish (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.Swish", false]], "swish (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.Swish", false]], "swish (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.Swish", false]], "swishimplementation (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation", false]], "swishimplementation (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation", false]], "swishimplementation (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation", false]], "synchronizedbatchnorm1d (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[69, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm1d (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm)": [[96, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm1d (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[182, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm1d (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[218, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm2d (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[69, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm2d (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm)": [[96, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm2d (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[182, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm2d (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[218, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm3d (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[69, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d", false]], "synchronizedbatchnorm3d (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm)": [[96, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.SynchronizedBatchNorm3d", false]], "synchronizedbatchnorm3d (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[182, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d", false]], "synchronizedbatchnorm3d (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[218, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d", false]], "syncmaster (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm)": [[71, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster", false]], "syncmaster (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm)": [[97, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster", false]], "syncmaster (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.comm)": [[184, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster", false]], "syncmaster (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm)": [[220, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster", false]], "tensordataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[105, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.TensorDataset", false]], "test() (in module brails.processors.year_built_classifier.lib.utils)": [[270, "brails.processors.year_built_classifier.lib.utils.test", false]], "test_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[141, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.test_list", false]], "test_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.test_list", false]], "test_softlabels() (in module brails.processors.year_built_classifier.lib.utils)": [[270, "brails.processors.year_built_classifier.lib.utils.test_softlabels", false]], "testdataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[90, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.TestDataset", false]], "tgz_md5 (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[141, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.tgz_md5", false]], "tgz_md5 (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.tgz_md5", false]], "to_json() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[19, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.to_json", false]], "to_json() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[39, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.to_json", false]], "to_json() (brails.inferers.user_inferer.user_inferer.userinferer method)": [[46, "brails.inferers.user_inferer.user_inferer.UserInferer.to_json", false]], "to_numpy() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.to_numpy", false]], "to_tensor() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[127, "brails.processors.foundation_classifier.lib.custom_transforms.to_tensor", false]], "to_tensor() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[149, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.to_tensor", false]], "tokenize() (in module brails.processors.vlm_image_classifier.clip.clip)": [[241, "brails.processors.vlm_image_classifier.clip.clip.tokenize", false]], "torchtestcase (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest)": [[73, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase", false]], "torchtestcase (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest)": [[99, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.TorchTestCase", false]], "torchtestcase (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest)": [[186, "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase", false]], "torchtestcase (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest)": [[222, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase", false]], "train() (brails.processors.chimney_detector.chimney_detector.chimneydetector method)": [[51, "brails.processors.chimney_detector.chimney_detector.ChimneyDetector.train", false]], "train() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[66, "brails.processors.chimney_detector.lib.train_detector.Detector.train", false]], "train() (brails.processors.garage_detector.garage_detector.garagedetector method)": [[164, "brails.processors.garage_detector.garage_detector.GarageDetector.train", false]], "train() (brails.processors.garage_detector.lib.train_detector.detector method)": [[179, "brails.processors.garage_detector.lib.train_detector.Detector.train", false]], "train() (brails.processors.image_classifier.image_classifier.imageclassifier method)": [[192, "brails.processors.image_classifier.image_classifier.ImageClassifier.train", false]], "train() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[215, "brails.processors.nfloors_detector.lib.train_detector.Detector.train", false]], "train() (brails.processors.nfloors_detector.nfloor_detector.nfloordetector method)": [[224, "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector.train", false]], "train_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[141, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.train_list", false]], "train_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.train_list", false]], "traindataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[90, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.TrainDataset", false]], "transformer (class in brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.Transformer", false]], "twowayattentionblock (class in brails.processors.vlm_segmenter.segment_anything.modeling.transformer)": [[258, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayAttentionBlock", false]], "twowaytransformer (class in brails.processors.vlm_segmenter.segment_anything.modeling.transformer)": [[258, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayTransformer", false]], "uncrop_boxes_xyxy() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.uncrop_boxes_xyxy", false]], "uncrop_masks() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.uncrop_masks", false]], "uncrop_points() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[261, "brails.processors.vlm_segmenter.segment_anything.utils.amg.uncrop_points", false]], "unique() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.unique", false]], "unit_valid() (brails.utils.unit_converter.unitconverter static method)": [[321, "brails.utils.unit_converter.UnitConverter.unit_valid", false]], "unitconverter (class in brails.utils.unit_converter)": [[321, "brails.utils.unit_converter.UnitConverter", false]], "update() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.update", false]], "update() (brails.processors.foundation_classifier.lib.utils.averagemeter method)": [[129, "brails.processors.foundation_classifier.lib.utils.AverageMeter.update", false]], "update() (brails.processors.foundation_classifier.npid.npid_lib.utils.averagemeter method)": [[151, "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter.update", false]], "update_inventory() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[11, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.update_inventory", false]], "update_properties() (brails.types.image_set.image method)": [[305, "brails.types.image_set.Image.update_properties", false]], "update_world_realization() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.update_world_realization", false]], "upernet (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.UPerNet", false]], "url (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[141, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.url", false]], "url (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[140, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.url", false]], "usa_footprintscraper (class in brails.scrapers.usa_footprint_scraper.usa_footprint_scraper)": [[301, "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper", false]], "user_inferer() (in module brails.inferers.user_inferer.content_value_inferer)": [[44, "brails.inferers.user_inferer.content_value_inferer.user_inferer", false]], "user_inferer() (in module brails.inferers.user_inferer.floor_area_inferer)": [[45, "brails.inferers.user_inferer.floor_area_inferer.user_inferer", false]], "user_scattered_collate() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.user_scattered_collate", false]], "userfootprint (class in brails.scrapers.user_footprints)": [[302, "brails.scrapers.user_footprints.UserFootprint", false]], "userinferer (class in brails.inferers.user_inferer.user_inferer)": [[46, "brails.inferers.user_inferer.user_inferer.UserInferer", false]], "userscattereddataparallel (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.UserScatteredDataParallel", false]], "valdataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[90, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.ValDataset", false]], "validate() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[39, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.validate", false]], "validate_coordinates() (brails.utils.input_validator.inputvalidator static method)": [[311, "brails.utils.input_validator.InputValidator.validate_coordinates", false]], "validate_inventory() (brails.utils.inventory_validator.inventoryvalidator static method)": [[312, "brails.utils.inventory_validator.InventoryValidator.validate_inventory", false]], "validationconditions (brails.types.region_boundary.regioninput attribute)": [[306, "brails.types.region_boundary.RegionInput.validationConditions", false]], "value() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.value", false]], "variance_scaling_() (in module brails.processors.chimney_detector.lib.utils.utils)": [[74, "brails.processors.chimney_detector.lib.utils.utils.variance_scaling_", false]], "variance_scaling_() (in module brails.processors.garage_detector.lib.utils.utils)": [[187, "brails.processors.garage_detector.lib.utils.utils.variance_scaling_", false]], "variance_scaling_() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[223, "brails.processors.nfloors_detector.lib.utils.utils.variance_scaling_", false]], "verify_and_download_models() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.verify_and_download_models", false]], "visiontransformer (class in brails.processors.vlm_image_classifier.clip.model)": [[242, "brails.processors.vlm_image_classifier.clip.model.VisionTransformer", false]], "vlmsegmenter (class in brails.processors.vlm_segmenter.vlm_segmenter)": [[264, "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter", false]], "weightedrandomsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.WeightedRandomSampler", false]], "weights_init() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.modelbuilder static method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder.weights_init", false]], "whitespace_clean() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[243, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.whitespace_clean", false]], "width_coefficient (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[63, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.width_coefficient", false]], "width_coefficient (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[176, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.width_coefficient", false]], "width_coefficient (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[212, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.width_coefficient", false]], "window_partition() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.window_partition", false]], "window_unpartition() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[253, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.window_unpartition", false]], "wmuh_config() (in module brails.inferers.hazus_inferer_wind.windwmuhrulesets)": [[36, "brails.inferers.hazus_inferer_wind.WindWMUHRulesets.WMUH_config", false]], "write_dict() (brails.processors.vlm_segmenter.vlm_segmenter.vlmsegmenter method)": [[264, "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter.write_dict", false]], "write_polygon_to_geojson() (brails.utils.geo_tools.geotools static method)": [[309, "brails.utils.geo_tools.GeoTools.write_polygon_to_geojson", false]], "write_to_geojson() (brails.types.asset_inventory.assetinventory method)": [[304, "brails.types.asset_inventory.AssetInventory.write_to_geojson", false]], "wsf_config() (in module brails.inferers.hazus_inferer_wind.windwsfrulesets)": [[37, "brails.inferers.hazus_inferer_wind.WindWSFRulesets.WSF_config", false]], "xmax (brails.filters.house_view.house_view.filterboundingbox attribute)": [[7, "brails.filters.house_view.house_view.FilterBoundingBox.xmax", false]], "xmax (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.xmax", false]], "xmin (brails.filters.house_view.house_view.filterboundingbox attribute)": [[7, "brails.filters.house_view.house_view.FilterBoundingBox.xmin", false]], "xmin (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.xmin", false]], "xyxy (brails.filters.house_view.house_view.filterboundingbox property)": [[7, "brails.filters.house_view.house_view.FilterBoundingBox.xyxy", false]], "xyxy (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox property)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.xyxy", false]], "ymax (brails.filters.house_view.house_view.filterboundingbox attribute)": [[7, "brails.filters.house_view.house_view.FilterBoundingBox.ymax", false]], "ymax (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.ymax", false]], "ymin (brails.filters.house_view.house_view.filterboundingbox attribute)": [[7, "brails.filters.house_view.house_view.FilterBoundingBox.ymin", false]], "ymin (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[246, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.ymin", false]]}, "objects": {"": [[2, 0, 0, "-", "brails"], [322, 0, 0, "-", "conf"]], "brails": [[3, 0, 0, "-", "exceptions"], [4, 0, 0, "-", "filters"], [8, 0, 0, "-", "imputers"], [12, 0, 0, "-", "inferers"], [47, 0, 0, "-", "processors"], [275, 0, 0, "-", "scrapers"], [303, 0, 0, "-", "types"], [307, 0, 0, "-", "utils"]], "brails.exceptions": [[3, 1, 1, "", "BrailsError"], [3, 1, 1, "", "NotFoundError"]], "brails.filters": [[5, 0, 0, "-", "filter"], [6, 0, 0, "-", "house_view"]], "brails.filters.filter": [[5, 2, 1, "", "Filter"]], "brails.filters.filter.Filter": [[5, 3, 1, "", "filter"]], "brails.filters.house_view": [[7, 0, 0, "-", "house_view"]], "brails.filters.house_view.house_view": [[7, 2, 1, "", "FilterBoundingBox"], [7, 2, 1, "", "FilterDetectionResult"], [7, 2, 1, "", "HouseView"], [7, 6, 1, "", "detect"]], "brails.filters.house_view.house_view.FilterBoundingBox": [[7, 4, 1, "", "xmax"], [7, 4, 1, "", "xmin"], [7, 5, 1, "", "xyxy"], [7, 4, 1, "", "ymax"], [7, 4, 1, "", "ymin"]], "brails.filters.house_view.house_view.FilterDetectionResult": [[7, 4, 1, "", "box"], [7, 3, 1, "", "from_dict"], [7, 4, 1, "", "label"], [7, 4, 1, "", "mask"], [7, 4, 1, "", "score"]], "brails.filters.house_view.house_view.HouseView": [[7, 3, 1, "", "filter"], [7, 3, 1, "", "filter1"]], "brails.imputers": [[9, 0, 0, "-", "imputation"], [10, 0, 0, "-", "knn_imputer"]], "brails.imputers.imputation": [[9, 2, 1, "", "Imputation"]], "brails.imputers.imputation.Imputation": [[9, 3, 1, "", "impute"]], "brails.imputers.knn_imputer": [[11, 0, 0, "-", "knn_imputer"]], "brails.imputers.knn_imputer.knn_imputer": [[11, 2, 1, "", "KnnImputer"]], "brails.imputers.knn_imputer.knn_imputer.KnnImputer": [[11, 3, 1, "", "category_in_df_to_indices"], [11, 3, 1, "", "clustering"], [11, 3, 1, "", "geospatial_knn"], [11, 3, 1, "", "impute"], [11, 3, 1, "", "invetory_to_df"], [11, 3, 1, "", "merge_two_json"], [11, 3, 1, "", "sequential_imputer"], [11, 3, 1, "", "update_inventory"]], "brails.inferers": [[13, 0, 0, "-", "hazus_inferer"], [16, 0, 0, "-", "hazus_inferer_earthquake"], [18, 0, 0, "-", "hazus_inferer_flood"], [20, 0, 0, "-", "hazus_inferer_wind"], [40, 0, 0, "-", "inferenceEngine"], [41, 0, 0, "-", "simcenter_inferer"], [43, 0, 0, "-", "user_inferer"]], "brails.inferers.hazus_inferer": [[14, 0, 0, "-", "hazus_inferer"], [15, 0, 0, "-", "hazus_rulesets"]], "brails.inferers.hazus_inferer.hazus_inferer": [[14, 2, 1, "", "HazusInferer"]], "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer": [[14, 3, 1, "", "add_features_to_asset"], [14, 3, 1, "", "check_keys"], [14, 3, 1, "", "flatten_array"], [14, 3, 1, "", "get_replacement_cost"], [14, 3, 1, "", "get_str_from_occ"], [14, 3, 1, "", "infer"], [14, 3, 1, "", "merge_two_json"], [14, 3, 1, "", "modulate_occ"], [14, 3, 1, "", "modulate_weights"]], "brails.inferers.hazus_inferer.hazus_rulesets": [[15, 6, 1, "", "get_hazus_base_replacement_cost"], [15, 6, 1, "", "get_hazus_height_classes"], [15, 6, 1, "", "get_hazus_height_classes_RES1"], [15, 6, 1, "", "get_hazus_income_to_const_class"], [15, 6, 1, "", "get_hazus_occ_type_mapping"], [15, 6, 1, "", "get_hazus_region_to_garage"], [15, 6, 1, "", "get_hazus_state_region_mapping"], [15, 6, 1, "", "get_hazus_year_classes"]], "brails.inferers.hazus_inferer_earthquake": [[17, 0, 0, "-", "hazus_inferer_earthquake"]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake": [[17, 2, 1, "", "HazusInfererEarthquake"]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake": [[17, 3, 1, "", "check_keys"], [17, 3, 1, "", "compute_n_possible_worlds"], [17, 3, 1, "", "get_era_height_foundation_class"], [17, 3, 1, "", "infer"], [17, 3, 1, "", "merge_two_json"]], "brails.inferers.hazus_inferer_flood": [[19, 0, 0, "-", "hazus_inferer_flood"]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood": [[19, 2, 1, "", "HazusInfererFlood"]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood": [[19, 3, 1, "", "auto_populate"], [19, 3, 1, "", "infer"], [19, 3, 1, "", "infer_building_one_by_one"], [19, 3, 1, "", "is_ready_to_infer"], [19, 3, 1, "", "merge_two_json"], [19, 3, 1, "", "to_json"]], "brails.inferers.hazus_inferer_wind": [[21, 0, 0, "-", "BuildingClassRulesets"], [22, 0, 0, "-", "WindCECBRulesets"], [23, 0, 0, "-", "WindCERBRulesets"], [24, 0, 0, "-", "WindEFRulesets"], [25, 0, 0, "-", "WindMECBRulesets"], [26, 0, 0, "-", "WindMERBRulesets"], [27, 0, 0, "-", "WindMHRulesets"], [28, 0, 0, "-", "WindMLRIRulesets"], [29, 0, 0, "-", "WindMLRMRulesets"], [30, 0, 0, "-", "WindMMUHRulesets"], [31, 0, 0, "-", "WindMSFRulesets"], [32, 0, 0, "-", "WindMetaVarRulesets"], [33, 0, 0, "-", "WindSECBRulesets"], [34, 0, 0, "-", "WindSERBRulesets"], [35, 0, 0, "-", "WindSPMBRulesets"], [36, 0, 0, "-", "WindWMUHRulesets"], [37, 0, 0, "-", "WindWSFRulesets"], [38, 0, 0, "-", "auto_HU_NJ"], [39, 0, 0, "-", "hazus_inferer_wind"]], "brails.inferers.hazus_inferer_wind.BuildingClassRulesets": [[21, 6, 1, "", "building_class"]], "brails.inferers.hazus_inferer_wind.WindCECBRulesets": [[22, 6, 1, "", "CECB_config"]], "brails.inferers.hazus_inferer_wind.WindCERBRulesets": [[23, 6, 1, "", "CERB_config"]], "brails.inferers.hazus_inferer_wind.WindEFRulesets": [[24, 6, 1, "", "HUEFFS_config"], [24, 6, 1, "", "HUEFH_config"], [24, 6, 1, "", "HUEFSS_config"], [24, 6, 1, "", "HUEFS_config"]], "brails.inferers.hazus_inferer_wind.WindMECBRulesets": [[25, 6, 1, "", "MECB_config"]], "brails.inferers.hazus_inferer_wind.WindMERBRulesets": [[26, 6, 1, "", "MERB_config"]], "brails.inferers.hazus_inferer_wind.WindMHRulesets": [[27, 6, 1, "", "MH_config"]], "brails.inferers.hazus_inferer_wind.WindMLRIRulesets": [[28, 6, 1, "", "MLRI_config"]], "brails.inferers.hazus_inferer_wind.WindMLRMRulesets": [[29, 6, 1, "", "MLRM_config"]], "brails.inferers.hazus_inferer_wind.WindMMUHRulesets": [[30, 6, 1, "", "MMUH_config"]], "brails.inferers.hazus_inferer_wind.WindMSFRulesets": [[31, 6, 1, "", "MSF_config"]], "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets": [[32, 6, 1, "", "add_default"], [32, 6, 1, "", "global_rulesets"], [32, 6, 1, "", "is_ready_to_infer"]], "brails.inferers.hazus_inferer_wind.WindSECBRulesets": [[33, 6, 1, "", "SECB_config"]], "brails.inferers.hazus_inferer_wind.WindSERBRulesets": [[34, 6, 1, "", "SERB_config"]], "brails.inferers.hazus_inferer_wind.WindSPMBRulesets": [[35, 6, 1, "", "SPMB_config"]], "brails.inferers.hazus_inferer_wind.WindWMUHRulesets": [[36, 6, 1, "", "WMUH_config"]], "brails.inferers.hazus_inferer_wind.WindWSFRulesets": [[37, 6, 1, "", "WSF_config"]], "brails.inferers.hazus_inferer_wind.auto_HU_NJ": [[38, 6, 1, "", "auto_populate"]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind": [[39, 2, 1, "", "HazusInfererWind"]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind": [[39, 3, 1, "", "correct"], [39, 3, 1, "", "infer"], [39, 3, 1, "", "infer_building_one_by_one"], [39, 3, 1, "", "merge_two_json"], [39, 3, 1, "", "to_json"], [39, 3, 1, "", "validate"]], "brails.inferers.inferenceEngine": [[40, 2, 1, "", "InferenceEngine"]], "brails.inferers.inferenceEngine.InferenceEngine": [[40, 3, 1, "", "infer"]], "brails.inferers.simcenter_inferer": [[42, 0, 0, "-", "simCenter_inferer"]], "brails.inferers.simcenter_inferer.simCenter_inferer": [[42, 2, 1, "", "SimCenterInferer"]], "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer": [[42, 3, 1, "", "modulate_occ"], [42, 3, 1, "", "modulate_weights"]], "brails.inferers.user_inferer": [[44, 0, 0, "-", "content_value_inferer"], [45, 0, 0, "-", "floor_area_inferer"], [46, 0, 0, "-", "user_inferer"]], "brails.inferers.user_inferer.content_value_inferer": [[44, 6, 1, "", "user_inferer"]], "brails.inferers.user_inferer.floor_area_inferer": [[45, 6, 1, "", "user_inferer"]], "brails.inferers.user_inferer.user_inferer": [[46, 2, 1, "", "UserInferer"]], "brails.inferers.user_inferer.user_inferer.UserInferer": [[46, 3, 1, "", "infer"], [46, 3, 1, "", "merge_two_json"], [46, 3, 1, "", "to_json"]], "brails.processors": [[48, 0, 0, "-", "building_material_llm"], [50, 0, 0, "-", "chimney_detector"], [75, 0, 0, "-", "cons_type_classifier"], [77, 0, 0, "-", "facade_parser"], [79, 0, 0, "-", "ffh_predictor_klepac"], [81, 0, 0, "-", "foundation_classifier"], [163, 0, 0, "-", "garage_detector"], [188, 0, 0, "-", "gpt_base_model"], [191, 0, 0, "-", "image_classifier"], [193, 0, 0, "-", "image_processor"], [194, 0, 0, "-", "image_segmenter"], [196, 0, 0, "-", "nFloor_gpt"], [198, 0, 0, "-", "nFloor_vlm"], [200, 0, 0, "-", "nfloors_detector"], [225, 0, 0, "-", "occupancy_classifier"], [227, 0, 0, "-", "other_idea"], [230, 0, 0, "-", "roof_shape_classifier"], [232, 0, 0, "-", "roof_shape_gpt"], [234, 0, 0, "-", "roof_shape_vlm"], [236, 0, 0, "-", "street_level_damage_detection"], [238, 0, 0, "-", "vlm_image_classifier"], [245, 0, 0, "-", "vlm_segmenter"], [265, 0, 0, "-", "year_built_classifier"]], "brails.processors.building_material_llm": [[49, 0, 0, "-", "building_material_llm"]], "brails.processors.building_material_llm.building_material_llm": [[49, 2, 1, "", "BuildingMaterialLLM"]], "brails.processors.chimney_detector": [[51, 0, 0, "-", "chimney_detector"], [52, 0, 0, "-", "lib"]], "brails.processors.chimney_detector.chimney_detector": [[51, 2, 1, "", "ChimneyDetector"]], "brails.processors.chimney_detector.chimney_detector.ChimneyDetector": [[51, 3, 1, "", "predict"], [51, 3, 1, "", "retrain"], [51, 3, 1, "", "train"]], "brails.processors.chimney_detector.lib": [[53, 0, 0, "-", "backbone"], [54, 0, 0, "-", "efficientdet"], [61, 0, 0, "-", "efficientnet"], [65, 0, 0, "-", "infer_detector"], [66, 0, 0, "-", "train_detector"], [67, 0, 0, "-", "utils"]], "brails.processors.chimney_detector.lib.backbone": [[53, 2, 1, "", "EfficientDetBackbone"]], "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone": [[53, 3, 1, "", "forward"], [53, 3, 1, "", "freeze_bn"], [53, 3, 1, "", "init_backbone"]], "brails.processors.chimney_detector.lib.efficientdet": [[55, 0, 0, "-", "coco"], [56, 0, 0, "-", "config"], [57, 0, 0, "-", "dataset"], [58, 0, 0, "-", "loss"], [59, 0, 0, "-", "model"], [60, 0, 0, "-", "utils"]], "brails.processors.chimney_detector.lib.efficientdet.coco": [[55, 2, 1, "", "COCO"]], "brails.processors.chimney_detector.lib.efficientdet.coco.COCO": [[55, 3, 1, "", "createIndex"], [55, 3, 1, "", "getAnnIds"], [55, 3, 1, "", "getCatIds"], [55, 3, 1, "", "getImgIds"], [55, 3, 1, "", "info"], [55, 3, 1, "", "loadAnns"], [55, 3, 1, "", "loadCats"], [55, 3, 1, "", "loadImgs"]], "brails.processors.chimney_detector.lib.efficientdet.dataset": [[57, 2, 1, "", "Augmenter"], [57, 2, 1, "", "CocoDataset"], [57, 2, 1, "", "Normalizer"], [57, 2, 1, "", "Resizer"], [57, 6, 1, "", "collater"]], "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset": [[57, 3, 1, "", "load_annotations"], [57, 3, 1, "", "load_classes"], [57, 3, 1, "", "load_image"]], "brails.processors.chimney_detector.lib.efficientdet.loss": [[58, 2, 1, "", "FocalLoss"], [58, 6, 1, "", "calc_iou"]], "brails.processors.chimney_detector.lib.efficientdet.loss.FocalLoss": [[58, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model": [[59, 2, 1, "", "BiFPN"], [59, 2, 1, "", "Classifier"], [59, 2, 1, "", "EfficientNet"], [59, 2, 1, "", "Regressor"], [59, 2, 1, "", "SeparableConvBlock"], [59, 6, 1, "", "nms"]], "brails.processors.chimney_detector.lib.efficientdet.model.BiFPN": [[59, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model.Classifier": [[59, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model.EfficientNet": [[59, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model.Regressor": [[59, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model.SeparableConvBlock": [[59, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.utils": [[60, 2, 1, "", "Anchors"], [60, 2, 1, "", "BBoxTransform"], [60, 2, 1, "", "ClipBoxes"]], "brails.processors.chimney_detector.lib.efficientdet.utils.Anchors": [[60, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.utils.BBoxTransform": [[60, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.utils.ClipBoxes": [[60, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet": [[62, 0, 0, "-", "model"], [63, 0, 0, "-", "utils"], [64, 0, 0, "-", "utils_extra"]], "brails.processors.chimney_detector.lib.efficientnet.model": [[62, 2, 1, "", "EfficientNet"], [62, 2, 1, "", "MBConvBlock"]], "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet": [[62, 3, 1, "", "extract_features"], [62, 3, 1, "", "forward"], [62, 3, 1, "", "from_name"], [62, 3, 1, "", "from_pretrained"], [62, 3, 1, "", "get_image_size"], [62, 3, 1, "", "set_swish"]], "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock": [[62, 3, 1, "", "forward"], [62, 3, 1, "", "set_swish"]], "brails.processors.chimney_detector.lib.efficientnet.utils": [[63, 2, 1, "", "BlockArgs"], [63, 2, 1, "", "BlockDecoder"], [63, 2, 1, "", "Conv2dDynamicSamePadding"], [63, 2, 1, "", "GlobalParams"], [63, 2, 1, "", "Identity"], [63, 2, 1, "", "MemoryEfficientSwish"], [63, 2, 1, "", "Swish"], [63, 2, 1, "", "SwishImplementation"], [63, 6, 1, "", "drop_connect"], [63, 6, 1, "", "efficientnet"], [63, 6, 1, "", "efficientnet_params"], [63, 6, 1, "", "get_model_params"], [63, 6, 1, "", "get_same_padding_conv2d"], [63, 6, 1, "", "load_pretrained_weights"], [63, 6, 1, "", "round_filters"], [63, 6, 1, "", "round_repeats"]], "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs": [[63, 4, 1, "", "expand_ratio"], [63, 4, 1, "", "id_skip"], [63, 4, 1, "", "input_filters"], [63, 4, 1, "", "kernel_size"], [63, 4, 1, "", "num_repeat"], [63, 4, 1, "", "output_filters"], [63, 4, 1, "", "se_ratio"], [63, 4, 1, "", "stride"]], "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder": [[63, 3, 1, "", "decode"], [63, 3, 1, "", "encode"]], "brails.processors.chimney_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding": [[63, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams": [[63, 4, 1, "", "batch_norm_epsilon"], [63, 4, 1, "", "batch_norm_momentum"], [63, 4, 1, "", "depth_coefficient"], [63, 4, 1, "", "depth_divisor"], [63, 4, 1, "", "drop_connect_rate"], [63, 4, 1, "", "dropout_rate"], [63, 4, 1, "", "image_size"], [63, 4, 1, "", "min_depth"], [63, 4, 1, "", "num_classes"], [63, 4, 1, "", "width_coefficient"]], "brails.processors.chimney_detector.lib.efficientnet.utils.Identity": [[63, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.MemoryEfficientSwish": [[63, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.Swish": [[63, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation": [[63, 3, 1, "", "backward"], [63, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra": [[64, 2, 1, "", "Conv2dStaticSamePadding"], [64, 2, 1, "", "MaxPool2dStaticSamePadding"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding": [[64, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding": [[64, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.infer_detector": [[65, 2, 1, "", "Infer"]], "brails.processors.chimney_detector.lib.infer_detector.Infer": [[65, 3, 1, "", "display"], [65, 3, 1, "", "load_model"], [65, 3, 1, "", "predict"]], "brails.processors.chimney_detector.lib.train_detector": [[66, 2, 1, "", "Detector"], [66, 2, 1, "", "ModelWithLoss"], [66, 6, 1, "", "boolean_string"]], "brails.processors.chimney_detector.lib.train_detector.Detector": [[66, 3, 1, "", "save_checkpoint"], [66, 3, 1, "", "set_fixed_params"], [66, 3, 1, "", "set_hyperparams"], [66, 3, 1, "", "set_model"], [66, 3, 1, "", "set_train_dataset"], [66, 3, 1, "", "set_val_dataset"], [66, 3, 1, "", "start_training"], [66, 3, 1, "", "train"]], "brails.processors.chimney_detector.lib.train_detector.ModelWithLoss": [[66, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.utils": [[68, 0, 0, "-", "sync_batchnorm"], [74, 0, 0, "-", "utils"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm": [[69, 0, 0, "-", "batchnorm"], [70, 0, 0, "-", "batchnorm_reimpl"], [71, 0, 0, "-", "comm"], [72, 0, 0, "-", "replicate"], [73, 0, 0, "-", "unittest"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm": [[69, 2, 1, "", "SynchronizedBatchNorm1d"], [69, 2, 1, "", "SynchronizedBatchNorm2d"], [69, 2, 1, "", "SynchronizedBatchNorm3d"], [69, 6, 1, "", "convert_model"], [69, 6, 1, "", "patch_sync_batchnorm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[70, 2, 1, "", "BatchNorm2dReimpl"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl": [[70, 3, 1, "", "forward"], [70, 3, 1, "", "reset_parameters"], [70, 3, 1, "", "reset_running_stats"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm": [[71, 2, 1, "", "FutureResult"], [71, 2, 1, "", "SlavePipe"], [71, 2, 1, "", "SyncMaster"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult": [[71, 3, 1, "", "get"], [71, 3, 1, "", "put"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SlavePipe": [[71, 3, 1, "", "run_slave"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster": [[71, 5, 1, "", "nr_slaves"], [71, 3, 1, "", "register_slave"], [71, 3, 1, "", "run_master"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate": [[72, 2, 1, "", "CallbackContext"], [72, 2, 1, "", "DataParallelWithCallback"], [72, 6, 1, "", "execute_replication_callbacks"], [72, 6, 1, "", "patch_replication_callback"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback": [[72, 3, 1, "", "replicate"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest": [[73, 2, 1, "", "TorchTestCase"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase": [[73, 3, 1, "", "assertTensorClose"]], "brails.processors.chimney_detector.lib.utils.utils": [[74, 2, 1, "", "CustomDataParallel"], [74, 6, 1, "", "aspectaware_resize_padding"], [74, 6, 1, "", "display"], [74, 6, 1, "", "from_colorname_to_bgr"], [74, 6, 1, "", "get_index_label"], [74, 6, 1, "", "get_last_weights"], [74, 6, 1, "", "init_weights"], [74, 6, 1, "", "invert_affine"], [74, 6, 1, "", "plot_one_box"], [74, 6, 1, "", "postprocess"], [74, 6, 1, "", "preprocess"], [74, 6, 1, "", "preprocess_video"], [74, 6, 1, "", "replace_w_sync_bn"], [74, 6, 1, "", "standard_to_bgr"], [74, 6, 1, "", "variance_scaling_"]], "brails.processors.chimney_detector.lib.utils.utils.CustomDataParallel": [[74, 3, 1, "", "scatter"]], "brails.processors.cons_type_classifier": [[76, 0, 0, "-", "ConstructionTypeClassifier"]], "brails.processors.cons_type_classifier.ConstructionTypeClassifier": [[76, 2, 1, "", "ConsTypeClassifier"]], "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier": [[76, 3, 1, "", "predict"], [76, 3, 1, "", "retrain"]], "brails.processors.facade_parser": [[78, 0, 0, "-", "facade_parser"]], "brails.processors.facade_parser.facade_parser": [[78, 2, 1, "", "FacadeParser"]], "brails.processors.facade_parser.facade_parser.FacadeParser": [[78, 3, 1, "", "predict"]], "brails.processors.ffh_predictor_klepac": [[80, 0, 0, "-", "ffh_predictor_klepac"]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac": [[80, 2, 1, "", "FFHPredictorKlepac"]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.FFHPredictorKlepac": [[80, 3, 1, "", "predict"]], "brails.processors.foundation_classifier": [[82, 0, 0, "-", "attention_utils"], [85, 0, 0, "-", "csail_segmentation_tool"], [122, 0, 0, "-", "lib"], [130, 0, 0, "-", "models"], [136, 0, 0, "-", "npid"], [160, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.attention_utils": [[83, 0, 0, "-", "radam"], [84, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.attention_utils.radam": [[83, 2, 1, "", "AdamW"], [83, 2, 1, "", "PlainRAdam"], [83, 2, 1, "", "RAdam"]], "brails.processors.foundation_classifier.attention_utils.radam.AdamW": [[83, 3, 1, "", "step"]], "brails.processors.foundation_classifier.attention_utils.radam.PlainRAdam": [[83, 3, 1, "", "step"]], "brails.processors.foundation_classifier.attention_utils.radam.RAdam": [[83, 3, 1, "", "step"]], "brails.processors.foundation_classifier.attention_utils.utils": [[84, 6, 1, "", "construct_confusion_matrix_image"], [84, 6, 1, "", "evaluate"], [84, 6, 1, "", "sliding_window"]], "brails.processors.foundation_classifier.csail_segmentation_tool": [[86, 0, 0, "-", "csail_seg"], [119, 0, 0, "-", "csail_segmentation"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg": [[87, 0, 0, "-", "config"], [89, 0, 0, "-", "data"], [90, 0, 0, "-", "dataset"], [93, 0, 0, "-", "lib"], [109, 0, 0, "-", "models"], [118, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config": [[88, 0, 0, "-", "defaults"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset": [[90, 2, 1, "", "BaseDataset"], [90, 2, 1, "", "TestDataset"], [90, 2, 1, "", "TrainDataset"], [90, 2, 1, "", "ValDataset"], [90, 6, 1, "", "imresize"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset": [[90, 3, 1, "", "img_transform"], [90, 3, 1, "", "parse_input_list"], [90, 3, 1, "", "round2nearest_multiple"], [90, 3, 1, "", "segm_transform"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib": [[94, 0, 0, "-", "nn"], [102, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn": [[95, 0, 0, "-", "modules"], [100, 0, 0, "-", "parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules": [[96, 0, 0, "-", "batchnorm"], [97, 0, 0, "-", "comm"], [98, 0, 0, "-", "replicate"], [99, 0, 0, "-", "unittest"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm": [[96, 2, 1, "", "SynchronizedBatchNorm1d"], [96, 2, 1, "", "SynchronizedBatchNorm2d"], [96, 2, 1, "", "SynchronizedBatchNorm3d"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm": [[97, 2, 1, "", "FutureResult"], [97, 2, 1, "", "SlavePipe"], [97, 2, 1, "", "SyncMaster"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult": [[97, 3, 1, "", "get"], [97, 3, 1, "", "put"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SlavePipe": [[97, 3, 1, "", "run_slave"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster": [[97, 5, 1, "", "nr_slaves"], [97, 3, 1, "", "register_slave"], [97, 3, 1, "", "run_master"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate": [[98, 2, 1, "", "CallbackContext"], [98, 2, 1, "", "DataParallelWithCallback"], [98, 6, 1, "", "execute_replication_callbacks"], [98, 6, 1, "", "patch_replication_callback"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.DataParallelWithCallback": [[98, 3, 1, "", "replicate"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest": [[99, 2, 1, "", "TorchTestCase"], [99, 6, 1, "", "as_numpy"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.TorchTestCase": [[99, 3, 1, "", "assertTensorClose"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel": [[101, 0, 0, "-", "data_parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel": [[101, 2, 1, "", "UserScatteredDataParallel"], [101, 6, 1, "", "async_copy_to"], [101, 6, 1, "", "user_scattered_collate"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.UserScatteredDataParallel": [[101, 3, 1, "", "scatter"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils": [[108, 0, 0, "-", "th"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data": [[105, 0, 0, "-", "dataset"], [107, 0, 0, "-", "sampler"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset": [[105, 2, 1, "", "ConcatDataset"], [105, 2, 1, "", "Dataset"], [105, 2, 1, "", "Subset"], [105, 2, 1, "", "TensorDataset"], [105, 6, 1, "", "random_split"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset": [[105, 5, 1, "", "cummulative_sizes"], [105, 3, 1, "", "cumsum"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler": [[107, 2, 1, "", "BatchSampler"], [107, 2, 1, "", "RandomSampler"], [107, 2, 1, "", "Sampler"], [107, 2, 1, "", "SequentialSampler"], [107, 2, 1, "", "SubsetRandomSampler"], [107, 2, 1, "", "WeightedRandomSampler"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th": [[108, 6, 1, "", "as_numpy"], [108, 6, 1, "", "as_variable"], [108, 6, 1, "", "mark_volatile"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models": [[110, 0, 0, "-", "hrnet"], [111, 0, 0, "-", "mobilenet"], [112, 0, 0, "-", "models"], [113, 0, 0, "-", "resnet"], [114, 0, 0, "-", "resnext"], [115, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet": [[110, 6, 1, "", "hrnetv2"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet": [[111, 6, 1, "", "mobilenetv2"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models": [[112, 2, 1, "", "C1"], [112, 2, 1, "", "C1DeepSup"], [112, 2, 1, "", "MobileNetV2Dilated"], [112, 2, 1, "", "ModelBuilder"], [112, 2, 1, "", "PPM"], [112, 2, 1, "", "PPMDeepsup"], [112, 2, 1, "", "Resnet"], [112, 2, 1, "", "ResnetDilated"], [112, 2, 1, "", "SegmentationModule"], [112, 2, 1, "", "SegmentationModuleBase"], [112, 2, 1, "", "UPerNet"], [112, 6, 1, "", "conv3x3_bn_relu"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1": [[112, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1DeepSup": [[112, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.MobileNetV2Dilated": [[112, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder": [[112, 3, 1, "", "build_decoder"], [112, 3, 1, "", "build_encoder"], [112, 3, 1, "", "weights_init"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPM": [[112, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPMDeepsup": [[112, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.Resnet": [[112, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ResnetDilated": [[112, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModule": [[112, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModuleBase": [[112, 3, 1, "", "pixel_acc"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.UPerNet": [[112, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet": [[113, 2, 1, "", "ResNet"], [113, 6, 1, "", "resnet101"], [113, 6, 1, "", "resnet18"], [113, 6, 1, "", "resnet50"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.ResNet": [[113, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext": [[114, 2, 1, "", "ResNeXt"], [114, 6, 1, "", "resnext101"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.ResNeXt": [[114, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils": [[115, 6, 1, "", "load_url"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils": [[118, 2, 1, "", "AverageMeter"], [118, 1, 1, "", "NotSupportedCliException"], [118, 6, 1, "", "accuracy"], [118, 6, 1, "", "colorEncode"], [118, 6, 1, "", "find_recursive"], [118, 6, 1, "", "intersectionAndUnion"], [118, 6, 1, "", "parse_devices"], [118, 6, 1, "", "process_range"], [118, 6, 1, "", "setup_logger"], [118, 6, 1, "", "unique"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter": [[118, 3, 1, "", "add"], [118, 3, 1, "", "average"], [118, 3, 1, "", "initialize"], [118, 3, 1, "", "update"], [118, 3, 1, "", "value"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation": [[119, 2, 1, "", "MaskBuilding"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding": [[119, 4, 1, "", "colors"], [119, 4, 1, "", "config_file"], [119, 4, 1, "", "dec_weights"], [119, 4, 1, "", "enc_weights"], [119, 3, 1, "", "get_mask"], [119, 3, 1, "", "round2nearest_multiple"]], "brails.processors.foundation_classifier.lib": [[123, 0, 0, "-", "LinearAverage"], [124, 0, 0, "-", "NCEAverage"], [125, 0, 0, "-", "NCECriterion"], [126, 0, 0, "-", "alias_multinomial"], [127, 0, 0, "-", "custom_transforms"], [128, 0, 0, "-", "normalize"], [129, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.lib.LinearAverage": [[123, 2, 1, "", "LinearAverage"], [123, 2, 1, "", "LinearAverageOp"]], "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverage": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp": [[123, 3, 1, "", "backward"], [123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.NCEAverage": [[124, 2, 1, "", "NCEAverage"], [124, 2, 1, "", "NCEFunction"]], "brails.processors.foundation_classifier.lib.NCEAverage.NCEAverage": [[124, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction": [[124, 3, 1, "", "backward"], [124, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.NCECriterion": [[125, 2, 1, "", "NCECriterion"]], "brails.processors.foundation_classifier.lib.NCECriterion.NCECriterion": [[125, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.alias_multinomial": [[126, 2, 1, "", "AliasMethod"]], "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod": [[126, 3, 1, "", "cuda"], [126, 3, 1, "", "draw"]], "brails.processors.foundation_classifier.lib.custom_transforms": [[127, 2, 1, "", "AddGaussianNoise"], [127, 2, 1, "", "AddGaussianPoissonNoise"], [127, 2, 1, "", "AddSpeckleNoise"], [127, 2, 1, "", "BilinearResize"], [127, 2, 1, "", "CenterCropNumpy"], [127, 2, 1, "", "ElasticTransform"], [127, 2, 1, "", "EnhancedCompose"], [127, 2, 1, "", "MaxScaleNumpy"], [127, 2, 1, "", "MedianScaleNumpy"], [127, 2, 1, "", "Merge"], [127, 2, 1, "", "MutualExclude"], [127, 2, 1, "", "NormalizeNumpy"], [127, 2, 1, "", "PoissonSubsampling"], [127, 2, 1, "", "RandomCropNumpy"], [127, 2, 1, "", "RandomGaussianBlurring"], [127, 2, 1, "", "RandomRotate"], [127, 2, 1, "", "Split"], [127, 6, 1, "", "center_crop"], [127, 6, 1, "", "elastic_transform"], [127, 6, 1, "", "poisson_downsampling"], [127, 6, 1, "", "random_num_generator"], [127, 6, 1, "", "to_tensor"]], "brails.processors.foundation_classifier.lib.normalize": [[128, 2, 1, "", "Normalize"]], "brails.processors.foundation_classifier.lib.normalize.Normalize": [[128, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.utils": [[129, 2, 1, "", "AverageMeter"]], "brails.processors.foundation_classifier.lib.utils.AverageMeter": [[129, 3, 1, "", "reset"], [129, 3, 1, "", "update"]], "brails.processors.foundation_classifier.models": [[131, 0, 0, "-", "attention_module"], [132, 0, 0, "-", "basic_layer"], [133, 0, 0, "-", "residual_attention_network"], [134, 0, 0, "-", "resnet_applied"], [135, 0, 0, "-", "sknet"]], "brails.processors.foundation_classifier.models.attention_module": [[131, 2, 1, "", "AttentionModule_pre"], [131, 2, 1, "", "AttentionModule_stage0"], [131, 2, 1, "", "AttentionModule_stage1"], [131, 2, 1, "", "AttentionModule_stage1_cifar"], [131, 2, 1, "", "AttentionModule_stage2"], [131, 2, 1, "", "AttentionModule_stage2_cifar"], [131, 2, 1, "", "AttentionModule_stage3"], [131, 2, 1, "", "AttentionModule_stage3_cifar"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_pre": [[131, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage0": [[131, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1": [[131, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1_cifar": [[131, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2": [[131, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2_cifar": [[131, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3": [[131, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3_cifar": [[131, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.basic_layer": [[132, 2, 1, "", "ResidualBlock"], [132, 2, 1, "", "ResidualBlock1D"]], "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock": [[132, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock1D": [[132, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network": [[133, 2, 1, "", "DenseBlock"], [133, 2, 1, "", "MLP"], [133, 2, 1, "", "ResidualAttentionModel_92"], [133, 2, 1, "", "ResidualAttentionModel_92_32input"], [133, 2, 1, "", "ResidualAttentionModel_92_32input_update"], [133, 2, 1, "", "ResidualAttentionModel_92_Small"], [133, 2, 1, "", "ResidualAttentionModel_92_Small_1D"]], "brails.processors.foundation_classifier.models.residual_attention_network.DenseBlock": [[133, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.MLP": [[133, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92": [[133, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input": [[133, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input_update": [[133, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small": [[133, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small_1D": [[133, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.resnet_applied": [[134, 2, 1, "", "ResNet"], [134, 6, 1, "", "resnet101"], [134, 6, 1, "", "resnet152"], [134, 6, 1, "", "resnet18"], [134, 6, 1, "", "resnet34"], [134, 6, 1, "", "resnet50"]], "brails.processors.foundation_classifier.models.resnet_applied.ResNet": [[134, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.sknet": [[135, 2, 1, "", "SKConv"], [135, 2, 1, "", "SKNet"], [135, 6, 1, "", "SKNet101"], [135, 6, 1, "", "SKNet26"], [135, 6, 1, "", "SKNet50"], [135, 2, 1, "", "SKUnit"]], "brails.processors.foundation_classifier.models.sknet.SKConv": [[135, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.sknet.SKNet": [[135, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.sknet.SKUnit": [[135, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid": [[140, 0, 0, "-", "npid_datasets"], [144, 0, 0, "-", "npid_lib"], [155, 0, 0, "-", "npid_toolbox"]], "brails.processors.foundation_classifier.npid.npid_datasets": [[140, 2, 1, "", "CIFAR100Instance"], [140, 2, 1, "", "CIFAR10Instance"], [140, 2, 1, "", "CombinedMaskDataset"], [140, 2, 1, "", "ImageFolderInstance"], [140, 2, 1, "", "MNISTInstance"], [140, 2, 1, "", "MaskFolderInstance"], [141, 0, 0, "-", "cifar"], [142, 0, 0, "-", "folder"], [143, 0, 0, "-", "mnist"]], "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance": [[140, 4, 1, "", "base_folder"], [140, 4, 1, "", "filename"], [140, 4, 1, "", "test_list"], [140, 4, 1, "", "tgz_md5"], [140, 4, 1, "", "train_list"], [140, 4, 1, "", "url"]], "brails.processors.foundation_classifier.npid.npid_datasets.CombinedMaskDataset": [[140, 3, 1, "", "loader"]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar": [[141, 2, 1, "", "CIFAR100Instance"], [141, 2, 1, "", "CIFAR10Instance"]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance": [[141, 4, 1, "", "base_folder"], [141, 4, 1, "", "data"], [141, 4, 1, "", "filename"], [141, 4, 1, "", "test_list"], [141, 4, 1, "", "tgz_md5"], [141, 4, 1, "", "train_list"], [141, 4, 1, "", "url"]], "brails.processors.foundation_classifier.npid.npid_datasets.folder": [[142, 2, 1, "", "CombinedMaskDataset"], [142, 2, 1, "", "ImageFolderInstance"], [142, 2, 1, "", "MaskFolderInstance"]], "brails.processors.foundation_classifier.npid.npid_datasets.folder.CombinedMaskDataset": [[142, 3, 1, "", "loader"]], "brails.processors.foundation_classifier.npid.npid_datasets.mnist": [[143, 2, 1, "", "MNISTInstance"]], "brails.processors.foundation_classifier.npid.npid_lib": [[145, 0, 0, "-", "LinearAverage"], [146, 0, 0, "-", "NCEAverage"], [147, 0, 0, "-", "NCECriterion"], [148, 0, 0, "-", "alias_multinomial"], [149, 0, 0, "-", "custom_transforms"], [150, 0, 0, "-", "normalize"], [151, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage": [[145, 2, 1, "", "LinearAverage"], [145, 2, 1, "", "LinearAverageOp"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverage": [[145, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp": [[145, 3, 1, "", "backward"], [145, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage": [[146, 2, 1, "", "NCEAverage"], [146, 2, 1, "", "NCEFunction"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEAverage": [[146, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction": [[146, 3, 1, "", "backward"], [146, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion": [[147, 2, 1, "", "NCECriterion"]], "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.NCECriterion": [[147, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial": [[148, 2, 1, "", "AliasMethod"]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod": [[148, 3, 1, "", "cuda"], [148, 3, 1, "", "draw"]], "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms": [[149, 2, 1, "", "AddGaussianNoise"], [149, 2, 1, "", "AddGaussianPoissonNoise"], [149, 2, 1, "", "AddSpeckleNoise"], [149, 2, 1, "", "BilinearResize"], [149, 2, 1, "", "CenterCropNumpy"], [149, 2, 1, "", "ElasticTransform"], [149, 2, 1, "", "EnhancedCompose"], [149, 2, 1, "", "MaxScaleNumpy"], [149, 2, 1, "", "MedianScaleNumpy"], [149, 2, 1, "", "Merge"], [149, 2, 1, "", "MutualExclude"], [149, 2, 1, "", "NormalizeNumpy"], [149, 2, 1, "", "PoissonSubsampling"], [149, 2, 1, "", "RandomCropNumpy"], [149, 2, 1, "", "RandomGaussianBlurring"], [149, 2, 1, "", "RandomRotate"], [149, 2, 1, "", "Split"], [149, 6, 1, "", "center_crop"], [149, 6, 1, "", "elastic_transform"], [149, 6, 1, "", "poisson_downsampling"], [149, 6, 1, "", "random_num_generator"], [149, 6, 1, "", "to_tensor"]], "brails.processors.foundation_classifier.npid.npid_lib.normalize": [[150, 2, 1, "", "Normalize"]], "brails.processors.foundation_classifier.npid.npid_lib.normalize.Normalize": [[150, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.utils": [[151, 2, 1, "", "AverageMeter"]], "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter": [[151, 3, 1, "", "reset"], [151, 3, 1, "", "update"]], "brails.processors.garage_detector": [[164, 0, 0, "-", "garage_detector"], [165, 0, 0, "-", "lib"]], "brails.processors.garage_detector.garage_detector": [[164, 2, 1, "", "GarageDetector"]], "brails.processors.garage_detector.garage_detector.GarageDetector": [[164, 3, 1, "", "predict"], [164, 3, 1, "", "retrain"], [164, 3, 1, "", "train"]], "brails.processors.garage_detector.lib": [[166, 0, 0, "-", "backbone"], [167, 0, 0, "-", "efficientdet"], [174, 0, 0, "-", "efficientnet"], [178, 0, 0, "-", "infer_detector"], [179, 0, 0, "-", "train_detector"], [180, 0, 0, "-", "utils"]], "brails.processors.garage_detector.lib.backbone": [[166, 2, 1, "", "EfficientDetBackbone"]], "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone": [[166, 3, 1, "", "forward"], [166, 3, 1, "", "freeze_bn"], [166, 3, 1, "", "init_backbone"]], "brails.processors.garage_detector.lib.efficientdet": [[168, 0, 0, "-", "coco"], [169, 0, 0, "-", "config"], [170, 0, 0, "-", "dataset"], [171, 0, 0, "-", "loss"], [172, 0, 0, "-", "model"], [173, 0, 0, "-", "utils"]], "brails.processors.garage_detector.lib.efficientdet.coco": [[168, 2, 1, "", "COCO"]], "brails.processors.garage_detector.lib.efficientdet.coco.COCO": [[168, 3, 1, "", "createIndex"], [168, 3, 1, "", "getAnnIds"], [168, 3, 1, "", "getCatIds"], [168, 3, 1, "", "getImgIds"], [168, 3, 1, "", "info"], [168, 3, 1, "", "loadAnns"], [168, 3, 1, "", "loadCats"], [168, 3, 1, "", "loadImgs"]], "brails.processors.garage_detector.lib.efficientdet.dataset": [[170, 2, 1, "", "Augmenter"], [170, 2, 1, "", "CocoDataset"], [170, 2, 1, "", "Normalizer"], [170, 2, 1, "", "Resizer"], [170, 6, 1, "", "collater"]], "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset": [[170, 3, 1, "", "load_annotations"], [170, 3, 1, "", "load_classes"], [170, 3, 1, "", "load_image"]], "brails.processors.garage_detector.lib.efficientdet.loss": [[171, 2, 1, "", "FocalLoss"], [171, 6, 1, "", "calc_iou"]], "brails.processors.garage_detector.lib.efficientdet.loss.FocalLoss": [[171, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model": [[172, 2, 1, "", "BiFPN"], [172, 2, 1, "", "Classifier"], [172, 2, 1, "", "EfficientNet"], [172, 2, 1, "", "Regressor"], [172, 2, 1, "", "SeparableConvBlock"], [172, 6, 1, "", "nms"]], "brails.processors.garage_detector.lib.efficientdet.model.BiFPN": [[172, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model.Classifier": [[172, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model.EfficientNet": [[172, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model.Regressor": [[172, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model.SeparableConvBlock": [[172, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.utils": [[173, 2, 1, "", "Anchors"], [173, 2, 1, "", "BBoxTransform"], [173, 2, 1, "", "ClipBoxes"]], "brails.processors.garage_detector.lib.efficientdet.utils.Anchors": [[173, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.utils.BBoxTransform": [[173, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.utils.ClipBoxes": [[173, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet": [[175, 0, 0, "-", "model"], [176, 0, 0, "-", "utils"], [177, 0, 0, "-", "utils_extra"]], "brails.processors.garage_detector.lib.efficientnet.model": [[175, 2, 1, "", "EfficientNet"], [175, 2, 1, "", "MBConvBlock"]], "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet": [[175, 3, 1, "", "extract_features"], [175, 3, 1, "", "forward"], [175, 3, 1, "", "from_name"], [175, 3, 1, "", "from_pretrained"], [175, 3, 1, "", "get_image_size"], [175, 3, 1, "", "set_swish"]], "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock": [[175, 3, 1, "", "forward"], [175, 3, 1, "", "set_swish"]], "brails.processors.garage_detector.lib.efficientnet.utils": [[176, 2, 1, "", "BlockArgs"], [176, 2, 1, "", "BlockDecoder"], [176, 2, 1, "", "Conv2dDynamicSamePadding"], [176, 2, 1, "", "GlobalParams"], [176, 2, 1, "", "Identity"], [176, 2, 1, "", "MemoryEfficientSwish"], [176, 2, 1, "", "Swish"], [176, 2, 1, "", "SwishImplementation"], [176, 6, 1, "", "drop_connect"], [176, 6, 1, "", "efficientnet"], [176, 6, 1, "", "efficientnet_params"], [176, 6, 1, "", "get_model_params"], [176, 6, 1, "", "get_same_padding_conv2d"], [176, 6, 1, "", "load_pretrained_weights"], [176, 6, 1, "", "round_filters"], [176, 6, 1, "", "round_repeats"]], "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs": [[176, 4, 1, "", "expand_ratio"], [176, 4, 1, "", "id_skip"], [176, 4, 1, "", "input_filters"], [176, 4, 1, "", "kernel_size"], [176, 4, 1, "", "num_repeat"], [176, 4, 1, "", "output_filters"], [176, 4, 1, "", "se_ratio"], [176, 4, 1, "", "stride"]], "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder": [[176, 3, 1, "", "decode"], [176, 3, 1, "", "encode"]], "brails.processors.garage_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding": [[176, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams": [[176, 4, 1, "", "batch_norm_epsilon"], [176, 4, 1, "", "batch_norm_momentum"], [176, 4, 1, "", "depth_coefficient"], [176, 4, 1, "", "depth_divisor"], [176, 4, 1, "", "drop_connect_rate"], [176, 4, 1, "", "dropout_rate"], [176, 4, 1, "", "image_size"], [176, 4, 1, "", "min_depth"], [176, 4, 1, "", "num_classes"], [176, 4, 1, "", "width_coefficient"]], "brails.processors.garage_detector.lib.efficientnet.utils.Identity": [[176, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.MemoryEfficientSwish": [[176, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.Swish": [[176, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation": [[176, 3, 1, "", "backward"], [176, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra": [[177, 2, 1, "", "Conv2dStaticSamePadding"], [177, 2, 1, "", "MaxPool2dStaticSamePadding"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding": [[177, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding": [[177, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.infer_detector": [[178, 2, 1, "", "Infer"]], "brails.processors.garage_detector.lib.infer_detector.Infer": [[178, 3, 1, "", "display"], [178, 3, 1, "", "load_model"], [178, 3, 1, "", "predict"]], "brails.processors.garage_detector.lib.train_detector": [[179, 2, 1, "", "Detector"], [179, 2, 1, "", "ModelWithLoss"], [179, 6, 1, "", "boolean_string"]], "brails.processors.garage_detector.lib.train_detector.Detector": [[179, 3, 1, "", "save_checkpoint"], [179, 3, 1, "", "set_fixed_params"], [179, 3, 1, "", "set_hyperparams"], [179, 3, 1, "", "set_model"], [179, 3, 1, "", "set_train_dataset"], [179, 3, 1, "", "set_val_dataset"], [179, 3, 1, "", "start_training"], [179, 3, 1, "", "train"]], "brails.processors.garage_detector.lib.train_detector.ModelWithLoss": [[179, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.utils": [[181, 0, 0, "-", "sync_batchnorm"], [187, 0, 0, "-", "utils"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm": [[182, 0, 0, "-", "batchnorm"], [183, 0, 0, "-", "batchnorm_reimpl"], [184, 0, 0, "-", "comm"], [185, 0, 0, "-", "replicate"], [186, 0, 0, "-", "unittest"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm": [[182, 2, 1, "", "SynchronizedBatchNorm1d"], [182, 2, 1, "", "SynchronizedBatchNorm2d"], [182, 2, 1, "", "SynchronizedBatchNorm3d"], [182, 6, 1, "", "convert_model"], [182, 6, 1, "", "patch_sync_batchnorm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[183, 2, 1, "", "BatchNorm2dReimpl"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl": [[183, 3, 1, "", "forward"], [183, 3, 1, "", "reset_parameters"], [183, 3, 1, "", "reset_running_stats"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm": [[184, 2, 1, "", "FutureResult"], [184, 2, 1, "", "SlavePipe"], [184, 2, 1, "", "SyncMaster"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult": [[184, 3, 1, "", "get"], [184, 3, 1, "", "put"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SlavePipe": [[184, 3, 1, "", "run_slave"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster": [[184, 5, 1, "", "nr_slaves"], [184, 3, 1, "", "register_slave"], [184, 3, 1, "", "run_master"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate": [[185, 2, 1, "", "CallbackContext"], [185, 2, 1, "", "DataParallelWithCallback"], [185, 6, 1, "", "execute_replication_callbacks"], [185, 6, 1, "", "patch_replication_callback"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback": [[185, 3, 1, "", "replicate"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest": [[186, 2, 1, "", "TorchTestCase"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase": [[186, 3, 1, "", "assertTensorClose"]], "brails.processors.garage_detector.lib.utils.utils": [[187, 2, 1, "", "CustomDataParallel"], [187, 6, 1, "", "aspectaware_resize_padding"], [187, 6, 1, "", "display"], [187, 6, 1, "", "from_colorname_to_bgr"], [187, 6, 1, "", "get_index_label"], [187, 6, 1, "", "get_last_weights"], [187, 6, 1, "", "init_weights"], [187, 6, 1, "", "invert_affine"], [187, 6, 1, "", "plot_one_box"], [187, 6, 1, "", "postprocess"], [187, 6, 1, "", "preprocess"], [187, 6, 1, "", "preprocess_video"], [187, 6, 1, "", "replace_w_sync_bn"], [187, 6, 1, "", "standard_to_bgr"], [187, 6, 1, "", "variance_scaling_"]], "brails.processors.garage_detector.lib.utils.utils.CustomDataParallel": [[187, 3, 1, "", "scatter"]], "brails.processors.gpt_base_model": [[189, 0, 0, "-", "GPT"], [190, 0, 0, "-", "utils"]], "brails.processors.gpt_base_model.GPT": [[189, 2, 1, "", "GPT"]], "brails.processors.gpt_base_model.GPT.GPT": [[189, 3, 1, "", "predict"]], "brails.processors.gpt_base_model.utils": [[190, 6, 1, "", "encode_image"], [190, 6, 1, "", "find_json"], [190, 6, 1, "", "load_predictions_from_json"], [190, 6, 1, "", "prompt_and_save_caption"]], "brails.processors.image_classifier": [[192, 0, 0, "-", "image_classifier"]], "brails.processors.image_classifier.image_classifier": [[192, 2, 1, "", "ImageClassifier"]], "brails.processors.image_classifier.image_classifier.ImageClassifier": [[192, 3, 1, "", "predict"], [192, 3, 1, "", "retrain"], [192, 3, 1, "", "train"]], "brails.processors.image_processor": [[193, 2, 1, "", "ImageProcessor"]], "brails.processors.image_processor.ImageProcessor": [[193, 3, 1, "", "predict"]], "brails.processors.nFloor_gpt": [[197, 0, 0, "-", "nFloor_gpt"]], "brails.processors.nFloor_gpt.nFloor_gpt": [[197, 2, 1, "", "NFloorGPT"]], "brails.processors.nFloor_vlm": [[199, 0, 0, "-", "nFloor_vlm"]], "brails.processors.nFloor_vlm.nFloor_vlm": [[199, 2, 1, "", "NFloorVLM"]], "brails.processors.nfloors_detector": [[201, 0, 0, "-", "lib"], [224, 0, 0, "-", "nfloor_detector"]], "brails.processors.nfloors_detector.lib": [[202, 0, 0, "-", "backbone"], [203, 0, 0, "-", "efficientdet"], [210, 0, 0, "-", "efficientnet"], [214, 0, 0, "-", "infer_detector"], [215, 0, 0, "-", "train_detector"], [216, 0, 0, "-", "utils"]], "brails.processors.nfloors_detector.lib.backbone": [[202, 2, 1, "", "EfficientDetBackbone"]], "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone": [[202, 3, 1, "", "forward"], [202, 3, 1, "", "freeze_bn"], [202, 3, 1, "", "init_backbone"]], "brails.processors.nfloors_detector.lib.efficientdet": [[204, 0, 0, "-", "coco"], [205, 0, 0, "-", "config"], [206, 0, 0, "-", "dataset"], [207, 0, 0, "-", "loss"], [208, 0, 0, "-", "model"], [209, 0, 0, "-", "utils"]], "brails.processors.nfloors_detector.lib.efficientdet.coco": [[204, 2, 1, "", "COCO"]], "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO": [[204, 3, 1, "", "createIndex"], [204, 3, 1, "", "getAnnIds"], [204, 3, 1, "", "getCatIds"], [204, 3, 1, "", "getImgIds"], [204, 3, 1, "", "info"], [204, 3, 1, "", "loadAnns"], [204, 3, 1, "", "loadCats"], [204, 3, 1, "", "loadImgs"]], "brails.processors.nfloors_detector.lib.efficientdet.dataset": [[206, 2, 1, "", "Augmenter"], [206, 2, 1, "", "CocoDataset"], [206, 2, 1, "", "Normalizer"], [206, 2, 1, "", "Resizer"], [206, 6, 1, "", "collater"]], "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset": [[206, 3, 1, "", "load_annotations"], [206, 3, 1, "", "load_classes"], [206, 3, 1, "", "load_image"]], "brails.processors.nfloors_detector.lib.efficientdet.loss": [[207, 2, 1, "", "FocalLoss"], [207, 6, 1, "", "calc_iou"]], "brails.processors.nfloors_detector.lib.efficientdet.loss.FocalLoss": [[207, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model": [[208, 2, 1, "", "BiFPN"], [208, 2, 1, "", "Classifier"], [208, 2, 1, "", "EfficientNet"], [208, 2, 1, "", "Regressor"], [208, 2, 1, "", "SeparableConvBlock"], [208, 6, 1, "", "nms"]], "brails.processors.nfloors_detector.lib.efficientdet.model.BiFPN": [[208, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model.Classifier": [[208, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model.EfficientNet": [[208, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model.Regressor": [[208, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model.SeparableConvBlock": [[208, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.utils": [[209, 2, 1, "", "Anchors"], [209, 2, 1, "", "BBoxTransform"], [209, 2, 1, "", "ClipBoxes"]], "brails.processors.nfloors_detector.lib.efficientdet.utils.Anchors": [[209, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.utils.BBoxTransform": [[209, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.utils.ClipBoxes": [[209, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet": [[211, 0, 0, "-", "model"], [212, 0, 0, "-", "utils"], [213, 0, 0, "-", "utils_extra"]], "brails.processors.nfloors_detector.lib.efficientnet.model": [[211, 2, 1, "", "EfficientNet"], [211, 2, 1, "", "MBConvBlock"]], "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet": [[211, 3, 1, "", "extract_features"], [211, 3, 1, "", "forward"], [211, 3, 1, "", "from_name"], [211, 3, 1, "", "from_pretrained"], [211, 3, 1, "", "get_image_size"], [211, 3, 1, "", "set_swish"]], "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock": [[211, 3, 1, "", "forward"], [211, 3, 1, "", "set_swish"]], "brails.processors.nfloors_detector.lib.efficientnet.utils": [[212, 2, 1, "", "BlockArgs"], [212, 2, 1, "", "BlockDecoder"], [212, 2, 1, "", "Conv2dDynamicSamePadding"], [212, 2, 1, "", "GlobalParams"], [212, 2, 1, "", "Identity"], [212, 2, 1, "", "MemoryEfficientSwish"], [212, 2, 1, "", "Swish"], [212, 2, 1, "", "SwishImplementation"], [212, 6, 1, "", "drop_connect"], [212, 6, 1, "", "efficientnet"], [212, 6, 1, "", "efficientnet_params"], [212, 6, 1, "", "get_model_params"], [212, 6, 1, "", "get_same_padding_conv2d"], [212, 6, 1, "", "load_pretrained_weights"], [212, 6, 1, "", "round_filters"], [212, 6, 1, "", "round_repeats"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs": [[212, 4, 1, "", "expand_ratio"], [212, 4, 1, "", "id_skip"], [212, 4, 1, "", "input_filters"], [212, 4, 1, "", "kernel_size"], [212, 4, 1, "", "num_repeat"], [212, 4, 1, "", "output_filters"], [212, 4, 1, "", "se_ratio"], [212, 4, 1, "", "stride"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder": [[212, 3, 1, "", "decode"], [212, 3, 1, "", "encode"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding": [[212, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams": [[212, 4, 1, "", "batch_norm_epsilon"], [212, 4, 1, "", "batch_norm_momentum"], [212, 4, 1, "", "depth_coefficient"], [212, 4, 1, "", "depth_divisor"], [212, 4, 1, "", "drop_connect_rate"], [212, 4, 1, "", "dropout_rate"], [212, 4, 1, "", "image_size"], [212, 4, 1, "", "min_depth"], [212, 4, 1, "", "num_classes"], [212, 4, 1, "", "width_coefficient"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.Identity": [[212, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.MemoryEfficientSwish": [[212, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.Swish": [[212, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation": [[212, 3, 1, "", "backward"], [212, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra": [[213, 2, 1, "", "Conv2dStaticSamePadding"], [213, 2, 1, "", "MaxPool2dStaticSamePadding"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding": [[213, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding": [[213, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.infer_detector": [[214, 2, 1, "", "Infer"]], "brails.processors.nfloors_detector.lib.infer_detector.Infer": [[214, 3, 1, "", "display"], [214, 3, 1, "", "load_model"], [214, 3, 1, "", "predict"]], "brails.processors.nfloors_detector.lib.train_detector": [[215, 2, 1, "", "Detector"], [215, 2, 1, "", "ModelWithLoss"], [215, 6, 1, "", "boolean_string"]], "brails.processors.nfloors_detector.lib.train_detector.Detector": [[215, 3, 1, "", "save_checkpoint"], [215, 3, 1, "", "set_fixed_params"], [215, 3, 1, "", "set_hyperparams"], [215, 3, 1, "", "set_model"], [215, 3, 1, "", "set_train_dataset"], [215, 3, 1, "", "set_val_dataset"], [215, 3, 1, "", "start_training"], [215, 3, 1, "", "train"]], "brails.processors.nfloors_detector.lib.train_detector.ModelWithLoss": [[215, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.utils": [[217, 0, 0, "-", "sync_batchnorm"], [223, 0, 0, "-", "utils"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm": [[218, 0, 0, "-", "batchnorm"], [219, 0, 0, "-", "batchnorm_reimpl"], [220, 0, 0, "-", "comm"], [221, 0, 0, "-", "replicate"], [222, 0, 0, "-", "unittest"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm": [[218, 2, 1, "", "SynchronizedBatchNorm1d"], [218, 2, 1, "", "SynchronizedBatchNorm2d"], [218, 2, 1, "", "SynchronizedBatchNorm3d"], [218, 6, 1, "", "convert_model"], [218, 6, 1, "", "patch_sync_batchnorm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[219, 2, 1, "", "BatchNorm2dReimpl"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl": [[219, 3, 1, "", "forward"], [219, 3, 1, "", "reset_parameters"], [219, 3, 1, "", "reset_running_stats"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm": [[220, 2, 1, "", "FutureResult"], [220, 2, 1, "", "SlavePipe"], [220, 2, 1, "", "SyncMaster"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult": [[220, 3, 1, "", "get"], [220, 3, 1, "", "put"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SlavePipe": [[220, 3, 1, "", "run_slave"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster": [[220, 5, 1, "", "nr_slaves"], [220, 3, 1, "", "register_slave"], [220, 3, 1, "", "run_master"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate": [[221, 2, 1, "", "CallbackContext"], [221, 2, 1, "", "DataParallelWithCallback"], [221, 6, 1, "", "execute_replication_callbacks"], [221, 6, 1, "", "patch_replication_callback"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback": [[221, 3, 1, "", "replicate"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest": [[222, 2, 1, "", "TorchTestCase"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase": [[222, 3, 1, "", "assertTensorClose"]], "brails.processors.nfloors_detector.lib.utils.utils": [[223, 2, 1, "", "CustomDataParallel"], [223, 6, 1, "", "aspectaware_resize_padding"], [223, 6, 1, "", "display"], [223, 6, 1, "", "from_colorname_to_bgr"], [223, 6, 1, "", "get_index_label"], [223, 6, 1, "", "get_last_weights"], [223, 6, 1, "", "init_weights"], [223, 6, 1, "", "invert_affine"], [223, 6, 1, "", "plot_one_box"], [223, 6, 1, "", "postprocess"], [223, 6, 1, "", "preprocess"], [223, 6, 1, "", "preprocess_video"], [223, 6, 1, "", "replace_w_sync_bn"], [223, 6, 1, "", "standard_to_bgr"], [223, 6, 1, "", "variance_scaling_"]], "brails.processors.nfloors_detector.lib.utils.utils.CustomDataParallel": [[223, 3, 1, "", "scatter"]], "brails.processors.nfloors_detector.nfloor_detector": [[224, 2, 1, "", "NFloorDetector"]], "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector": [[224, 3, 1, "", "predict"], [224, 3, 1, "", "retrain"], [224, 3, 1, "", "train"]], "brails.processors.occupancy_classifier": [[226, 0, 0, "-", "occupancy_classifier"]], "brails.processors.occupancy_classifier.occupancy_classifier": [[226, 2, 1, "", "OccupancyClassifier"]], "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier": [[226, 3, 1, "", "predict"], [226, 3, 1, "", "retrain"]], "brails.processors.other_idea": [[228, 0, 0, "-", "arial_processing"], [229, 0, 0, "-", "street_processor"]], "brails.processors.other_idea.arial_processing": [[228, 2, 1, "", "ArialProcessing"]], "brails.processors.other_idea.arial_processing.ArialProcessing": [[228, 3, 1, "", "predict"]], "brails.processors.other_idea.street_processor": [[229, 2, 1, "", "StreetProcessor"]], "brails.processors.other_idea.street_processor.StreetProcessor": [[229, 3, 1, "", "predict"]], "brails.processors.roof_shape_classifier": [[231, 0, 0, "-", "roof_shape_classifier"]], "brails.processors.roof_shape_classifier.roof_shape_classifier": [[231, 2, 1, "", "RoofShapeClassifier"]], "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier": [[231, 3, 1, "", "predict"], [231, 3, 1, "", "retrain"]], "brails.processors.roof_shape_gpt": [[233, 0, 0, "-", "roof_shape_gpt"]], "brails.processors.roof_shape_gpt.roof_shape_gpt": [[233, 2, 1, "", "RoofShapeGPT"]], "brails.processors.roof_shape_vlm": [[235, 0, 0, "-", "roof_shape_vlm"]], "brails.processors.roof_shape_vlm.roof_shape_vlm": [[235, 2, 1, "", "RoofShapeVLM"]], "brails.processors.street_level_damage_detection": [[237, 0, 0, "-", "street_level_damage_detection"]], "brails.processors.street_level_damage_detection.street_level_damage_detection": [[237, 2, 1, "", "DamageDetection_StreetLevel"]], "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel": [[237, 3, 1, "", "predict"]], "brails.processors.vlm_image_classifier": [[239, 0, 0, "-", "CLIPClassifier"], [240, 0, 0, "-", "clip"]], "brails.processors.vlm_image_classifier.CLIPClassifier": [[239, 2, 1, "", "CLIPClassifier"]], "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier": [[239, 3, 1, "", "predict"]], "brails.processors.vlm_image_classifier.clip": [[241, 0, 0, "-", "clip"], [242, 0, 0, "-", "model"], [243, 0, 0, "-", "simple_tokenizer"], [244, 0, 0, "-", "utils"]], "brails.processors.vlm_image_classifier.clip.clip": [[241, 6, 1, "", "available_models"], [241, 6, 1, "", "load"], [241, 6, 1, "", "tokenize"]], "brails.processors.vlm_image_classifier.clip.model": [[242, 2, 1, "", "AttentionPool2d"], [242, 2, 1, "", "Bottleneck"], [242, 2, 1, "", "CLIP"], [242, 2, 1, "", "LayerNorm"], [242, 2, 1, "", "ModifiedResNet"], [242, 2, 1, "", "QuickGELU"], [242, 2, 1, "", "ResidualAttentionBlock"], [242, 2, 1, "", "Transformer"], [242, 2, 1, "", "VisionTransformer"], [242, 6, 1, "", "build_model"], [242, 6, 1, "", "convert_weights"]], "brails.processors.vlm_image_classifier.clip.model.AttentionPool2d": [[242, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.Bottleneck": [[242, 4, 1, "", "expansion"], [242, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.CLIP": [[242, 3, 1, "", "build_attention_mask"], [242, 5, 1, "", "dtype"], [242, 3, 1, "", "encode_image"], [242, 3, 1, "", "encode_text"], [242, 3, 1, "", "forward"], [242, 3, 1, "", "initialize_parameters"]], "brails.processors.vlm_image_classifier.clip.model.LayerNorm": [[242, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.ModifiedResNet": [[242, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.QuickGELU": [[242, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock": [[242, 3, 1, "", "attention"], [242, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.Transformer": [[242, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.VisionTransformer": [[242, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer": [[243, 2, 1, "", "SimpleTokenizer"], [243, 6, 1, "", "basic_clean"], [243, 6, 1, "", "bytes_to_unicode"], [243, 6, 1, "", "default_bpe"], [243, 6, 1, "", "get_pairs"], [243, 6, 1, "", "whitespace_clean"]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer": [[243, 3, 1, "", "bpe"], [243, 3, 1, "", "decode"], [243, 3, 1, "", "encode"]], "brails.processors.vlm_image_classifier.clip.utils": [[244, 6, 1, "", "aggregate_predictions"], [244, 6, 1, "", "compute_similarity"], [244, 6, 1, "", "pred_idx_to_labels"], [244, 6, 1, "", "predict_wrapper"], [244, 6, 1, "", "preprocess_batch_img"], [244, 6, 1, "", "round"]], "brails.processors.vlm_segmenter": [[246, 0, 0, "-", "grounded_sam_utils"], [247, 0, 0, "-", "segment_anything"], [264, 0, 0, "-", "vlm_segmenter"]], "brails.processors.vlm_segmenter.grounded_sam_utils": [[246, 2, 1, "", "BoundingBox"], [246, 2, 1, "", "DetectionResult"], [246, 6, 1, "", "build_models"], [246, 6, 1, "", "detect"], [246, 6, 1, "", "run_on_one_image"], [246, 6, 1, "", "segment"], [246, 6, 1, "", "show_binary_mask"], [246, 6, 1, "", "show_box"], [246, 6, 1, "", "show_points"], [246, 6, 1, "", "verify_and_download_models"]], "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox": [[246, 4, 1, "", "xmax"], [246, 4, 1, "", "xmin"], [246, 5, 1, "", "xyxy"], [246, 4, 1, "", "ymax"], [246, 4, 1, "", "ymin"]], "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult": [[246, 4, 1, "", "box"], [246, 3, 1, "", "from_dict"], [246, 4, 1, "", "label"], [246, 4, 1, "", "mask"], [246, 4, 1, "", "score"]], "brails.processors.vlm_segmenter.segment_anything": [[248, 0, 0, "-", "automatic_mask_generator"], [249, 0, 0, "-", "build_sam"], [250, 0, 0, "-", "build_sam_hq"], [251, 0, 0, "-", "modeling"], [259, 0, 0, "-", "predictor"], [260, 0, 0, "-", "utils"]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator": [[248, 2, 1, "", "SamAutomaticMaskGenerator"]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator": [[248, 3, 1, "", "generate"], [248, 3, 1, "", "postprocess_small_regions"]], "brails.processors.vlm_segmenter.segment_anything.build_sam": [[249, 6, 1, "", "build_sam"], [249, 6, 1, "", "build_sam_vit_b"], [249, 6, 1, "", "build_sam_vit_h"], [249, 6, 1, "", "build_sam_vit_l"]], "brails.processors.vlm_segmenter.segment_anything.build_sam_hq": [[250, 6, 1, "", "build_sam_hq"], [250, 6, 1, "", "build_sam_hq_vit_b"], [250, 6, 1, "", "build_sam_hq_vit_h"], [250, 6, 1, "", "build_sam_hq_vit_l"]], "brails.processors.vlm_segmenter.segment_anything.modeling": [[252, 0, 0, "-", "common"], [253, 0, 0, "-", "image_encoder"], [254, 0, 0, "-", "mask_decoder"], [255, 0, 0, "-", "mask_decoder_hq"], [256, 0, 0, "-", "prompt_encoder"], [257, 0, 0, "-", "sam"], [258, 0, 0, "-", "transformer"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common": [[252, 2, 1, "", "LayerNorm2d"], [252, 2, 1, "", "MLPBlock"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common.LayerNorm2d": [[252, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common.MLPBlock": [[252, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder": [[253, 2, 1, "", "Attention"], [253, 2, 1, "", "Block"], [253, 2, 1, "", "ImageEncoderViT"], [253, 2, 1, "", "PatchEmbed"], [253, 6, 1, "", "add_decomposed_rel_pos"], [253, 6, 1, "", "get_rel_pos"], [253, 6, 1, "", "window_partition"], [253, 6, 1, "", "window_unpartition"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Attention": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Block": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.ImageEncoderViT": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.PatchEmbed": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder": [[254, 2, 1, "", "MLP"], [254, 2, 1, "", "MaskDecoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MLP": [[254, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder": [[254, 3, 1, "", "forward"], [254, 3, 1, "", "predict_masks"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq": [[255, 2, 1, "", "MLP"], [255, 2, 1, "", "MaskDecoderHQ"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MLP": [[255, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ": [[255, 3, 1, "", "forward"], [255, 3, 1, "", "predict_masks"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder": [[256, 2, 1, "", "PositionEmbeddingRandom"], [256, 2, 1, "", "PromptEncoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom": [[256, 3, 1, "", "forward"], [256, 3, 1, "", "forward_with_coords"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder": [[256, 3, 1, "", "forward"], [256, 3, 1, "", "get_dense_pe"]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam": [[257, 2, 1, "", "Sam"]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam": [[257, 5, 1, "", "device"], [257, 3, 1, "", "forward"], [257, 4, 1, "", "image_format"], [257, 4, 1, "", "mask_threshold"], [257, 3, 1, "", "postprocess_masks"], [257, 3, 1, "", "preprocess"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer": [[258, 2, 1, "", "Attention"], [258, 2, 1, "", "TwoWayAttentionBlock"], [258, 2, 1, "", "TwoWayTransformer"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.Attention": [[258, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayAttentionBlock": [[258, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayTransformer": [[258, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.predictor": [[259, 2, 1, "", "SamPredictor"]], "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor": [[259, 5, 1, "", "device"], [259, 3, 1, "", "get_image_embedding"], [259, 3, 1, "", "predict"], [259, 3, 1, "", "predict_torch"], [259, 3, 1, "", "reset_image"], [259, 3, 1, "", "set_image"], [259, 3, 1, "", "set_torch_image"]], "brails.processors.vlm_segmenter.segment_anything.utils": [[261, 0, 0, "-", "amg"], [262, 0, 0, "-", "onnx"], [263, 0, 0, "-", "transforms"]], "brails.processors.vlm_segmenter.segment_anything.utils.amg": [[261, 2, 1, "", "MaskData"], [261, 6, 1, "", "area_from_rle"], [261, 6, 1, "", "batch_iterator"], [261, 6, 1, "", "batched_mask_to_box"], [261, 6, 1, "", "box_xyxy_to_xywh"], [261, 6, 1, "", "build_all_layer_point_grids"], [261, 6, 1, "", "build_point_grid"], [261, 6, 1, "", "calculate_stability_score"], [261, 6, 1, "", "coco_encode_rle"], [261, 6, 1, "", "generate_crop_boxes"], [261, 6, 1, "", "is_box_near_crop_edge"], [261, 6, 1, "", "mask_to_rle_pytorch"], [261, 6, 1, "", "remove_small_regions"], [261, 6, 1, "", "rle_to_mask"], [261, 6, 1, "", "uncrop_boxes_xyxy"], [261, 6, 1, "", "uncrop_masks"], [261, 6, 1, "", "uncrop_points"]], "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData": [[261, 3, 1, "", "cat"], [261, 3, 1, "", "filter"], [261, 3, 1, "", "items"], [261, 3, 1, "", "to_numpy"]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx": [[262, 2, 1, "", "SamOnnxModel"]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel": [[262, 3, 1, "", "forward"], [262, 3, 1, "", "mask_postprocessing"], [262, 3, 1, "", "resize_longest_image_size"], [262, 3, 1, "", "select_masks"]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms": [[263, 2, 1, "", "ResizeLongestSide"]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide": [[263, 3, 1, "", "apply_boxes"], [263, 3, 1, "", "apply_boxes_torch"], [263, 3, 1, "", "apply_coords"], [263, 3, 1, "", "apply_coords_torch"], [263, 3, 1, "", "apply_image"], [263, 3, 1, "", "apply_image_torch"], [263, 3, 1, "", "get_preprocess_shape"]], "brails.processors.vlm_segmenter.vlm_segmenter": [[264, 2, 1, "", "VLMSegmenter"]], "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter": [[264, 3, 1, "", "predict"], [264, 3, 1, "", "write_dict"]], "brails.processors.year_built_classifier": [[266, 0, 0, "-", "Resnet"], [268, 0, 0, "-", "lib"], [271, 0, 0, "-", "model"], [273, 0, 0, "-", "weights"]], "brails.processors.year_built_classifier.Resnet": [[266, 2, 1, "", "ResNet"], [266, 6, 1, "", "resnet101"], [266, 6, 1, "", "resnet152"], [266, 6, 1, "", "resnet18"], [266, 6, 1, "", "resnet34"], [266, 6, 1, "", "resnet50"], [266, 6, 1, "", "resnext101_32x8d"], [266, 6, 1, "", "resnext50_32x4d"]], "brails.processors.year_built_classifier.Resnet.ResNet": [[266, 3, 1, "", "forward"]], "brails.processors.year_built_classifier.lib": [[270, 0, 0, "-", "utils"]], "brails.processors.year_built_classifier.lib.utils": [[270, 6, 1, "", "construct_confusion_matrix_image"], [270, 6, 1, "", "cosine_anneal_schedule"], [270, 6, 1, "", "jigsaw_generator"], [270, 6, 1, "", "load_model"], [270, 6, 1, "", "model_info"], [270, 6, 1, "", "test"], [270, 6, 1, "", "test_softlabels"]], "brails.processors.year_built_classifier.model": [[271, 2, 1, "", "BasicConv"], [271, 2, 1, "", "PMG"]], "brails.processors.year_built_classifier.model.BasicConv": [[271, 3, 1, "", "forward"]], "brails.processors.year_built_classifier.model.PMG": [[271, 3, 1, "", "forward"]], "brails.scrapers": [[276, 0, 0, "-", "asce_hazard_data_scraper"], [278, 0, 0, "-", "footprint_scraper"], [279, 0, 0, "-", "google_satellite"], [281, 0, 0, "-", "google_streetview"], [283, 0, 0, "-", "image_scraper"], [284, 0, 0, "-", "ms_footprint_scraper"], [286, 0, 0, "-", "nbi_scraper"], [288, 0, 0, "-", "nsi_parser"], [290, 0, 0, "-", "nti_scraper"], [292, 0, 0, "-", "osm_footprint_scraper"], [294, 0, 0, "-", "osm_power_network_scraper"], [296, 0, 0, "-", "overture_maps_scraper"], [298, 0, 0, "-", "rapid_image_processors"], [300, 0, 0, "-", "usa_footprint_scraper"], [302, 0, 0, "-", "user_footprints"]], "brails.scrapers.footprint_scraper": [[278, 2, 1, "", "FootprintScraper"]], "brails.scrapers.footprint_scraper.FootprintScraper": [[278, 3, 1, "", "get_footprints"]], "brails.scrapers.google_satellite": [[280, 0, 0, "-", "google_satellite"]], "brails.scrapers.google_satellite.google_satellite": [[280, 2, 1, "", "GoogleSatellite"]], "brails.scrapers.google_satellite.google_satellite.GoogleSatellite": [[280, 3, 1, "", "get_images"]], "brails.scrapers.google_streetview": [[282, 0, 0, "-", "google_streetview"]], "brails.scrapers.google_streetview.google_streetview": [[282, 2, 1, "", "GoogleStreetview"]], "brails.scrapers.google_streetview.google_streetview.GoogleStreetview": [[282, 3, 1, "", "get_images"]], "brails.scrapers.image_scraper": [[283, 2, 1, "", "ImageScraper"]], "brails.scrapers.image_scraper.ImageScraper": [[283, 3, 1, "", "get_images"]], "brails.scrapers.ms_footprint_scraper": [[285, 0, 0, "-", "ms_footprint_handler"]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler": [[285, 2, 1, "", "MS_FootprintScraper"]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper": [[285, 3, 1, "", "get_footprints"]], "brails.scrapers.nbi_scraper": [[287, 0, 0, "-", "nbi_scraper"]], "brails.scrapers.nbi_scraper.nbi_scraper": [[287, 2, 1, "", "NBIScraper"]], "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper": [[287, 3, 1, "", "get_assets"]], "brails.scrapers.nsi_parser": [[289, 0, 0, "-", "nsi_parser"]], "brails.scrapers.nsi_parser.nsi_parser": [[289, 2, 1, "", "NSI_Parser"]], "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser": [[289, 3, 1, "", "GetNSIData"], [289, 3, 1, "", "get_filtered_data_given_inventory"], [289, 3, 1, "", "get_raw_data"]], "brails.scrapers.nti_scraper": [[291, 0, 0, "-", "nti_scraper"]], "brails.scrapers.nti_scraper.nti_scraper": [[291, 2, 1, "", "NTIScraper"]], "brails.scrapers.nti_scraper.nti_scraper.NTIScraper": [[291, 3, 1, "", "get_assets"]], "brails.scrapers.osm_footprint_scraper": [[293, 0, 0, "-", "osm_footprint_scraper"]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper": [[293, 2, 1, "", "OSM_FootprintScraper"]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper": [[293, 3, 1, "", "get_footprints"]], "brails.scrapers.rapid_image_processors": [[299, 0, 0, "-", "rapid_image_processors"]], "brails.scrapers.rapid_image_processors.rapid_image_processors": [[299, 2, 1, "", "RAPIDImageProcessors"]], "brails.scrapers.rapid_image_processors.rapid_image_processors.RAPIDImageProcessors": [[299, 3, 1, "", "pulsar_image_extractor"]], "brails.scrapers.usa_footprint_scraper": [[301, 0, 0, "-", "usa_footprint_scraper"]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper": [[301, 2, 1, "", "USA_FootprintScraper"]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper": [[301, 3, 1, "", "get_footprints"]], "brails.scrapers.user_footprints": [[302, 2, 1, "", "UserFootprint"]], "brails.scrapers.user_footprints.UserFootprint": [[302, 3, 1, "", "fetch_footprint_data"]], "brails.types": [[304, 0, 0, "-", "asset_inventory"], [305, 0, 0, "-", "image_set"], [306, 0, 0, "-", "region_boundary"]], "brails.types.asset_inventory": [[304, 2, 1, "", "Asset"], [304, 2, 1, "", "AssetInventory"], [304, 6, 1, "", "clean_floats"]], "brails.types.asset_inventory.Asset": [[304, 3, 1, "", "add_features"], [304, 3, 1, "", "print_info"], [304, 3, 1, "", "remove_features"]], "brails.types.asset_inventory.AssetInventory": [[304, 3, 1, "", "add_asset"], [304, 3, 1, "", "add_asset_coordinates"], [304, 3, 1, "", "add_asset_features"], [304, 3, 1, "", "add_asset_features_from_csv"], [304, 3, 1, "", "add_model_predictions"], [304, 3, 1, "", "change_feature_names"], [304, 3, 1, "", "convert_polygons_to_centroids"], [304, 3, 1, "", "get_asset_coordinates"], [304, 3, 1, "", "get_asset_features"], [304, 3, 1, "", "get_asset_ids"], [304, 3, 1, "", "get_coordinates"], [304, 3, 1, "", "get_dataframe"], [304, 3, 1, "", "get_extent"], [304, 3, 1, "", "get_geojson"], [304, 3, 1, "", "get_multi_keys"], [304, 3, 1, "", "get_n_pw"], [304, 3, 1, "", "get_random_sample"], [304, 3, 1, "", "get_world_realization"], [304, 3, 1, "", "join"], [304, 3, 1, "", "print_info"], [304, 3, 1, "", "read_from_csv"], [304, 3, 1, "", "remove_asset"], [304, 3, 1, "", "remove_features"], [304, 3, 1, "", "update_world_realization"], [304, 3, 1, "", "write_to_geojson"]], "brails.types.image_set": [[305, 2, 1, "", "Image"], [305, 2, 1, "", "ImageSet"]], "brails.types.image_set.Image": [[305, 3, 1, "", "print_info"], [305, 3, 1, "", "set_image"], [305, 3, 1, "", "update_properties"]], "brails.types.image_set.ImageSet": [[305, 3, 1, "", "add_image"], [305, 3, 1, "", "get_image"], [305, 3, 1, "", "print_info"], [305, 3, 1, "", "set_directory"]], "brails.types.region_boundary": [[306, 2, 1, "", "RegionBoundary"], [306, 2, 1, "", "RegionInput"]], "brails.types.region_boundary.RegionBoundary": [[306, 3, 1, "", "get_boundary"]], "brails.types.region_boundary.RegionInput": [[306, 4, 1, "", "dataType"], [306, 4, 1, "", "errorMessage"], [306, 4, 1, "", "validationConditions"]], "brails.utils": [[308, 0, 0, "-", "arcgisapi_service_helper"], [309, 0, 0, "-", "geo_tools"], [310, 0, 0, "-", "importer"], [311, 0, 0, "-", "input_validator"], [312, 0, 0, "-", "inventory_validator"], [313, 0, 0, "-", "model_utils"], [314, 0, 0, "-", "plot_tools"], [315, 0, 0, "-", "segmentation_utils"], [316, 0, 0, "-", "spatial_join_methods"], [321, 0, 0, "-", "unit_converter"]], "brails.utils.arcgisapi_service_helper": [[308, 2, 1, "", "ArcgisAPIServiceHelper"]], "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper": [[308, 3, 1, "", "categorize_and_split_cells"], [308, 3, 1, "", "download_all_attr_for_region"], [308, 3, 1, "", "download_all_attr_from_api"], [308, 3, 1, "", "download_attr_from_api"], [308, 3, 1, "", "fetch_data_for_cells"], [308, 3, 1, "", "fetch_max_records_per_query"], [308, 3, 1, "", "get_element_counts"], [308, 3, 1, "", "split_polygon_into_cells"]], "brails.utils.geo_tools": [[309, 2, 1, "", "GeoTools"]], "brails.utils.geo_tools.GeoTools": [[309, 3, 1, "", "haversine_dist"], [309, 3, 1, "", "is_box"], [309, 3, 1, "", "match_points_to_polygons"], [309, 3, 1, "", "mesh_polygon"], [309, 3, 1, "", "plot_polygon_cells"], [309, 3, 1, "", "write_polygon_to_geojson"]], "brails.utils.importer": [[310, 2, 1, "", "Importer"]], "brails.utils.importer.Importer": [[310, 3, 1, "", "get_class"], [310, 3, 1, "", "get_object"]], "brails.utils.input_validator": [[311, 2, 1, "", "InputValidator"]], "brails.utils.input_validator.InputValidator": [[311, 3, 1, "", "is_float"], [311, 3, 1, "", "is_image"], [311, 3, 1, "", "is_linestring"], [311, 3, 1, "", "is_multilinestring"], [311, 3, 1, "", "is_multipolygon"], [311, 3, 1, "", "is_point"], [311, 3, 1, "", "is_polygon"], [311, 3, 1, "", "is_valid_geometry"], [311, 3, 1, "", "validate_coordinates"]], "brails.utils.inventory_validator": [[312, 2, 1, "", "InventoryValidator"]], "brails.utils.inventory_validator.InventoryValidator": [[312, 3, 1, "", "is_inventory"], [312, 3, 1, "", "validate_inventory"]], "brails.utils.model_utils": [[313, 2, 1, "", "ModelUtils"]], "brails.utils.model_utils.ModelUtils": [[313, 3, 1, "", "get_model_path"]], "brails.utils.plot_tools": [[314, 2, 1, "", "PlotTools"]], "brails.utils.plot_tools.PlotTools": [[314, 3, 1, "", "show_predictions"]], "brails.utils.segmentation_utils": [[315, 6, 1, "", "create_overlaid_image"], [315, 6, 1, "", "decode_segmap"]], "brails.utils.spatial_join_methods": [[317, 0, 0, "-", "base"], [318, 0, 0, "-", "distance_based_point_matcher"], [319, 0, 0, "-", "get_points_in_polygons"], [320, 0, 0, "-", "get_points_near_polygons"]], "brails.utils.spatial_join_methods.base": [[317, 2, 1, "", "SpatialJoinMethods"]], "brails.utils.spatial_join_methods.base.SpatialJoinMethods": [[317, 3, 1, "", "execute"], [317, 3, 1, "", "join_inventories"]], "brails.utils.spatial_join_methods.distance_based_point_matcher": [[318, 2, 1, "", "DistanceBasedPointMatcher"]], "brails.utils.spatial_join_methods.get_points_in_polygons": [[319, 2, 1, "", "GetPointsInPolygons"]], "brails.utils.spatial_join_methods.get_points_near_polygons": [[320, 2, 1, "", "GetPointsNearPolygons"]], "brails.utils.unit_converter": [[321, 2, 1, "", "UnitConverter"]], "brails.utils.unit_converter.UnitConverter": [[321, 3, 1, "", "convert_area"], [321, 3, 1, "", "convert_length"], [321, 3, 1, "", "convert_unit"], [321, 3, 1, "", "convert_weight"], [321, 3, 1, "", "get_supported_units"], [321, 3, 1, "", "get_unit_type"], [321, 3, 1, "", "normalize_unit"], [321, 3, 1, "", "parse_units"], [321, 3, 1, "", "unit_valid"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:function"}, "terms": {"": [14, 42, 51, 66, 69, 96, 118, 164, 179, 182, 215, 218, 224, 241, 242, 248, 257, 259, 285, 302, 304, 305, 306, 308, 309, 320, 326, 330, 332, 335], "0": [0, 1, 7, 11, 51, 53, 55, 57, 59, 60, 62, 63, 65, 66, 69, 70, 72, 74, 83, 96, 98, 99, 101, 105, 107, 118, 119, 123, 124, 127, 133, 145, 146, 149, 164, 166, 168, 170, 172, 173, 175, 176, 178, 179, 182, 183, 185, 187, 202, 204, 206, 208, 209, 211, 212, 214, 215, 218, 219, 221, 223, 224, 241, 246, 248, 253, 256, 257, 259, 261, 271, 304, 308, 331, 332], "000": 321, "0001": [51, 59, 164, 172, 208, 224], "001": [66, 83, 96, 99, 179, 215], "01": 331, "022": 332, "02409": 332, "03": [126, 148, 332], "045": 332, "05": [69, 70, 96, 182, 183, 218, 219, 242], "05072021484375": 332, "06": 252, "060014213001020": 332, "060014216002007": 332, "060014223003010": 332, "060014225001003": 332, "060014239021001": 332, "06001_34778": 332, "06001_548222": 332, "06001_559590": 332, "06001_730116": 332, "06001_813170": 332, "07": [123, 124, 145, 146], "08": 83, "09": 330, "1": [0, 1, 11, 14, 17, 19, 39, 51, 62, 63, 64, 65, 66, 69, 70, 72, 74, 84, 90, 96, 98, 107, 112, 118, 123, 124, 127, 129, 132, 135, 145, 146, 149, 151, 164, 175, 176, 177, 178, 179, 182, 183, 185, 187, 192, 199, 211, 212, 213, 214, 215, 218, 219, 221, 223, 224, 226, 241, 242, 248, 256, 258, 259, 261, 266, 271, 289, 304, 308, 314, 321, 326, 327, 328, 329, 330, 331, 332, 336, 338], "10": [69, 72, 96, 98, 107, 119, 127, 149, 182, 185, 192, 218, 221, 289, 321, 326, 328, 329, 331, 336], "100": [0, 1, 69, 76, 96, 140, 141, 182, 192, 218, 226, 231, 321, 328, 329], "1000": [0, 62, 63, 113, 114, 127, 135, 149, 175, 176, 211, 212, 266, 308], "1004": 332, "101": [113, 114, 134, 266], "102": 119, "1024": [112, 253, 255], "103": 257, "1034449096679": 332, "106": 332, "10606032": 336, "106855": 321, "1076": 321, "10802": 331, "10b": 243, "11": [119, 289, 327], "112": [119, 131], "1129": 326, "116": 257, "1181": 330, "12": [119, 253, 257, 304, 326, 332], "120": 119, "122": [119, 326, 330, 331, 332], "123": 257, "128": [0, 134], "13": [326, 331], "1326": [326, 330], "133": 119, "13333": [326, 332], "14": [70, 131, 183, 219, 239, 331], "140": 119, "143": 119, "14492": 306, "148": 331, "1494": [326, 330], "15": [119, 326], "150": [112, 119], "152": [134, 266], "153": 119, "1539": 332, "1554": [326, 330], "15774": 306, "1592": 332, "16": [131, 135, 226, 239, 253], "160": 119, "16019d7e3df5f24257cddd939b257f8d": [140, 141], "160262": 332, "1621843": [333, 335], "163": 119, "165": 332, "1675": 326, "17": [326, 330], "170": 119, "173": 119, "17479": 332, "1773": 332, "1784": 331, "179966": 332, "18": [113, 134, 266], "180": [119, 311], "184": 119, "1866": [326, 332], "189018": 332, "19": [326, 331], "190": 119, "1939": 332, "194": 119, "194753": 332, "195": 332, "1954": 332, "1969": 1, "1970": 1, "1975": 331, "19786631e330df9f3622e5402b4a419a263a2c80": 253, "1979": 1, "1980": 1, "1989": [1, 332], "1990": 1, "1992": 332, "1999": 1, "1e": [51, 69, 70, 72, 83, 96, 98, 164, 182, 183, 185, 218, 219, 221, 224, 242, 252], "1swb": 332, "1x": 256, "1x3xhxw": 259, "1xcxhxw": 259, "1xhxw": 259, "2": [1, 60, 63, 66, 84, 107, 112, 123, 124, 127, 128, 135, 145, 146, 149, 150, 173, 176, 179, 192, 199, 209, 212, 215, 226, 258, 261, 263, 289, 311, 321, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338], "20": [0, 69, 96, 119, 182, 192, 218, 261, 327, 330], "200": [119, 244, 326, 330, 332], "2000": 1, "2003": [127, 149], "2009": 1, "2010": 1, "2013": [126, 148], "2017": 338, "2018": [0, 1], "2020": 336, "2024": [331, 336], "2025": [332, 338], "204": 119, "2048": [112, 258], "21": [326, 327, 330], "212": 119, "2131111": [333, 335], "214": 119, "22": 332, "220": 119, "2204": 321, "224": [57, 74, 119, 170, 187, 206, 223, 242], "225": [57, 74, 170, 187, 206, 223], "22733": 306, "229": [57, 74, 170, 187, 206, 223], "23": [327, 330], "230": 119, "23236": 330, "2341": 332, "235": 119, "236440": 331, "239": 332, "24": [326, 330, 331, 332], "240": 321, "24068": 330, "245": 119, "249638045616": [326, 330], "249704555083": [326, 330], "249751291732": [326, 330], "249817801199": [326, 330], "25": [51, 119, 164, 224, 246, 330], "250": 119, "2500": 321, "251349037992": [326, 330], "251381955857": [326, 330], "251516845084": [326, 330], "251549765644": [326, 330], "2534638": 332, "2534705": 332, "2534913": 332, "253494": 332, "2535403": 332, "253547": 332, "2535494": 332, "2535939": 332, "2535946": 332, "2535993": 332, "2536127": 332, "2538454": [326, 332], "2538636": [326, 332], "2538841": [326, 332], "2539358": [326, 332], "2539784": [326, 332], "2540264": [326, 332], "2540337": [326, 332], "2540379": [326, 332], "255": [119, 259], "256": [112, 253, 254, 255, 257, 259], "2582": 331, "260463864989": 330, "260480216124": 330, "260597977173": 330, "260614329206": 330, "262559": 332, "2625592": 332, "2654134": 332, "2654248": 332, "2654737": 332, "2654851": 332, "2669": 331, "27": 326, "27000": 332, "2743469": [326, 332], "2743673": [326, 332], "2743867": [326, 332], "2743897": [326, 332], "2743974": 332, "2744387": [326, 332], "2744416": [326, 332], "2744612": [326, 332], "2744816": [326, 332], "27705": 332, "278": 331, "27968": 306, "2799116": 332, "279912": 332, "28": [131, 257], "28236720333845": 326, "2823711059354": 326, "28253856754118": 326, "28253945956331": 326, "28259568844234": 326, "28259869901714": 326, "2831763030742": 326, "2831818391027": 326, "2832593562512": 326, "2832648922797": 326, "28404": [326, 330], "286804056442": 330, "286829349408": 330, "286942660203": 330, "286967954066": 330, "29": 332, "2927717": 332, "292788": 332, "2928486": 332, "2928649": 332, "29469": 326, "2973": [326, 332], "2989": [326, 332], "2d": [63, 69, 96, 176, 182, 212, 218, 261, 315], "2snb": 332, "2swb": 332, "3": [7, 51, 62, 63, 66, 84, 107, 112, 119, 135, 164, 175, 176, 179, 199, 211, 212, 215, 224, 242, 244, 246, 253, 254, 255, 289, 304, 311, 315, 321, 326, 327, 328, 329, 331, 332], "30": [127, 149, 306], "300": [0, 190], "306": 332, "31": 119, "32": [114, 135, 192, 239, 248, 321], "320524": 332, "322763": 331, "3249": 331, "32k": 243, "336px": 239, "3389": 336, "34": [134, 266], "341": 331, "3413333333333333": 248, "35": [69, 96, 182, 218, 246], "350": 332, "35547": [326, 332], "359933": 332, "360": [127, 149], "37": [326, 330, 331, 332], "375": [246, 257], "3753899307251": 332, "378037": 332, "384": 192, "389506": 332, "391041671": 321, "392": 332, "395": 257, "3d": [69, 96, 182, 218], "3x3": 112, "3xhxw": 257, "4": [1, 51, 60, 63, 84, 107, 119, 135, 164, 173, 176, 209, 212, 224, 242, 253, 259, 289, 304, 314, 326, 327, 328, 329, 330, 331, 332], "40": 327, "406": [57, 74, 170, 187, 206, 223], "4096": 112, "41": 119, "419571": 331, "42": 331, "42452141999999": 331, "425334": 331, "4255108090909": 331, "42639508666667": 331, "42705018181817": 331, "4326": [289, 309], "435": 332, "43521675714284": 331, "4411": 331, "45": [69, 96, 182, 218], "456": [57, 74, 170, 187, 206, 223], "4654": 331, "473584913": 332, "474705763": 332, "474740175": 332, "475206003": 332, "475445345": 332, "479": 332, "48": 332, "485": [57, 74, 170, 187, 206, 223], "4d": [69, 96, 182, 218], "4o": [197, 233], "4th": 331, "5": [1, 11, 63, 65, 69, 72, 84, 96, 98, 107, 119, 123, 124, 145, 146, 176, 178, 182, 185, 192, 212, 214, 218, 221, 289, 309, 314, 315, 321, 329, 332], "50": [0, 11, 113, 119, 134, 192, 226, 266, 332], "500": 11, "51": 119, "51156": 321, "512": [57, 74, 112, 170, 187, 206, 223], "5281": 336, "53": 257, "558706": 336, "56": 131, "56645584106445": 332, "57": 257, "58": 257, "59": 332, "5d": [69, 96, 182, 218], "5k": 243, "5th": 309, "6": [1, 14, 19, 39, 42, 63, 107, 112, 119, 133, 135, 176, 212, 289, 314, 326, 330, 332, 336], "61": 119, "6226218487757": 321, "625": 332, "635": 332, "64": [192, 242, 248, 256, 259, 266], "6506": 332, "65364074707031": 332, "6666": [326, 330], "675": 257, "7": [63, 107, 119, 176, 212, 248, 289], "70": 119, "71": 119, "71405070861817": 332, "72": [0, 332], "739": 332, "76": 330, "768": 253, "77": 241, "8": [0, 63, 76, 107, 112, 119, 131, 176, 212, 226, 231, 241, 243, 246, 253, 289, 327, 328, 329], "80": [53, 119, 166, 202], "8084": 321, "81000": 332, "82": [119, 331], "849vvp4w": 332, "849vvpcg": 332, "849vvphp": 332, "849vvpjw": 332, "849vvpvc": 332, "8512103598022": 332, "8517353439222": [326, 330], "8518000117672": [326, 330], "8518085710136": [326, 330], "8518732380851": [326, 330], "8549859": 332, "854993": 332, "8550463": 332, "8550534": 332, "8564399": 332, "8564404": 332, "856443": 332, "8564531": 332, "8564711": 332, "856479": 332, "85648153": 332, "8564912": 332, "8565177": 332, "8565272": 332, "8565277": 332, "8599": 331, "863126736093584": 326, "86313236995723": 326, "86314179854076": 326, "86314364715192": 326, "86319887333546": 326, "86320635580323": 326, "86590688571429": 331, "86730380000001": 331, "8673577272146": 326, "86735994820125": 326, "86748674209271": 326, "86748896307548": 326, "869326593333334": 331, "86981550909091": 331, "870170718181825": 331, "8720097": [326, 332], "8720143": [326, 332], "8720287": [326, 332], "8720305": [326, 332], "8720353": [326, 332], "8720391": [326, 332], "872097621": 332, "8721725": [326, 332], "8721826": [326, 332], "8762541": 332, "8762696": 332, "8763047": 332, "8763201": 332, "8783233546667": 330, "8783452637543": 330, "8783862371837": 330, "8784081469617": 330, "879116732": 332, "879117": 332, "8794214649434": 330, "8794505676668": 330, "8794971468902": 330, "8795262510017": 330, "88": 248, "8821623": [326, 332], "8821659": [326, 332], "882245": [326, 332], "8822459": [326, 332], "882252355": 332, "8822577": [326, 332], "882258": [326, 332], "8823667": [326, 332], "8823889": [326, 332], "886": 332, "8918428029327": [326, 330], "8918864620566": [326, 330], "8919222669851": [326, 330], "891965925353": [326, 330], "894081": 332, "894081399": 332, "9": [63, 83, 107, 119, 127, 149, 176, 212, 289], "90": 311, "9004509815979": 332, "92": 119, "925": 330, "93": 306, "9361": 332, "93944549560547": 332, "943": 332, "95": 248, "958384": 332, "96161651611328": 332, "998": 331, "999": 83, "A": [0, 1, 11, 14, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 46, 51, 62, 70, 71, 78, 80, 83, 84, 97, 164, 175, 183, 184, 192, 199, 211, 219, 220, 224, 231, 235, 237, 239, 241, 242, 248, 257, 259, 261, 278, 280, 282, 285, 287, 289, 291, 293, 299, 301, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 325, 334, 336, 338], "AND": [0, 1, 338], "AS": [0, 1, 338], "And": 243, "As": [326, 332], "BE": [0, 1, 338], "BUT": [0, 1, 338], "BY": [0, 1, 338], "Be": 84, "By": 330, "FOR": [0, 1, 338], "For": [0, 1, 3, 11, 46, 69, 71, 96, 97, 182, 184, 218, 220, 259, 261, 320, 331, 332, 334], "IF": [0, 1, 338], "IN": [0, 1, 338], "If": [0, 1, 11, 51, 63, 78, 80, 107, 111, 113, 114, 123, 124, 134, 145, 146, 164, 176, 192, 212, 224, 226, 237, 239, 248, 257, 259, 266, 280, 282, 287, 289, 291, 301, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 317, 321, 327], "In": [311, 326, 330, 331, 332], "It": [0, 1, 51, 63, 76, 78, 80, 123, 124, 145, 146, 164, 176, 212, 224, 239, 262, 282, 285, 293, 304, 308, 310, 311, 314, 328, 330, 331, 333], "NO": [0, 1, 332, 338], "NOT": [0, 1, 338], "No": [333, 335], "Not": 237, "OF": [0, 1, 338], "ON": [0, 1, 338], "OR": [0, 1, 338], "On": 0, "One": [0, 21], "SUCH": [0, 1, 338], "THE": [0, 1, 338], "TO": [0, 1, 338], "That": [0, 1, 331], "The": [0, 1, 5, 7, 11, 38, 46, 49, 51, 60, 63, 64, 69, 71, 72, 78, 80, 84, 96, 97, 98, 123, 124, 145, 146, 164, 173, 176, 177, 182, 184, 185, 192, 193, 197, 209, 212, 213, 218, 220, 221, 224, 226, 231, 233, 239, 241, 242, 243, 248, 257, 259, 261, 264, 278, 280, 285, 287, 289, 291, 293, 299, 301, 304, 305, 306, 308, 309, 310, 311, 312, 314, 317, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338], "There": [0, 63, 123, 124, 145, 146, 176, 212, 242, 326, 327, 331, 332], "These": [0, 63, 176, 212, 259, 325, 331], "To": [17, 49, 193, 197, 226, 233, 243, 326, 327, 328, 329, 330, 336], "WITH": 332, "With": [0, 1, 69, 96, 182, 218, 331], "_": 332, "__data_parallel_replicate__": [72, 98, 185, 221], "__getitem__": 105, "__init__": [127, 149, 164, 224], "__iter__": 107, "__len__": [105, 107], "__main__": [326, 327, 328, 329, 330, 332], "__name__": [326, 327, 328, 329, 330, 332], "__repr__": 310, "_join_implement": [318, 319, 320], "_prediction_result": [0, 1], "_slavepipebas": [71, 97, 184, 220], "_synchronizedbatchnorm": [69, 71, 96, 97, 182, 184, 218, 220], "abc": [5, 9, 40, 193, 228, 229, 278, 283, 317, 330], "about": [1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 55, 168, 204, 304, 308, 326, 333], "abov": [0, 1, 62, 175, 211, 331, 338], "abstract": [5, 7, 9, 40, 71, 97, 105, 184, 193, 220, 228, 229, 278, 283, 310, 317, 330], "acceler": [69, 96, 182, 218], "accept": [63, 123, 124, 145, 146, 176, 212], "access": [304, 310, 327], "accident": 328, "accompani": [326, 332], "accord": [0, 253, 306], "accordingli": 1, "account": 325, "accur": [51, 164, 224], "accuraci": [118, 192, 239, 326], "acgtyr": [70, 183, 219], "acknowledg": 333, "across": [69, 96, 182, 218, 304, 308, 310, 321, 326], "act": 252, "act_lay": 253, "activ": [1, 59, 172, 208, 252, 253, 254, 255, 256, 258, 326], "actual": 1, "ad": [69, 96, 182, 218, 253, 304, 305], "adam": 336, "adamw": [51, 66, 83, 164, 179, 215, 224], "adapt": [60, 173, 209], "add": [0, 1, 40, 72, 98, 118, 127, 149, 185, 221, 258, 304, 305, 330], "add_argu": [326, 327, 328, 329, 330, 332], "add_asset": 304, "add_asset_coordin": 304, "add_asset_featur": 304, "add_asset_features_from_csv": 304, "add_decomposed_rel_po": 253, "add_default": 32, "add_featur": [289, 304], "add_features_to_asset": 14, "add_imag": 305, "add_model_predict": 304, "addgaussiannois": [127, 149], "addgaussianpoissonnois": [127, 149], "addit": [14, 17, 19, 39, 40, 46, 289, 301, 330], "addition": [42, 289, 304], "additional_featur": 304, "additional_properti": 305, "address": 327, "addspecklenois": [127, 149], "ade20k": 119, "adjust": [42, 314], "advanc": 257, "advantag": 330, "advis": [0, 1, 338], "advprop": [62, 63, 175, 176, 211, 212], "aerial": [231, 235, 326, 327], "aerial_im": 327, "affin": [69, 72, 96, 98, 182, 185, 218, 221], "after": [1, 69, 71, 72, 78, 97, 98, 182, 184, 185, 192, 218, 220, 221, 253, 258, 308], "afterward": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271], "again": [107, 334], "against": 192, "agg": 244, "agg_method": 244, "aggregate_predict": 244, "agment": 11, "ahead": [72, 98, 185, 221], "ahsan": 336, "aim": 38, "alameda": 330, "algorithm": [325, 333], "alia": [63, 126, 148, 176, 212, 321], "alias": [242, 321], "alias_multinomi": [122, 144], "aliasmethod": [126, 148], "all": [0, 1, 53, 55, 58, 59, 60, 63, 64, 66, 69, 70, 71, 72, 74, 96, 97, 98, 105, 107, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 168, 171, 172, 173, 176, 177, 179, 182, 183, 184, 185, 187, 202, 204, 207, 208, 209, 212, 213, 215, 218, 219, 220, 221, 223, 241, 242, 252, 253, 254, 255, 258, 261, 262, 266, 271, 304, 305, 308, 310, 311, 314, 321, 326, 329, 330, 331, 338], "allow": [76, 80, 258, 259, 301, 308, 321, 330, 332], "allow_mh_only_for_res2": 42, "along": [1, 105, 314], "alongsid": 314, "alpha": [127, 149], "alreadi": [257, 259, 305], "also": [0, 51, 63, 69, 70, 76, 84, 96, 123, 124, 145, 146, 164, 176, 182, 183, 212, 218, 219, 224, 262, 304, 311, 326, 332], "although": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271], "alwai": [0, 107, 326], "ambigu": [259, 304], "amg": 260, "among": [72, 98, 185, 221, 331], "amount": 0, "an": [0, 1, 3, 5, 7, 9, 11, 14, 17, 19, 39, 40, 46, 51, 62, 63, 69, 71, 72, 78, 80, 96, 97, 98, 105, 107, 123, 124, 127, 145, 146, 149, 164, 175, 176, 182, 184, 185, 192, 193, 211, 212, 218, 220, 221, 224, 226, 237, 239, 241, 242, 246, 248, 258, 259, 261, 278, 280, 282, 283, 285, 287, 289, 291, 293, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336], "analys": 331, "analysi": [127, 149, 289, 307, 309], "analyz": [51, 164, 224, 326, 327, 332], "anchor": [58, 60, 74, 171, 173, 187, 207, 209, 223], "anchor_box": [60, 173, 209], "anchor_config": [60, 173, 209], "anchor_scal": [60, 173, 209], "angl": 78, "angle_rang": [127, 149], "ani": [0, 1, 7, 51, 63, 72, 80, 98, 123, 124, 140, 141, 142, 145, 146, 164, 176, 185, 192, 212, 221, 224, 246, 248, 257, 258, 261, 282, 285, 287, 291, 304, 305, 306, 308, 310, 311, 312, 314, 320, 326, 327, 331, 334, 335, 338], "ann": [55, 168, 204], "annot": [55, 58, 66, 168, 171, 179, 204, 207, 215, 314], "annotation_fil": [55, 168, 204], "anoth": [107, 304, 321], "ant": 192, "anti": 242, "apart": 0, "api": [282, 293, 301, 307, 308, 327, 328, 329, 333, 334], "api_endpoint_url": 308, "api_help": 308, "api_kei": [189, 190, 197, 233, 282, 327, 328, 329], "api_key_dir": [327, 328, 329], "api_key_path": 327, "api_tool": 308, "apidoc": [333, 334], "apikei": [327, 328, 329], "appdata": 330, "appeal": [307, 314], "append": [3, 304], "appli": [62, 69, 96, 127, 149, 175, 182, 192, 211, 218, 256, 304, 308, 321, 327, 328], "applic": [3, 242, 289, 313, 328, 329, 330, 331, 333, 334, 336], "apploc": 333, "apply_box": 263, "apply_boxes_torch": 263, "apply_coord": 263, "apply_coords_torch": 263, "apply_imag": 263, "apply_image_torch": 263, "approach": [0, 330], "appropri": 330, "approxim": 0, "ar": [0, 1, 51, 63, 69, 72, 78, 80, 96, 98, 107, 118, 123, 124, 145, 146, 164, 176, 182, 185, 192, 193, 212, 218, 221, 224, 231, 237, 239, 242, 256, 257, 259, 280, 289, 301, 304, 308, 309, 310, 311, 313, 314, 320, 321, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338], "arbitrari": [0, 63, 123, 124, 145, 146, 176, 212], "arcgi": [307, 308], "arcgisapi_service_help": 307, "arcgisapiservicehelp": [307, 308], "arch": 112, "architectur": [1, 51, 164, 192, 224, 239], "area": [55, 168, 204, 248, 278, 283, 289, 293, 301, 302, 306, 307, 308, 309, 321, 326, 330], "area_from_rl": 261, "area_thresh": 261, "arearng": [55, 168, 204], "arg": [5, 7, 9, 11, 14, 17, 19, 39, 40, 46, 51, 60, 62, 63, 64, 69, 71, 78, 80, 83, 96, 97, 107, 111, 113, 114, 123, 124, 127, 134, 140, 142, 145, 146, 149, 173, 175, 176, 177, 182, 184, 193, 209, 211, 212, 213, 218, 220, 226, 237, 239, 242, 253, 258, 261, 264, 266, 278, 280, 282, 283, 285, 287, 289, 291, 293, 299, 301, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 317, 321, 326, 327, 328, 329, 330, 332], "argpars": [326, 327, 328, 329, 330, 332], "args__": [76, 164, 192, 199, 224, 231], "argument": [1, 63, 72, 98, 105, 107, 123, 124, 145, 146, 176, 185, 212, 221, 248, 254, 255, 256, 257, 259, 287, 291, 301, 326, 327, 328, 329, 330, 332], "argumentpars": [326, 327, 328, 329, 330, 332], "arial_process": 227, "arialfilt": 330, "arialprocess": 228, "aris": [0, 1, 338], "around": [74, 187, 223, 231, 243, 248, 261], "arr": 14, "arrai": [7, 55, 60, 84, 119, 127, 149, 168, 173, 193, 204, 209, 246, 248, 259, 263, 315], "as_numpi": [99, 108], "as_vari": 108, "asce_hazard_data_scrap": 275, "aspect": [308, 314], "aspectaware_resize_pad": [74, 187, 223], "assembl": 105, "asserttensorclos": [73, 99, 186, 222], "assess": [17, 38], "assessor": 330, "asset": [9, 11, 14, 17, 19, 38, 39, 40, 46, 280, 282, 283, 287, 289, 291, 304, 308, 317, 326, 327, 328, 329, 330, 331, 332, 333, 334], "asset_id": 304, "asset_inventori": [303, 330, 331], "assetinventori": [9, 11, 14, 17, 19, 39, 40, 46, 278, 280, 282, 283, 285, 287, 289, 291, 293, 301, 304, 307, 312, 317, 326, 327, 328, 330, 331, 332, 334], "assetinvetori": 9, "assign": [0, 1, 72, 98, 185, 221, 304], "associ": [285, 293, 299, 301, 304, 305, 306, 314, 318, 320, 327], "assset": 304, "assum": [289, 308, 312], "assumpt": [1, 38, 308], "ast": 329, "async_copy_to": 101, "atlant": 38, "atol": [99, 261], "atrribut": 293, "attempt": [49, 197, 226, 233, 235, 328], "attend": 258, "attent": [0, 59, 172, 208, 242, 253, 258], "attention_downsample_r": 258, "attention_modul": 130, "attention_util": 81, "attentionmodule_pr": 131, "attentionmodule_stage0": 131, "attentionmodule_stage1": 131, "attentionmodule_stage1_cifar": 131, "attentionmodule_stage2": 131, "attentionmodule_stage2_cifar": 131, "attentionmodule_stage3": 131, "attentionmodule_stage3_cifar": 131, "attentionpool2d": 242, "attn": 253, "attn_mask": 242, "attribut": [11, 14, 17, 19, 39, 42, 46, 51, 62, 63, 78, 80, 123, 124, 140, 142, 145, 146, 175, 176, 211, 212, 237, 239, 282, 285, 287, 289, 291, 293, 301, 304, 305, 306, 308, 310, 314, 318, 331], "attribute_nam": 314, "attributes_": [164, 224], "attributes__": [192, 199, 231, 235], "attrmap": 302, "aug": [244, 331], "augment": [57, 170, 192, 206], "augmentfil": 330, "authent": 282, "author": [70, 183, 219, 335], "auto": [38, 321], "auto_hu_nj": 20, "auto_popul": [19, 38], "autograd": [63, 69, 96, 123, 124, 145, 146, 176, 182, 212, 218], "autom": [0, 80], "automat": [1, 63, 80, 123, 124, 145, 146, 176, 212, 321, 330], "automatic_mask_gener": 247, "automl": [60, 173, 209], "avail": [38, 78, 84, 192, 239, 241, 304, 306, 307, 308, 310, 313, 316, 327, 328, 329, 330, 332, 337], "available_featur": [19, 32], "available_model": 241, "averag": [118, 129, 151, 242], "averagemet": [118, 129, 151], "avg_loss": 84, "avgjantemp": 39, "avgjantemp_kei": 39, "avgpool": 242, "avoid": [84, 243, 310, 330], "awai": 331, "ax": [127, 149, 246, 314], "axi": [84, 127, 149, 253], "b": [11, 14, 17, 19, 39, 46, 58, 99, 171, 207, 239, 253, 257, 258, 332], "b0": [62, 175, 211], "b950": 253, "bacetin": [326, 327, 332], "back": [71, 97, 184, 220], "backbon": [52, 165, 201], "background": [0, 259], "backoff": 308, "backward": [63, 123, 124, 145, 146, 176, 212], "balanc": 308, "bar": [266, 308], "barbaro": 336, "barf": 243, "base": [0, 3, 5, 7, 9, 11, 14, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 46, 49, 51, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 78, 80, 83, 90, 96, 97, 98, 99, 101, 105, 107, 112, 113, 114, 118, 119, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 164, 166, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 192, 193, 197, 199, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 231, 233, 235, 237, 239, 242, 243, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 271, 278, 280, 282, 283, 285, 287, 289, 291, 293, 299, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 330, 335], "base_fold": [140, 141], "base_imag": 315, "basedataset": 90, "basegeometri": 306, "basement": [19, 289], "basement_kei": 19, "basementtyp": 19, "basementtype_kei": 19, "basi": [330, 332], "basic": [261, 304, 326, 331, 332], "basic_clean": 243, "basic_lay": 130, "basicconv": 271, "batch": [11, 69, 70, 76, 80, 96, 101, 107, 182, 183, 192, 218, 219, 226, 231, 239, 254, 255, 257, 259, 261, 263], "batch_idx": 244, "batch_iter": 261, "batch_norm_epsilon": [63, 176, 212], "batch_norm_momentum": [63, 176, 212], "batch_per_gpu": 90, "batch_siz": [11, 66, 69, 76, 96, 107, 179, 182, 192, 215, 218, 226, 231, 239, 244, 261], "batched_input": 257, "batched_mask_to_box": 261, "batchnorm": [68, 70, 95, 181, 183, 217, 219], "batchnorm1d": [69, 96, 182, 218], "batchnorm2d": [69, 96, 182, 218], "batchnorm2dreimpl": [70, 183, 219], "batchnorm3d": [69, 96, 182, 218], "batchnorm_reimpl": [68, 181, 217], "batchsampl": 107, "batchsiz": [60, 173, 209], "bbox": 248, "bboxtransform": [60, 173, 209], "becaus": [0, 69, 96, 182, 218, 330], "bee": 192, "been": [259, 261, 334], "befor": [1, 80, 192, 237, 253, 257, 259], "beforehand": 0, "behav": [69, 96, 182, 218], "being": [51, 72, 98, 164, 185, 193, 221, 224, 243, 308, 309, 314, 332, 334], "belong": 321, "below": [0, 308, 326, 327, 331, 336], "berkelei": [306, 326, 328, 329, 330, 332], "best": [0, 127, 149, 259], "beta": [69, 83, 96, 182, 218], "better": [259, 326, 328, 331, 332], "between": [1, 62, 175, 211, 243, 261, 289, 304, 307, 309, 317, 319, 321, 326], "bgr": 259, "bia": [63, 64, 176, 177, 212, 213, 242, 271], "bid": 332, "bifpn": [59, 172, 208], "bilinear": 90, "bilinearres": [127, 149], "bim": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37], "bim_ap": 32, "bim_in": 32, "binari": [0, 1, 257, 259, 261, 314, 338], "binary_mask": 248, "blah": 330, "bldg_class": 21, "bldg_geom_subset": 11, "bldg_geometries_df": 11, "bldg_impu_subset": 11, "bldg_inde_subset": 11, "bldg_prel_subset": 11, "bldg_properties_df": 11, "bldg_properties_encod": 11, "bldgtype": 332, "bleed": 337, "blha": 330, "blob": [60, 173, 209, 253], "block": [62, 63, 113, 114, 134, 175, 176, 211, 212, 253, 266, 330], "block_arg": [62, 175, 211], "blockarg": [62, 63, 175, 176, 211, 212], "blockdecod": [63, 176, 212], "blocks_arg": [62, 63, 175, 176, 211, 212], "blog": [126, 148], "blur": [127, 149], "bmp": 311, "bn": [112, 271], "bool": [51, 62, 76, 84, 107, 111, 113, 114, 134, 140, 141, 142, 143, 164, 175, 192, 211, 224, 226, 231, 241, 242, 253, 254, 255, 257, 258, 259, 261, 262, 266, 289, 304, 305, 308, 309, 311, 312, 314, 321], "boolean": [55, 63, 69, 96, 123, 124, 145, 146, 168, 176, 182, 204, 212, 218, 304, 311], "boolean_str": [66, 179, 215], "both": [80, 105, 256, 263, 293, 314, 327, 336], "bottleneck": [62, 175, 211, 242], "bottom": 314, "bound": [289, 293, 301, 302, 304, 306, 308], "boundari": [285, 287, 289, 291, 293, 301, 306, 308, 326], "boundaryregion": 326, "boundingbox": 246, "box": [7, 60, 173, 209, 246, 248, 254, 255, 256, 257, 259, 261, 263, 289, 293, 302, 304, 306, 308, 309], "box_nms_thresh": 248, "box_threshold": 246, "box_xyxi": 261, "box_xyxy_to_xywh": 261, "bpe": 243, "bpe_path": 243, "bpe_simple_vocab_16e6": 243, "bpoli": [308, 309], "brail": [0, 1, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338], "brails2r2dmap": 289, "brails_download_imag": 327, "brails_filt": 328, "brails_footprint": 326, "brails_nsi": 332, "brails_street_processor": 329, "brailserror": [3, 310], "brailsno": 330, "brailsplusplu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "brailsrooftyp": 330, "bridg": [287, 304, 308], "bring": 325, "bsd": [326, 327, 328, 329, 330, 331, 332, 333, 338], "buffer": 304, "buid": 38, "buidl": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37], "buil": 278, "build": [0, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 49, 51, 63, 78, 80, 164, 176, 199, 212, 224, 226, 237, 278, 280, 282, 285, 289, 293, 299, 301, 304, 325, 327, 328, 329, 330, 331, 332, 333, 334], "build_all_layer_point_grid": 261, "build_attention_mask": 242, "build_decod": 112, "build_encod": 112, "build_model": [242, 246], "build_point_grid": 261, "build_sam": 247, "build_sam_hq": 247, "build_sam_hq_vit_b": 250, "build_sam_hq_vit_h": 250, "build_sam_hq_vit_l": 250, "build_sam_vit_b": 249, "build_sam_vit_h": 249, "build_sam_vit_l": 249, "building_class": 21, "building_material_llm": 47, "buildingclassruleset": 20, "buildingheight": [78, 326, 330, 332], "buildinginventori": 278, "buildingmaterialllm": 49, "buildingtyp": 39, "buildingtype_kei": 39, "built": [3, 7, 63, 69, 96, 176, 182, 212, 218, 246, 301, 330, 334, 336], "busi": [0, 1, 338], "bx": 256, "bx1xhxw": [257, 259], "bx4": [257, 259, 263], "bxc": [257, 259], "bxcxhxw": [257, 259, 263], "bxn": [257, 259], "bxnx": 256, "bxnx2": [257, 259], "byte": [243, 304], "bytearrai": 304, "bytes_to_unicod": 243, "c": [0, 1, 69, 96, 127, 140, 141, 149, 182, 218, 253, 257, 259, 332, 338], "c1": 112, "c1deepsup": 112, "c1xc2x": 261, "ca": [306, 326, 327, 328, 329, 330, 332], "cach": [80, 241], "calc": 1, "calc_iou": [58, 171, 207], "calcul": [63, 69, 80, 84, 96, 176, 182, 212, 218, 253, 259, 261, 304, 309], "calculate_all_dist": 155, "calculate_stability_scor": 261, "california": [0, 1, 330, 338], "call": [0, 53, 58, 59, 60, 62, 63, 64, 66, 69, 70, 71, 72, 96, 97, 98, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 175, 176, 177, 179, 182, 183, 184, 185, 193, 202, 207, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 237, 239, 242, 252, 253, 254, 255, 257, 258, 262, 266, 271, 312], "callabl": [83, 140, 141, 142, 143, 241, 306, 308], "callback": [71, 72, 97, 98, 184, 185, 220, 221], "callbackcontext": [72, 98, 185, 221], "caller": [5, 7, 278, 283], "cam_elev": 78, "camelev": 78, "camera": [1, 78, 282, 305], "can": [0, 1, 63, 71, 72, 76, 97, 98, 123, 124, 127, 145, 146, 149, 176, 184, 185, 212, 220, 221, 241, 257, 259, 304, 308, 310, 311, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337], "cannot": [107, 310, 311], "care": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271], "case": [3, 69, 96, 127, 149, 182, 218, 241, 330], "cat": [55, 168, 204, 261], "categor": [308, 314], "categori": [0, 1, 321], "categorize_and_split_cel": 308, "category_in_df_to_indic": 11, "catid": [55, 168, 204], "catnm": [55, 168, 204], "caus": [0, 1, 338], "cbfip": 332, "cd": [0, 1], "cecb": 22, "cecb_config": 22, "cell": [287, 291, 301, 308, 309, 330], "cellapproxim": 308, "cells_to_keep": 308, "cells_to_split": 308, "center": [127, 149, 328, 334], "center_crop": [127, 149], "center_crop_s": [127, 149], "centercrop": [127, 149], "centercropnumpi": [127, 149], "centroid": [304, 309, 320], "cerb": 23, "cerb_config": 23, "certain": [331, 334], "cetin": 336, "chang": [242, 328], "change_feature_nam": 304, "channel": [127, 149], "charact": 243, "characterist": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 289], "charl": 336, "check": [0, 51, 164, 224, 309, 311, 312, 321], "check_kei": [14, 17], "checkpoint": [0, 1, 241, 249, 250], "child": [69, 182, 218], "chimnei": 51, "chimney_detector": 47, "chimneydetector": [51, 329], "choos": [1, 63, 176, 212], "chosen": [0, 1, 328], "cifar": [136, 140], "cifar10": [140, 141], "cifar100inst": [140, 141], "cifar10inst": [140, 141], "cite": 333, "citi": 19, "city_kei": 19, "class": [1, 3, 5, 7, 9, 11, 14, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 46, 49, 51, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 78, 80, 83, 84, 90, 96, 97, 98, 99, 101, 105, 107, 112, 113, 114, 118, 119, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 164, 166, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 192, 193, 197, 199, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 231, 233, 235, 237, 239, 242, 243, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 270, 271, 278, 280, 282, 283, 285, 287, 289, 291, 293, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 330, 332, 334], "class_nam": 310, "class_num": 135, "class_to_cod": 246, "classes_list": [65, 66, 178, 179, 214, 215], "classes_num": 271, "classif": [58, 74, 76, 171, 187, 192, 199, 207, 223, 226, 231, 237, 239, 314], "classifi": [0, 1, 49, 59, 74, 76, 172, 187, 192, 197, 199, 208, 223, 226, 231, 233, 235, 237, 239, 329], "classifier_class": 329, "classmethod": [7, 62, 175, 211, 246, 317], "classtyp": [310, 330], "claus": 338, "clean": [321, 328], "clean_featur": [17, 19, 39], "clean_float": 304, "cleaner": 314, "cleanli": 304, "clear": 312, "click": 259, "clip": [199, 235, 237, 238, 239, 330], "clip_numberoffloor": 330, "clipbox": [60, 74, 173, 187, 209, 223], "clipclassifi": [49, 199, 235, 237, 238], "clipvit": 330, "clone": [0, 1], "close": [309, 311], "closest": [309, 320], "closur": 83, "cloud": 336, "cluster": 11, "cm": 321, "cm2": 321, "coco": [54, 167, 203], "coco_dir": [57, 66, 170, 179, 206, 215], "coco_encode_rl": 261, "cocodataset": [57, 170, 206], "code": [0, 1, 243, 326, 330, 331, 332, 334, 338], "codebas": 330, "coeffici": [51, 63, 164, 176, 212, 224], "col": 309, "colab": [325, 329], "collat": [57, 170, 206], "collect": [51, 71, 80, 97, 164, 184, 220, 224, 282, 305, 309], "colmap": 330, "color": [74, 118, 119, 187, 223, 259, 315], "colorencod": 118, "column": [304, 309, 331], "column_nam": 11, "com": [0, 1, 60, 70, 110, 111, 173, 183, 209, 219, 253, 308, 337], "com4": 331, "combin": [0, 63, 123, 124, 145, 146, 176, 212, 262], "combinedmaskdataset": [140, 142], "come": [259, 331], "comm": [68, 95, 181, 217], "comma": [0, 1], "command": [0, 1, 326, 327, 332], "commit": 328, "common": [69, 96, 182, 218, 251, 309, 319, 321, 334], "commun": [71, 97, 184, 220, 326, 333], "comp_coeff": [51, 164, 224], "compar": 326, "comparison": [51, 164, 224], "compat": [63, 123, 124, 145, 146, 176, 212, 289, 321], "complet": [192, 304, 330, 331], "complex": 330, "compon": [80, 333], "compos": [127, 149, 311], "compound_coef": [53, 59, 166, 172, 202, 208], "comput": [0, 53, 58, 59, 60, 63, 64, 66, 69, 70, 71, 96, 97, 112, 113, 114, 118, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 145, 146, 147, 150, 151, 166, 171, 172, 173, 176, 177, 179, 182, 183, 184, 202, 207, 208, 209, 212, 213, 215, 218, 219, 220, 239, 242, 252, 253, 254, 255, 258, 261, 262, 263, 266, 271, 307, 308, 309, 313, 327], "computation": 78, "compute_n_possible_world": 17, "compute_similar": 244, "con_mat": [84, 270], "concatdataset": 105, "concaten": [105, 261], "concept": 325, "conclus": 335, "concret": [317, 318, 319, 320], "concurr": 308, "condit": [0, 1, 55, 168, 204, 237, 239, 338], "conf": 323, "confer": [127, 149], "config": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 54, 86, 119, 127, 149, 167, 203], "config_fil": 119, "configr": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37], "configur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 51, 60, 164, 173, 209, 224, 239, 306], "confirm": 311, "conflict": 310, "conform": 311, "confus": 1, "connect": [0, 62, 63, 175, 176, 211, 212, 308], "cons_type_classifi": 47, "consequ": 332, "consequenti": [0, 1, 338], "consid": [311, 330], "consist": [0, 1, 84, 314, 321, 333], "consol": 305, "construct": [62, 76, 111, 113, 114, 134, 175, 211, 266, 289, 293, 304, 330], "construct_confusion_matrix_imag": [84, 270], "constructionclass": [14, 17], "constructionclass_kei": [14, 17], "constructiontypeclassifi": 75, "constructor": 330, "constyp": [331, 332], "constypeclassifi": 76, "consum": 78, "contact": [0, 1], "contain": [0, 1, 38, 51, 62, 63, 76, 78, 80, 105, 164, 175, 176, 192, 199, 211, 212, 224, 226, 231, 235, 237, 239, 241, 242, 248, 259, 283, 285, 287, 289, 291, 299, 301, 302, 304, 305, 307, 308, 309, 310, 311, 318, 319, 320, 326, 327, 331, 332, 334], "content": [311, 331], "content_value_infer": 43, "context": [63, 72, 98, 123, 124, 145, 146, 176, 185, 212, 221, 241], "context_length": [241, 242], "continu": [0, 1, 337], "contract": [0, 1, 338], "contrari": 331, "contribut": 326, "contributor": [0, 1, 326, 338], "control": [243, 262, 304], "conv2d": [63, 64, 176, 177, 212, 213], "conv2ddynamicsamepad": [63, 176, 212], "conv2dstaticsamepad": [64, 177, 213], "conv3x3_bn_relu": 112, "conv_channel": [59, 172, 208], "conv_out": 112, "convers": 321, "convert": [11, 57, 69, 170, 182, 206, 218, 241, 242, 289, 304, 306, 307, 311, 315, 321], "convert_area": 321, "convert_length": 321, "convert_model": [69, 182, 218], "convert_polygons_to_centroid": 304, "convert_unit": 321, "convert_weight": [242, 321], "convolut": [62, 63, 112, 127, 149, 175, 176, 211, 212, 242], "coord": [74, 187, 223, 246, 263], "coordin": [248, 256, 263, 280, 289, 302, 304, 306, 309, 311, 326, 330, 332], "coords_input": 256, "copi": [72, 84, 98, 185, 221, 304], "copy_id": [72, 98, 185, 221], "copyright": [328, 329, 333], "corner": 309, "correa": 336, "correct": [39, 311], "correl": [0, 11], "correspond": [63, 123, 124, 145, 146, 176, 212, 231, 237, 239, 243, 282, 289, 304, 306, 309, 314, 319], "corrmat": 11, "corrupt": 311, "cosine_anneal_schedul": 270, "cost": [289, 327], "count": [304, 308], "counti": [38, 330], "cover": [1, 308], "coverag": [243, 326], "cpu": [69, 96, 182, 192, 218, 239, 241], "cr": 304, "crap": 328, "creat": [0, 1, 59, 63, 64, 72, 76, 98, 172, 176, 177, 185, 208, 212, 213, 221, 301, 304, 305, 307, 309, 310, 314, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334], "create_correl": 11, "create_overlaid_imag": 315, "createindex": [55, 168, 204], "creation": [51, 164, 224, 334], "crit": 112, "criteria": 5, "criterion": [270, 318], "crop": [80, 127, 149, 248, 261, 314, 328, 329], "crop_box": [248, 261], "crop_imag": 314, "crop_n_lay": 248, "crop_n_points_downscale_factor": 248, "crop_nms_thresh": 248, "crop_overlap_ratio": 248, "crowd": [55, 168, 204], "crs84": 304, "csail_seg": [85, 119], "csail_segment": 85, "csail_segmentation_tool": 81, "csv": [0, 1, 304, 330, 331], "csv_root_fold": [140, 142], "ctx": [63, 72, 98, 123, 124, 145, 146, 176, 185, 212, 221], "cuda": [74, 126, 148, 187, 223, 246], "cummulative_s": 105, "cumsum": 105, "current": [0, 1, 63, 118, 123, 124, 129, 145, 146, 151, 176, 212, 226, 259, 289, 304, 321, 327], "custom": [3, 63, 72, 76, 98, 123, 124, 145, 146, 176, 185, 199, 212, 221, 304, 313, 314], "custom_model": 80, "custom_transform": [122, 144], "customdataparallel": [74, 187, 223], "customiz": 239, "cv": 248, "cxhxw": 259, "d": [69, 96, 105, 182, 218, 264], "d0": [66, 179, 215], "d4_chimneydetector": 51, "d4_garagedetector": 164, "d4_nfloordetector": 224, "d_model": 242, "damag": [0, 1, 17, 38, 237, 338], "damagedetection_streetlevel": 237, "data": [9, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 57, 63, 71, 72, 74, 76, 78, 80, 84, 86, 97, 98, 102, 123, 124, 141, 145, 146, 164, 170, 176, 184, 185, 187, 192, 206, 212, 220, 221, 223, 224, 226, 231, 261, 285, 287, 289, 291, 293, 299, 301, 302, 304, 306, 307, 308, 309, 310, 311, 326, 327, 328, 329, 330, 331, 332, 334, 338], "data_csv": [140, 142], "data_dir": [76, 226, 231], "data_parallel": [72, 98, 100, 185, 221], "data_sourc": 107, "data_tensor": 105, "databas": [326, 331, 334], "datafram": [78, 304], "dataload": [103, 192], "dataparallel": [69, 72, 74, 96, 98, 182, 185, 187, 218, 221, 223], "dataparallelwithcallback": [72, 98, 185, 221], "dataset": [11, 51, 54, 76, 86, 103, 107, 140, 141, 142, 143, 160, 164, 167, 192, 203, 224, 243, 268, 285, 299, 304, 326, 331, 332], "datatyp": 306, "de": [0, 1], "debug": [66, 179, 215], "dec_weight": 119, "decad": 1, "decent": 243, "decim": [78, 244], "decod": [63, 176, 212, 243, 262], "decode_box_output": [60, 173, 209], "decode_segmap": 315, "decoder_epoch_20": 119, "decompos": 253, "dedic": 327, "deep_sup_scal": 112, "deepen": 325, "def": [63, 123, 124, 145, 146, 176, 212, 326, 327, 328, 329, 330, 332], "default": [0, 1, 51, 55, 69, 76, 80, 84, 87, 96, 164, 168, 182, 192, 199, 204, 218, 224, 226, 231, 239, 241, 285, 287, 291, 293, 299, 301, 304, 313, 314, 315, 321, 326, 327, 332], "default_bp": 243, "default_filenam": 313, "default_load": [140, 142], "defin": [3, 5, 53, 58, 59, 60, 63, 64, 66, 70, 80, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 192, 193, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271, 278, 280, 282, 283, 285, 287, 289, 291, 293, 301, 302, 304, 305, 306, 308, 309, 311, 314, 317, 318, 319, 320, 321, 330], "definit": 304, "deform": [127, 149], "degenerated_to_sgd": 83, "degre": 309, "deierlein": 336, "deleg": 317, "demonstr": [326, 327, 328, 329, 330, 331, 332, 333], "denomin": [69, 96, 182, 218], "dens": 256, "dense_prompt_embed": [254, 255], "denseblock": 133, "depend": [248, 326], "depth": [63, 69, 78, 96, 176, 182, 212, 218, 253, 258, 282, 305], "depth_coeffici": [63, 176, 212], "depth_divisor": [63, 176, 212], "depthmap": [78, 282], "deriv": [0, 1, 304, 321], "desc": 308, "descent": 192, "describ": [0, 1, 38, 127, 149, 302, 308, 311, 325], "descript": [21, 306, 308, 313, 326, 327, 328, 329, 330, 332], "design": [199, 239, 285, 311, 314], "designlevel": 17, "designlevel_h": 39, "designlevel_h_kei": 39, "designlevel_kei": 17, "designsaf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "designwindspe": 39, "designwindspeed_kei": 39, "desir": [1, 321], "det": [59, 172, 208], "detail": [1, 63, 71, 97, 123, 124, 145, 146, 176, 184, 212, 220, 254, 255, 262, 305, 325, 326], "detect": [0, 1, 7, 51, 80, 81, 164, 224, 246, 265, 299, 311, 321, 332], "detection_dict": [7, 246], "detectionresult": 246, "detector": [51, 66, 164, 179, 215, 224], "detector_id": [7, 246], "detectron2": 80, "determiend": 257, "determin": [51, 71, 97, 164, 184, 220, 224, 237, 256, 285, 308, 309, 311, 329, 334], "dev": 101, "develop": [330, 332, 333, 334, 337], "deviat": [1, 69, 96, 182, 218], "devic": [69, 71, 72, 96, 97, 98, 101, 118, 119, 182, 184, 185, 192, 218, 220, 221, 239, 241, 242, 244, 246, 257, 259], "device_id": [72, 74, 98, 101, 185, 187, 221, 223], "df": 11, "dh": [60, 173, 209], "dict": [5, 7, 49, 51, 78, 80, 164, 189, 192, 193, 197, 199, 224, 226, 231, 233, 235, 237, 239, 242, 246, 248, 257, 261, 264, 282, 285, 287, 289, 291, 293, 301, 304, 305, 306, 308, 309, 310, 314, 321, 326, 330, 332], "dictgatherdataparallel": 101, "dictionari": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 51, 60, 78, 80, 164, 173, 192, 199, 209, 224, 226, 231, 235, 237, 239, 248, 257, 289, 304, 305, 308, 309, 310, 314, 321], "differ": [0, 1, 51, 69, 72, 76, 96, 98, 105, 164, 182, 185, 192, 218, 221, 224, 256, 261, 307, 310, 311, 321, 326, 329, 330, 332], "differenti": [63, 123, 124, 145, 146, 176, 212], "dilat": [63, 64, 176, 177, 212, 213, 271], "dilate_scal": 112, "dim": [0, 72, 98, 101, 185, 221, 253], "dimens": [0, 60, 69, 84, 96, 105, 173, 182, 209, 218, 259, 263], "dimension": [241, 304, 311], "dino": [7, 246], "dir_path": [5, 7, 78, 80, 305, 314, 328, 329], "direct": [0, 1, 338], "directli": [63, 123, 124, 145, 146, 176, 212, 257, 262, 314, 320, 328, 329, 330, 332, 337], "directori": [5, 7, 76, 78, 80, 192, 226, 231, 280, 299, 305, 310, 314, 315, 328, 330, 331, 332], "dirnam": [331, 332], "disambigu": 257, "disclaim": [0, 1, 338], "disconnect": [248, 261], "discret": [126, 148], "discuss": 325, "displai": [65, 74, 178, 187, 214, 223, 226, 266, 308, 314, 325], "distanc": [304, 309, 316, 318], "distance_based_point_match": 316, "distancebasedpointmatch": [316, 318], "distinct": [311, 331], "distribut": [0, 1, 69, 96, 103, 182, 218, 308, 338], "distributed_rank": 118, "divid": [60, 173, 209, 301, 308, 309], "dl": 38, "dl_ap": 38, "do": [0, 1, 259, 308, 328, 330, 332, 335], "document": [0, 1, 127, 149, 325, 333, 334, 338], "documentaion": [333, 334], "doe": [0, 1, 11, 78, 192, 289, 304, 308, 309, 311, 314, 327, 332], "doesn": 313, "doi": 336, "done": [0, 69, 96, 105, 182, 218, 226, 331, 332, 333], "door": [80, 334], "download": [0, 1, 51, 63, 80, 140, 141, 143, 164, 176, 192, 212, 224, 241, 266, 280, 282, 285, 301, 308, 313, 325, 326, 328, 329, 333], "download_all_attr_for_region": 308, "download_all_attr_from_api": 308, "download_attr_from_api": 308, "download_footprint": 326, "download_func": 308, "download_imag": 327, "download_root": 241, "download_url": [246, 313], "downloaded_data": 308, "downsample_r": 258, "downscal": 258, "draw": [107, 126, 148], "drawn": 107, "driven": 326, "drop": [62, 63, 107, 175, 176, 211, 212], "drop_connect": [63, 176, 212], "drop_connect_r": [62, 63, 175, 176, 211, 212], "drop_last": 107, "dropout": 133, "dropout_p": 133, "dropout_r": [63, 176, 212], "dtype": [60, 119, 173, 209, 242], "due": [308, 326, 331], "duplic": [248, 309, 310], "dure": [0, 51, 63, 69, 71, 76, 96, 97, 123, 124, 145, 146, 164, 176, 182, 184, 192, 212, 218, 220, 224, 226, 231, 332], "dw": [60, 173, 209], "dx": [60, 173, 209], "dy": [60, 173, 209], "dynam": [63, 176, 212, 310, 326], "e": [0, 1, 11, 46, 55, 63, 76, 80, 118, 123, 124, 127, 145, 146, 149, 168, 176, 192, 204, 212, 285, 289, 301, 304, 306, 308, 314, 321, 327, 329, 331, 332, 334], "each": [0, 1, 51, 63, 69, 71, 72, 78, 80, 96, 97, 98, 105, 123, 124, 127, 145, 146, 149, 164, 176, 182, 184, 185, 192, 212, 218, 220, 221, 224, 226, 248, 257, 259, 261, 287, 289, 291, 301, 302, 304, 305, 308, 309, 311, 314, 321, 325, 326, 331, 332, 334], "earli": 192, "earth": 309, "easi": [69, 96, 182, 218], "easili": [62, 175, 211], "eav": 78, "eb9058c3a382ffc7106e4002c42a8d85": [140, 141], "edg": [261, 304, 337], "edit": 248, "edu": [126, 140, 141, 148], "effect": [226, 333, 334], "effici": [62, 126, 148, 175, 211, 287, 291], "efficientdet": [51, 52, 66, 164, 165, 179, 201, 215, 224], "efficientdetbackbon": [53, 166, 202], "efficientnet": [52, 59, 165, 172, 201, 208], "efficientnet_param": [63, 176, 212], "efficientnetv2_": 192, "either": [0, 63, 123, 124, 145, 146, 176, 212, 285, 306, 313, 317, 321, 331], "elast": [127, 149], "elastic_transform": [127, 149], "elastictransform": [127, 149], "element": [3, 107, 127, 149, 257, 301, 304, 308, 309], "element_count": 308, "elementwise_affin": 242, "elev": [78, 80], "elhaddad": 336, "elif": 330, "elig": 304, "els": [328, 329, 330], "emb": 256, "embed": [0, 253, 254, 255, 256, 258, 259], "embed_dim": [242, 253, 256], "embed_h": 256, "embed_w": 256, "embedding_dim": [252, 258], "embedding_h": 256, "embedding_w": 256, "empti": [1, 261, 304, 309, 327], "enabl": [262, 314, 336], "enc_weight": 119, "encod": [63, 176, 212, 241, 243, 254, 255, 256, 258, 261, 262, 327, 328, 329], "encode_imag": [190, 242], "encode_text": 242, "encoder_epoch_20": 119, "encourag": 326, "end": [243, 257], "end_idx": 90, "endors": [0, 1], "endpoint": 308, "enforc": [63, 123, 124, 145, 146, 176, 212, 312, 331], "enhanc": 239, "enhancedcompos": [127, 149], "enrich": 320, "ensur": [51, 78, 164, 224, 226, 304, 308, 309, 310, 311, 313, 321, 328, 329, 331], "enter": [0, 1, 239, 332], "entir": 308, "entiti": 3, "entri": [71, 78, 97, 184, 220, 302, 327, 334], "envelop": 308, "environ": [0, 1, 51, 164, 224, 334, 336], "ep": [69, 70, 72, 83, 96, 98, 182, 183, 185, 218, 219, 221, 242, 252], "epoch": [0, 1, 51, 76, 84, 164, 192, 224, 226, 231], "epsg": [289, 309], "epsilon": [59, 69, 96, 172, 182, 208, 218], "equal": [308, 309], "equival": [63, 72, 98, 123, 124, 145, 146, 176, 185, 212, 221, 304], "era": 293, "erabuilt": [326, 331, 332], "error": [3, 287, 291, 306, 308, 312, 321, 327, 332], "errormessag": 306, "ertugrul": 336, "es_min_delta": [66, 179, 215], "es_pati": [66, 179, 215], "es_toler": 192, "especi": 304, "essenti": 308, "estim": [69, 80, 96, 182, 218, 331], "euclidean": [316, 318], "eval": [0, 86], "eval_multipro": 86, "evalu": [0, 1, 69, 84, 96, 182, 192, 218, 314], "even": [0, 1, 338], "evenli": 261, "event": [0, 1, 338], "everi": [53, 58, 59, 60, 63, 64, 66, 70, 107, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271, 330], "everyth": [38, 334], "exact": 0, "exactli": [69, 96, 182, 218, 263, 309, 311], "exampl": [1, 62, 69, 71, 72, 80, 96, 97, 98, 107, 127, 149, 175, 182, 184, 185, 211, 218, 220, 221, 289, 304, 306, 308, 310, 312, 314, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334], "example__": 192, "example_tiburon": 331, "exce": [304, 308], "exceed": [304, 308], "except": [2, 118, 304, 327, 332], "excit": [62, 175, 211], "exclud": [257, 304], "exclude_channel": [127, 149], "exclude_featur": 11, "exclus": 105, "execut": [46, 51, 72, 98, 164, 185, 221, 224, 304, 317, 320, 328, 329, 330, 332], "execute_replication_callback": [72, 98, 185, 221], "exemplari": [0, 1, 338], "exist": [0, 1, 51, 72, 78, 98, 105, 164, 185, 192, 221, 304, 305, 309, 310, 311, 313, 318, 327, 328, 329, 331, 332, 336], "exist_ok": 332, "exp": [0, 1], "expand": 326, "expand_ratio": [63, 176, 212], "expans": 242, "expect": [0, 38, 69, 96, 182, 218, 259, 261, 263, 304, 306, 308, 312, 321, 331], "expected_unit_typ": 321, "expens": 78, "experi": 1, "experiment": 1, "explain": 325, "explor": 325, "exponenti": 308, "export": [0, 1, 62, 63, 175, 176, 211, 212, 262], "express": [0, 1, 335, 338], "exra": 40, "ext": 118, "extend": [38, 63, 123, 124, 145, 146, 176, 212, 289, 334], "extens": [305, 309, 311], "extent": 304, "extern": 306, "extra": [40, 262], "extract": [1, 62, 175, 211, 253, 285, 289, 293, 299, 304, 321, 326, 328, 329, 332], "extract_featur": [62, 175, 211], "f": [326, 327, 328, 329, 330, 331, 332], "f0ef6b0ae62326f3e7ffdfab6717acfc": [140, 141], "f1": 0, "facad": 78, "facade_pars": 47, "facadepars": 78, "facebookresearch": 253, "facilit": [76, 327], "factor": 334, "fail": [304, 306, 308], "fall": [1, 309, 319], "fals": [11, 14, 17, 19, 39, 46, 51, 53, 55, 59, 62, 63, 65, 66, 69, 72, 74, 84, 96, 98, 107, 110, 111, 112, 113, 114, 118, 133, 134, 140, 141, 143, 164, 166, 168, 172, 175, 176, 178, 179, 182, 185, 187, 202, 204, 208, 211, 212, 214, 215, 218, 221, 223, 224, 241, 246, 253, 254, 255, 258, 259, 262, 266, 271, 289, 304, 305, 308, 309, 311, 312, 314, 321], "fashion": [7, 246, 289], "faster": 11, "fbuil": 336, "fc_dim": 112, "fd_id": 332, "featur": [0, 1, 9, 11, 14, 17, 19, 39, 40, 46, 60, 62, 80, 135, 173, 175, 209, 211, 289, 304, 308, 320, 321, 326, 330, 331, 332, 334], "feature_kei": 304, "feature_list": 304, "feature_name_map": 304, "feature_s": 271, "featurecollect": 304, "feed_dict": 112, "feet": [78, 285, 289, 309, 321], "fema": [301, 326], "fetch": [287, 289, 291, 306, 308], "fetch_data_for_cel": 308, "fetch_footprint_data": 302, "fetch_max_records_per_queri": 308, "fewer": [304, 308], "ffh": 80, "ffh_predictor_klepac": 47, "ffhpredictorklepac": 80, "field": [63, 83, 176, 212, 304, 308, 331, 332, 334], "figur": [307, 314], "file": [0, 1, 3, 38, 51, 55, 63, 80, 164, 168, 176, 204, 212, 224, 226, 231, 241, 289, 302, 304, 305, 307, 309, 310, 311, 313, 314, 326, 327, 328, 329, 330, 331, 332], "file_path": [304, 331, 332], "filenam": [0, 1, 80, 118, 140, 141, 305, 309, 313, 330], "filenotfounderror": [3, 78, 327, 328, 329], "filepath": [246, 311, 331], "fill": [9, 331], "filter": [2, 55, 63, 168, 176, 204, 212, 248, 261, 289, 325, 329, 332, 333, 334], "filter1": 7, "filter_hous": [328, 329], "filterboundingbox": 7, "filterdetectionresult": 7, "filtered_imag": [328, 329], "filtered_images_street": [328, 329], "final": [0, 1, 62, 175, 211, 242, 263, 308], "final_cel": 308, "find": [309, 316, 319, 332, 335], "find_json": 190, "find_recurs": 118, "fine": 192, "finetun": 0, "firmzon": 332, "first": [1, 63, 71, 72, 80, 97, 98, 105, 123, 124, 145, 146, 176, 184, 185, 212, 220, 221, 304, 308, 309, 310, 311, 328, 329, 331], "first_tim": [59, 172, 208], "firstfloorelev": [19, 330], "firstfloorelevation_kei": 19, "fit": [0, 1, 314, 338], "fix": [164, 224], "fl": 330, "flag": [0, 301], "flat": [231, 304, 330], "flatten": 304, "flatten_arrai": 14, "float": [7, 51, 55, 60, 62, 74, 78, 80, 164, 168, 173, 175, 187, 204, 209, 211, 223, 224, 242, 246, 248, 252, 253, 256, 257, 261, 263, 304, 309, 311, 314, 321], "float32": [60, 173, 209], "float64": 331, "floodtyp": 19, "floodtype_kei": 19, "floodzon": [19, 39], "floodzone_kei": [19, 39], "floor": [80, 197, 199, 224, 233, 289], "floor_area_infer": 43, "flter": 328, "fly": [0, 105], "fmckenna": [119, 127, 149, 243], "fmk": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "focalloss": [58, 171, 207], "focu": [325, 333, 334], "focus": 325, "folder": [0, 1, 140, 280, 282, 283], "folder_path": 190, "follow": [0, 1, 63, 78, 80, 110, 111, 123, 124, 145, 146, 176, 212, 242, 248, 257, 327, 328, 329, 330, 331, 332, 334, 338], "foot": 321, "footprin": 328, "footprint": [78, 278, 280, 282, 285, 289, 293, 299, 301, 302, 304, 325, 327, 328, 329, 330, 332, 333], "footprint_scrap": 275, "footprintscrap": [278, 285, 293, 301, 332], "footprintsourc": 330, "forc": [74, 187, 223], "foreground": 259, "form": [0, 1, 257, 259, 311, 321, 338], "format": [118, 239, 248, 257, 259, 261, 263, 289, 304, 311, 321], "former": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271], "formula": [63, 123, 124, 145, 146, 176, 212], "fort": 330, "forward": [53, 58, 59, 60, 62, 63, 64, 66, 70, 71, 97, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 175, 176, 177, 179, 183, 184, 202, 207, 208, 209, 211, 212, 213, 215, 219, 220, 242, 252, 253, 254, 255, 256, 257, 258, 262, 266, 271], "forward_with_coord": 256, "found": [3, 192, 304, 305, 310, 311, 317, 321, 326, 327, 328, 329, 330, 332], "found_ht": 332, "found_typ": 332, "foundat": [333, 335], "foundation_classifi": 47, "foundationclassifi": 0, "foundationtyp": 17, "foundationtype_kei": 17, "four": 309, "fp16": 242, "fp_data": 299, "fp_inventori": 327, "fparea": [326, 330, 331, 332], "fpn_dim": 112, "fpn_inplan": 112, "fpsourc": 302, "frac": [69, 96, 182, 218], "frame": [257, 259], "frame_from_video": [74, 187, 223], "framework": [330, 333, 334, 336], "frank": 336, "free": [1, 325], "freez": 0, "freeze_bn": [53, 166, 202], "freeze_head": [66, 179, 215], "frequenc": [256, 326], "frm": [328, 329, 330], "from": [0, 1, 21, 51, 60, 63, 69, 71, 76, 78, 80, 96, 97, 105, 107, 110, 111, 126, 127, 148, 149, 164, 173, 176, 182, 184, 192, 199, 209, 212, 218, 220, 224, 226, 231, 235, 237, 239, 253, 254, 255, 257, 259, 261, 280, 282, 285, 287, 289, 291, 293, 299, 302, 304, 306, 308, 310, 312, 314, 317, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 334, 337], "from_channel": [127, 149], "from_colorname_to_bgr": [74, 187, 223], "from_dict": [7, 246], "from_nam": [62, 175, 211], "from_pretrain": [62, 175, 211], "from_unit": 321, "frontier": 336, "frozen": 0, "ft": [0, 285, 287, 289, 291, 293, 301, 302, 321, 326, 327, 328, 329, 330, 332], "ft2": 321, "ftprntid": 332, "ftprntsrc": 332, "full": 326, "fulli": 0, "function": [7, 51, 53, 58, 59, 60, 62, 63, 64, 66, 70, 72, 83, 98, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 140, 142, 145, 146, 147, 150, 164, 166, 171, 172, 173, 175, 176, 177, 179, 183, 185, 202, 207, 208, 209, 211, 212, 213, 215, 219, 221, 224, 242, 246, 252, 253, 254, 255, 258, 262, 266, 271, 280, 289, 299, 302, 304, 306, 308, 309, 311, 318, 319, 320, 321, 326, 327, 328, 329, 330, 332], "fund": 333, "further": [0, 259, 289], "futur": [71, 97, 184, 220], "futureresult": [71, 97, 184, 220], "g": [1, 55, 63, 76, 80, 118, 123, 124, 135, 145, 146, 168, 176, 192, 204, 212, 285, 301, 304, 306, 308, 314, 321, 329, 331, 334, 336], "gabl": [231, 304, 330, 331], "gain": [74, 187, 223], "gamma": [69, 96, 182, 218], "gap": [244, 327, 331], "garag": 164, "garage_detector": 47, "garagedetector": 164, "garagetyp": [14, 17], "garagetype_kei": [14, 17], "gararg": 289, "gather": [71, 97, 184, 220], "gaussian": [1, 127, 149], "gcpkei": 330, "gelu": [252, 253, 254, 255, 256], "gen_method": 11, "gener": [0, 11, 60, 173, 209, 248, 256, 261, 289, 299, 301, 304, 308, 314, 325, 326, 327, 331, 333, 334], "generate_crop_box": 261, "generate_csv": 160, "geo_tool": 307, "geograph": [285, 287, 291, 301, 304, 308, 309, 311, 326, 333, 334], "geojson": [289, 302, 304, 309, 331, 332], "geometr": 80, "geometri": [304, 306, 308, 309, 311, 320], "geospati": [307, 309, 311], "geospatial_knn": 11, "geotool": [307, 308, 309], "get": [55, 63, 71, 78, 97, 168, 176, 184, 204, 212, 220, 253, 280, 282, 289, 293, 304, 308, 326, 327, 328, 329, 332, 334], "get_asset": [287, 291], "get_asset_coordin": 304, "get_asset_featur": [304, 331], "get_asset_id": 304, "get_boundari": [306, 308], "get_class": [310, 326, 327, 328, 329, 330, 331, 332], "get_coordin": 304, "get_datafram": 304, "get_dense_p": 256, "get_element_count": 308, "get_era_height_foundation_class": 17, "get_ext": 304, "get_extended_featur": 289, "get_filtered_data_given_inventori": [289, 332], "get_footprint": [278, 285, 293, 301, 326, 327, 328, 329, 330, 332], "get_geojson": 304, "get_hazus_base_replacement_cost": 15, "get_hazus_height_class": 15, "get_hazus_height_classes_res1": 15, "get_hazus_income_to_const_class": 15, "get_hazus_occ_type_map": 15, "get_hazus_region_to_garag": 15, "get_hazus_state_region_map": 15, "get_hazus_year_class": 15, "get_imag": [280, 282, 283, 305, 327, 328, 329], "get_image_embed": 259, "get_image_s": [62, 175, 211], "get_index_label": [74, 187, 223], "get_last_weight": [74, 187, 223], "get_mask": 119, "get_model_param": [63, 176, 212], "get_model_path": 313, "get_multi_kei": 304, "get_n_pw": 304, "get_object": 310, "get_pair": 243, "get_points_in_": 304, "get_points_in_polygon": [304, 316], "get_points_near_polygon": 316, "get_preprocess_shap": 263, "get_random_sampl": [304, 326, 327, 328, 329, 330, 332], "get_raw_data": [289, 332], "get_raw_data_given_boundari": 332, "get_rel_po": 253, "get_replacement_cost": 14, "get_same_padding_conv2d": [63, 176, 212], "get_str_from_occ": 14, "get_supported_unit": 321, "get_unit_typ": 321, "get_world_r": 304, "getannid": [55, 168, 204], "getcatid": [55, 168, 204], "getimgid": [55, 168, 204], "getnsidata": 289, "getpointsinpolygon": [316, 318, 319, 320], "getpointsnearpolygon": [316, 320], "gi": 289, "gi_ap": 38, "git": [0, 1, 337], "github": [0, 1, 60, 70, 110, 111, 173, 183, 209, 219, 253, 337], "gitignor": 328, "give": [69, 96, 182, 218, 259, 326], "given": [51, 55, 63, 105, 107, 123, 124, 127, 145, 146, 149, 164, 168, 176, 204, 212, 224, 231, 237, 239, 241, 248, 254, 255, 257, 259, 263, 278, 280, 282, 283, 287, 289, 291, 293, 301, 306, 308, 309, 310, 311, 312, 317, 321, 326, 330, 334], "global": [63, 176, 212, 326], "global_asset_indic": 14, "global_attn_index": 253, "global_param": [62, 63, 175, 176, 211, 212], "global_ruleset": 32, "globalparam": [62, 63, 175, 176, 211, 212], "go": 334, "goal": 331, "goe": 304, "good": [0, 1, 338], "googl": [1, 60, 173, 209, 280, 282, 325, 327, 328, 330], "google_satellit": [275, 327], "google_satellite_class": 327, "google_street": [327, 328, 329], "google_street_class": [327, 328, 329], "google_streetview": 275, "googlesatellit": [280, 327], "googlestreetview": [282, 327, 328, 329], "gover": 333, "govindje": 336, "gp": [299, 326], "gpt": [188, 197, 233], "gpt_base_model": 47, "gpu": [0, 51, 69, 74, 78, 96, 164, 182, 187, 192, 218, 223, 224, 239], "gpu0": 118, "gpu1": 118, "grad": [63, 83, 123, 124, 145, 146, 176, 212], "grad_output": [63, 176, 212], "gradient": [63, 123, 124, 145, 146, 176, 192, 212], "gradoutput": [123, 124, 145, 146], "grant": [333, 335], "graphic": [326, 331, 332], "greater": 325, "gregori": 336, "grid": [256, 261, 308, 309, 314], "ground": [1, 7, 246, 326], "ground_elv": 332, "ground_elv_m": 332, "grounded_sam_util": 245, "grounding_dino_model": 246, "group": [63, 64, 114, 127, 149, 176, 177, 212, 213, 266, 271], "gt_label": 244, "guarante": [72, 98, 185, 221, 308], "guo": 336, "gz": [140, 141, 243], "h": [0, 1, 69, 96, 127, 149, 182, 218, 253, 257, 258, 259, 263, 315, 336], "ha": [0, 1, 60, 63, 107, 123, 124, 145, 146, 173, 176, 209, 212, 259, 261, 304, 311, 326, 330, 331, 334], "hackabl": 241, "hackish": [140, 142], "halv": 192, "handl": [51, 63, 123, 124, 145, 146, 164, 176, 212, 224, 242, 287, 291, 293, 305, 308, 309, 314, 330, 331], "happen": [0, 1, 325], "hard": 330, "harvard": [126, 148], "has_mask_input": 262, "has_s": [62, 175, 211], "hasgarag": 39, "hasgarage_kei": 39, "have": [1, 63, 72, 78, 98, 123, 124, 127, 145, 146, 149, 176, 185, 212, 221, 258, 314, 328, 329, 330, 331, 332], "haversin": 309, "haversine_dist": 309, "hazard": [21, 333, 334, 336], "hazu": [14, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 42], "hazus_infer": 12, "hazus_inferer_earthquak": 12, "hazus_inferer_flood": 12, "hazus_inferer_wind": 12, "hazus_ruleset": 13, "hazusinfer": [14, 42], "hazusinfererearthquak": 17, "hazusinfererflood": 19, "hazusinfererwind": 39, "head": [192, 242, 253, 330], "hei": 334, "height": [14, 39, 42, 60, 69, 74, 78, 80, 96, 173, 182, 187, 209, 218, 223, 253, 285, 293, 301, 314], "height_kei": 39, "heightclass": 17, "heightclass_kei": 17, "help": [326, 327, 328, 329, 330, 332], "helper": [63, 176, 212, 308], "here": [0, 326, 328, 329, 330, 332], "heurist": [42, 80], "hhw": 332, "hidden": 314, "hidden_dim": [254, 255], "hidden_s": 133, "high": [261, 282, 334], "higher": 0, "hiip": 330, "hip": [126, 148, 231, 304, 331], "hold": [0, 1, 51, 164, 224, 287, 291, 304, 314], "holder": [0, 1, 338], "hole": [248, 261], "hook": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271], "hornauer": [0, 1, 336], "hous": [1, 80, 328, 330], "house_view": 4, "houseview": [7, 328, 329], "how": [304, 327, 331, 332, 333], "howev": [0, 1, 338], "hp": 253, "hq_featur": 255, "hq_token_onli": [254, 255, 259], "hrnet": 109, "hrnetv2": 110, "http": [0, 1, 60, 70, 74, 110, 111, 126, 140, 141, 148, 173, 183, 187, 209, 219, 223, 253, 308, 337], "httperror": 308, "huef": 24, "hueff": 24, "hueffs_config": 24, "huefh": 24, "huefh_config": 24, "huefs_config": 24, "huefss": 24, "huefss_config": 24, "human": [306, 310, 313, 321], "hurrican": 38, "hw": [248, 253], "hwc": [248, 259], "hxwxc": 263, "hymenoptera_data": 192, "hyperparamet": [0, 192], "i": [3, 11, 38, 46, 51, 63, 69, 71, 72, 76, 78, 80, 96, 97, 98, 105, 107, 110, 111, 123, 124, 127, 140, 141, 145, 146, 149, 164, 176, 182, 184, 185, 192, 199, 212, 218, 220, 221, 224, 226, 231, 237, 239, 241, 242, 243, 248, 256, 257, 259, 261, 262, 263, 264, 280, 282, 285, 287, 289, 291, 293, 301, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "id": [11, 55, 71, 97, 168, 184, 204, 220, 304, 306, 308], "id_column": [304, 331], "id_skip": [63, 176, 212], "ident": [0, 1, 63, 176, 212], "identifi": [0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 71, 78, 97, 184, 220, 299, 304, 305, 306, 310, 314, 319, 321, 334], "idx": [124, 146], "ignor": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271], "illustr": [59, 172, 208, 326, 332], "im": 90, "im_siz": 261, "imag": [1, 5, 7, 49, 51, 60, 63, 74, 76, 78, 80, 127, 140, 142, 149, 164, 173, 176, 187, 189, 192, 193, 197, 209, 212, 223, 224, 226, 228, 231, 233, 235, 237, 239, 241, 242, 246, 248, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 270, 280, 282, 283, 299, 301, 305, 309, 311, 314, 315, 325, 326, 330, 333, 334], "image_00x": [0, 1], "image_classifi": 47, "image_embed": [254, 255, 258, 262], "image_embedding_s": 256, "image_encod": [251, 257], "image_featur": 244, "image_filt": [328, 329], "image_format": [257, 259], "image_index": [57, 170, 206], "image_p": [254, 255, 258], "image_path": [7, 74, 187, 190, 223], "image_processor": 47, "image_resolut": 242, "image_s": [60, 63, 173, 176, 209, 212, 256], "image_scrap": 275, "image_segment": 47, "image_set": [80, 303, 331], "imageclassifi": [76, 192, 226, 231], "imageencodervit": [253, 257], "imagefold": [140, 142], "imagefolderinst": [140, 142], "imagenet": [0, 111, 113, 134, 266], "imageprocess": 193, "imageprocessor": [78, 193], "imageri": [78, 199, 226, 231, 235, 237, 280, 282, 299, 326, 327, 328, 329], "images_ari": 229, "images_satellit": 327, "images_street": [229, 327, 328, 329], "imagescrap": [280, 282, 283], "imageset": [5, 7, 49, 51, 78, 80, 164, 189, 192, 193, 197, 224, 226, 231, 233, 235, 237, 239, 264, 280, 282, 283, 305, 314, 328, 329, 331, 334], "imdir": 299, "img": [55, 60, 65, 66, 74, 90, 168, 173, 178, 179, 187, 204, 209, 214, 215, 223], "img_dir": [57, 66, 170, 179, 206, 215], "img_fold": [0, 1], "img_kei": 190, "img_path": [65, 178, 214, 244], "img_siz": [57, 170, 206, 253], "img_sourc": 246, "img_transform": 90, "imgid": [55, 168, 204], "imlab": 118, "impact": [333, 336], "imperi": 321, "implement": [5, 7, 63, 69, 70, 71, 72, 96, 97, 98, 110, 111, 176, 182, 183, 184, 185, 193, 212, 218, 219, 220, 221, 261, 278, 283, 308, 317, 319], "implemented_architectur": 192, "impli": [0, 1, 338], "import": [0, 1, 69, 182, 218, 307, 312, 325, 326, 327, 328, 329, 331, 332, 333], "impr": 118, "improv": [192, 304], "imput": [2, 325, 327, 330, 332, 333, 334], "imputed_inventori": 331, "imres": 90, "imshow": [65, 74, 178, 187, 214, 223], "imwrit": [65, 74, 178, 187, 214, 223], "in2": 321, "in_chan": 253, "in_channel": [59, 62, 63, 64, 131, 132, 172, 175, 176, 177, 208, 211, 212, 213], "in_featur": 135, "in_plan": [112, 271], "inaccur": [69, 96, 182, 218], "incident": [0, 1, 338], "includ": [0, 1, 51, 71, 78, 97, 164, 184, 220, 224, 285, 289, 293, 301, 304, 305, 308, 309, 311, 325, 328, 329, 330, 332, 334, 338], "include_existing_imag": 305, "include_featur": [14, 19, 39], "incom": [14, 17], "income_kei": [14, 17], "incomplet": 331, "ind": 332, "ind6": 332, "index": [105, 107, 140, 142, 304, 309, 331, 332, 333], "index_select": 241, "indic": [105, 107, 241, 259, 261, 287, 291, 304, 308, 309, 311, 315], "indici": 304, "indirect": [0, 1, 338], "individu": [127, 149, 305, 309], "inf": [55, 168, 204], "infer": [2, 51, 65, 78, 80, 164, 178, 214, 224, 331, 334], "infer_building_one_by_on": [19, 39], "infer_detector": [52, 165, 201], "inferenceengin": [12, 14, 17, 19, 39, 46], "inferred_featur": [19, 32], "info": [55, 168, 204, 327], "inform": [0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 55, 71, 72, 97, 98, 168, 184, 185, 204, 220, 221, 235, 262, 289, 302, 304, 308, 325, 326, 328, 329, 330, 332, 334], "infrequ": 326, "inherit": [76, 318, 319, 320], "init_backbon": [53, 166, 202], "init_weight": [74, 187, 223], "initi": [2, 51, 74, 76, 80, 118, 164, 187, 192, 199, 223, 224, 237, 289, 304, 310, 312, 326, 333], "initialize_paramet": 242, "inp": 118, "inplan": 242, "input": [53, 59, 60, 62, 63, 69, 74, 78, 80, 96, 101, 118, 123, 124, 145, 146, 164, 166, 172, 173, 175, 176, 182, 187, 192, 202, 208, 209, 211, 212, 218, 223, 224, 226, 231, 239, 241, 248, 253, 254, 255, 256, 257, 259, 261, 263, 289, 302, 304, 306, 307, 308, 309, 311, 312, 317, 321, 325, 327, 330, 332], "input_": [70, 183, 219], "input_data": [5, 7, 51, 78, 80, 164, 224, 226, 231, 282, 285], "input_devic": 118, "input_dict": [49, 189, 197, 199, 233, 235, 237, 239, 264, 287, 291, 293, 301, 306, 321], "input_dim": [254, 255], "input_filt": [63, 176, 212], "input_imag": 7, "input_image_s": [256, 262], "input_inventori": [9, 11, 14, 17, 19, 39, 40, 46], "input_resolut": 242, "input_s": [133, 253, 257], "input_valid": [307, 312], "input_valu": 311, "inputs": [123, 124, 145, 146], "inputvalid": [307, 311], "insert": [330, 332], "insid": [63, 176, 212, 320], "insight": 325, "instal": 333, "instanc": [51, 53, 58, 59, 60, 63, 64, 66, 69, 70, 84, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 140, 143, 145, 146, 147, 150, 164, 166, 171, 172, 173, 176, 177, 179, 182, 183, 202, 207, 208, 209, 212, 213, 215, 218, 219, 224, 226, 242, 252, 253, 254, 255, 258, 262, 266, 271, 280, 282, 287, 291, 301, 304, 310, 312, 317], "instanti": [308, 310, 330], "instead": [0, 3, 53, 58, 59, 60, 63, 64, 66, 69, 70, 74, 96, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 182, 183, 187, 202, 207, 208, 209, 212, 213, 215, 218, 219, 223, 242, 252, 253, 254, 255, 258, 259, 262, 266, 271, 330, 332], "int": [7, 11, 46, 51, 55, 72, 76, 78, 84, 98, 101, 107, 164, 168, 185, 192, 199, 204, 221, 224, 226, 231, 239, 241, 242, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 304, 305, 306, 308, 309, 310, 314, 315], "integ": [55, 60, 78, 105, 127, 149, 168, 173, 192, 204, 209, 304], "integr": [304, 325, 333], "intend": [63, 123, 124, 145, 146, 176, 212, 313, 333], "interact": [289, 301, 307, 308, 325], "interest": [278, 285, 289, 293, 302, 308, 326, 328, 329, 332], "interfac": [193, 282, 334], "interim": 282, "interm_embed": [254, 255], "intern": [0, 127, 149, 304, 320, 321], "internation": 326, "interp": 90, "interpol": [74, 187, 223], "interrupt": [0, 1, 338], "intersect": [51, 164, 224, 309], "intersectionandunion": 118, "introduc": 325, "inttensor": 241, "intuit": 314, "invalid": [78, 304, 306, 308, 309, 321], "invalid_id": 39, "invenntori": 331, "inventori": [9, 11, 14, 17, 19, 38, 39, 40, 46, 278, 280, 282, 283, 285, 287, 289, 291, 293, 301, 302, 304, 312, 317, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334], "inventory1": 317, "inventory2": 317, "inventory_arrai": [44, 45], "inventory_df": 17, "inventory_json": [19, 39], "inventory_subset": 332, "inventory_to_join": 304, "inventory_valid": 307, "inventoryvalid": 312, "invert": [62, 175, 211], "invert_affin": [74, 187, 223], "investig": 1, "invetory_to_df": 11, "invok": [71, 72, 97, 98, 184, 185, 220, 221, 331], "io": [74, 187, 223], "iou": 261, "iou_head_depth": [254, 255], "iou_head_hidden_dim": [254, 255], "iou_pr": 262, "iou_predict": 257, "iou_threshold": [74, 187, 223], "is_box": 309, "is_box_near_crop_edg": 261, "is_categori": 11, "is_float": 311, "is_imag": 311, "is_inventori": 312, "is_linestr": 311, "is_multilinestr": 311, "is_multipolygon": 311, "is_point": 311, "is_polygon": 311, "is_ready_to_inf": [19, 32], "is_valid_fil": [140, 142], "is_valid_geometri": 311, "iscrowd": [55, 168, 204], "isinst": 306, "isol": 328, "isomorph": [72, 98, 185, 221], "issu": [70, 183, 219, 308, 311, 328, 329, 330, 331], "item": [261, 304], "itemsview": 261, "iter": [105, 107, 257, 259, 304], "ith": 261, "its": [0, 1, 69, 80, 96, 107, 182, 218, 241, 304, 305, 306, 308, 309, 310, 311, 327, 331, 332], "itself": [71, 97, 184, 220], "j": 336, "j2p": 332, "jigsaw_gener": 270, "jinyan": 336, "jit": 241, "join": [304, 316, 317, 318, 319, 320], "join_inventori": 317, "jpeg": 311, "jpg": [0, 1, 118, 311], "json": [304, 308, 310, 330, 331], "json_cont": 190, "json_object": 310, "judg": 0, "jupyt": [325, 326, 331, 332], "just": [0, 1, 63, 123, 124, 145, 146, 176, 212, 226, 304, 325, 328, 329], "jvp": [63, 123, 124, 145, 146, 176, 212], "jxw": 332, "k": [11, 124, 146, 253, 258, 331], "k_h": 253, "k_nn": 11, "k_size": 253, "k_w": 253, "kareem": 336, "keep": [69, 96, 182, 218, 261, 308, 328, 329], "keep_exist": [304, 331], "kei": [3, 51, 60, 78, 80, 164, 173, 192, 193, 209, 224, 226, 231, 237, 239, 248, 253, 257, 258, 282, 289, 304, 305, 308, 310, 314, 321, 325, 326, 327, 328, 329, 330, 332], "kept": [0, 69, 96, 182, 218, 308], "kera": [64, 74, 177, 187, 213, 223], "kernel_s": [63, 64, 176, 177, 212, 213, 253, 271], "key_p": 258, "keys_to_inf": 17, "kg": 321, "kijewski": 336, "kilogram": 321, "kilomet": 321, "kincho": 336, "km": 321, "km2": 321, "knn": [0, 330, 331], "knn_imput": 8, "knn_imputer_class": 331, "knnimput": [11, 331], "known": 257, "kriz": [140, 141], "kwarg": [42, 53, 58, 60, 63, 64, 74, 90, 101, 110, 111, 113, 114, 123, 124, 127, 134, 140, 142, 145, 146, 149, 166, 171, 173, 176, 177, 187, 202, 207, 209, 212, 213, 223, 242, 261, 266], "l": [69, 96, 135, 182, 218, 239, 253], "label": [0, 1, 7, 21, 55, 74, 105, 112, 118, 168, 187, 192, 204, 223, 237, 246, 256, 257, 259, 314, 315], "label_cod": 246, "label_encod": 11, "labelmap": 118, "lambda": 306, "languag": 49, "larg": [49, 105, 243, 333, 334], "larger": [304, 325], "largest": [60, 173, 209], "larkspur": 329, "last": [84, 107, 263, 311, 312, 332], "last_lay": 133, "lat": [304, 331, 332], "lat1": [304, 311], "lat2": [304, 311], "later": 0, "latest": [0, 337], "latitud": [289, 302, 304, 309, 311], "latn": [304, 311], "latter": [11, 53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271, 331], "laura": 336, "law": 336, "layer": [0, 51, 62, 69, 96, 113, 114, 134, 164, 175, 182, 211, 218, 224, 242, 253, 258, 261, 266], "layernorm": [242, 253], "layernorm2d": 252, "lb": 321, "lead": 1, "learn": [51, 164, 192, 224, 331], "learnabl": [69, 96, 182, 218], "learning_r": [51, 164, 224], "least": 311, "left": 304, "len": [105, 107, 326, 327, 328, 329, 330, 332], "length": [105, 107, 241, 243, 259, 263, 287, 289, 291, 293, 301, 304, 307, 321, 326, 327, 328, 329, 330, 332], "length_unit": [285, 287, 289, 291, 293, 301], "lengthunit": [289, 302], "less": [107, 304], "level": [60, 78, 173, 199, 209, 226, 237, 282, 289, 299, 327, 328, 329, 334], "leverag": [309, 330], "lgqlgj": 330, "lh": 253, "liabil": [0, 1, 338], "liabl": [0, 1, 338], "lib": [50, 81, 86, 149, 163, 200, 265], "licenc": 333, "licens": [326, 327, 330, 331, 332, 333], "lie": 320, "lightweight": 311, "like": [1, 3, 63, 176, 212, 243, 304, 319, 331, 334], "limit": [0, 1, 310, 326, 338], "limited_to_extension_typ": 305, "line": [0, 1, 325, 326, 327, 328, 329, 330, 332], "line_thick": [74, 187, 223], "linear": [62, 175, 211], "linearaverag": [122, 144], "linearaverageop": [123, 145], "linestr": [304, 311], "link": [325, 326, 329, 331, 332], "list": [0, 1, 7, 60, 62, 63, 74, 78, 105, 107, 127, 149, 173, 175, 176, 187, 192, 199, 209, 211, 212, 223, 231, 235, 237, 239, 241, 242, 243, 246, 248, 257, 261, 289, 302, 304, 305, 308, 309, 311, 314, 321, 329, 331, 336, 338], "list_color_nam": [74, 187, 223], "literal_ev": 329, "literatur": 331, "load": [0, 1, 51, 55, 62, 63, 76, 80, 164, 168, 175, 176, 192, 204, 211, 212, 224, 226, 239, 241, 302, 305, 311, 326, 327], "load_annot": [57, 170, 206], "load_api_kei": 327, "load_class": [57, 170, 206], "load_fc": [63, 176, 212], "load_imag": [57, 170, 206], "load_model": [65, 178, 214, 270], "load_predictions_from_json": 190, "load_pretrained_weight": [63, 176, 212], "load_url": 115, "load_weight": [53, 59, 62, 166, 172, 175, 202, 208, 211], "loadann": [55, 168, 204], "loadcat": [55, 168, 204], "loader": [140, 142], "loadimg": [55, 168, 204], "local": 313, "locat": [127, 149, 192, 278, 282, 289, 302, 305, 306, 313, 314, 326, 327, 328, 329, 330, 332], "location_name_input": 306, "locationnam": [306, 326, 327, 328, 329, 330, 332], "locationpolygon": 306, "log": [118, 308], "logfil": [0, 1], "logic": [308, 317, 320], "logit": [62, 175, 211, 257, 259, 261], "lon": [304, 331, 332], "lon1": [304, 311], "lon2": [304, 311], "long": [21, 241, 263, 321], "long_side_length": 263, "longer": [1, 63, 123, 124, 145, 146, 176, 212, 241], "longest": 263, "longest_sid": 262, "longitud": [289, 302, 304, 309, 311], "longtensor": 241, "lonn": [304, 311], "lookup": 243, "loop": 311, "loss": [0, 1, 17, 38, 54, 76, 83, 167, 203, 226, 231, 338], "low": [0, 257, 259, 261, 336], "low_dim": 134, "low_res_logit": 257, "lr": [51, 66, 83, 164, 179, 215, 224, 270], "lulc": 39, "lulc_kei": 39, "lw": 253, "m": [0, 1, 69, 74, 96, 112, 135, 182, 187, 218, 223, 285, 289, 321, 326, 332], "m2": 321, "ma": 76, "mab": 76, "machin": 331, "made": 330, "mai": [0, 1, 78, 84, 263, 304, 325, 326, 331, 332], "main": [0, 71, 80, 97, 136, 184, 220, 327, 328, 329, 330, 331, 332], "main_stream": 101, "mainli": 333, "maintain": 314, "make": [1, 14, 19, 39, 42, 76, 192, 193, 199, 237, 239, 308, 309, 310, 336], "makedir": [331, 332], "manag": [51, 164, 192, 224, 305, 308, 314], "mandatori": 0, "mani": [0, 1, 63, 123, 124, 126, 145, 146, 148, 176, 212, 327, 331], "manipul": [84, 305, 309], "manner": 105, "manual": 326, "map": [63, 78, 80, 176, 212, 231, 237, 239, 243, 253, 282, 289, 304, 305, 308, 309, 310, 315, 321, 325, 326], "map_loc": 115, "mapassessor": 330, "margin": 308, "mark": 308, "mark_volatil": 108, "marker_s": 246, "mask": [7, 11, 140, 142, 246, 248, 254, 255, 256, 257, 259, 261, 262, 264, 315], "mask_data": 248, "mask_decod": [251, 257], "mask_decoder_hq": 251, "mask_imag": [140, 142, 315], "mask_impu_subset": 11, "mask_in_chan": 256, "mask_input": [257, 259, 262], "mask_postprocess": 262, "mask_threshold": [257, 261], "mask_to_rle_pytorch": 261, "maskbuild": 119, "maskdata": [248, 261], "maskdecod": [254, 257], "maskdecoderhq": 255, "maskfolderinst": [140, 142], "master": [60, 71, 72, 97, 98, 173, 184, 185, 209, 220, 221], "master_callback": [71, 97, 184, 220], "master_msg": [71, 97, 184, 220], "match": [263, 289, 304, 309, 316, 318, 320, 321, 332], "match_points_to_polygon": 309, "materi": [0, 1, 49, 335, 338], "mathemat": 304, "matrix": [1, 84], "matt": 336, "max": [127, 149, 242, 244, 308], "max_elements_per_cel": 308, "max_level": [60, 173, 209], "max_parse_level": 310, "max_record": 308, "max_sampl": 90, "max_siz": [74, 187, 223], "max_token": 190, "maximum": [301, 308, 314], "maxlat": 304, "maxlon": 304, "maxpool2d": [64, 177, 213], "maxpool2dstaticsamepad": [64, 177, 213], "maxrecordcount": 308, "maxscalenumpi": [127, 149], "mb": 0, "mbconvblock": [62, 175, 211], "mckenna": 336, "mdistanc": 136, "mean": [1, 57, 69, 74, 96, 107, 127, 149, 170, 182, 187, 206, 218, 223, 243, 331, 334], "measur": [0, 1, 248, 285, 293], "mecb": 25, "mecb_config": 25, "mechan": 310, "med_yr_blt": 332, "median": [127, 149, 331], "medianscalenumpi": [127, 149], "memori": [0, 62, 123, 124, 145, 146, 175, 211], "memory_effici": [62, 175, 211], "memoryefficientswish": [63, 176, 212], "merb": 26, "merb_config": 26, "merchant": [0, 1, 338], "merg": [127, 149, 304, 305, 307, 318, 320, 332], "merge_two_json": [11, 14, 17, 19, 39, 46], "merging_point_inventori": 318, "mesh": [287, 291, 301, 308, 309, 330], "mesh_polygon": 309, "messag": [3, 71, 97, 184, 220, 287, 291, 306, 308, 311], "met": [0, 1, 237, 239, 338], "meta": [74, 187, 223], "metadata": [2, 282, 299, 301, 304, 305, 314, 327], "meter": [285, 289, 321], "method": [0, 1, 5, 7, 9, 11, 14, 17, 19, 38, 39, 40, 42, 46, 49, 51, 62, 78, 80, 107, 126, 148, 164, 175, 192, 193, 197, 211, 224, 226, 233, 237, 259, 263, 264, 278, 280, 282, 283, 285, 287, 289, 291, 293, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332], "method_nam": 317, "methodnam": [73, 99, 186, 222], "methods_": [164, 224], "methods__": [231, 235], "metric": [78, 321], "meyer": 330, "mg": 321, "mh_config": 27, "mi": 321, "mi2": 321, "microsoft": [285, 302, 326], "mid_featur": 135, "might": [69, 96, 182, 218, 334], "min": [127, 149, 331], "min_area": 248, "min_depth": [63, 176, 212], "min_mask_region_area": 248, "mini": [69, 96, 107, 182, 218], "minim": [59, 172, 208], "minlat": 304, "minlon": 304, "mirror": [63, 176, 212], "mislabel": 311, "mismatch": 321, "miss": [3, 9, 11, 78, 80, 310, 313, 327, 331, 334], "mitig": 327, "mlp": [133, 254, 255], "mlp_dim": [252, 258], "mlp_ratio": 253, "mlpblock": 252, "mlri": 28, "mlri_config": 28, "mlrm": 29, "mlrm_config": 29, "mm": 321, "mm2": 321, "mmuh": 30, "mmuh_config": 30, "mnist": 140, "mnistinst": [140, 143], "mobil": [62, 175, 211], "mobilenet": 109, "mobilenet_v2": 111, "mobilenetv2": 111, "mobilenetv2dil": 112, "modal": 331, "mode": [63, 118, 123, 124, 127, 145, 146, 149, 176, 212, 261], "mode_nam": 84, "model": [38, 46, 49, 51, 54, 61, 63, 66, 69, 74, 76, 78, 80, 81, 83, 86, 164, 167, 174, 176, 179, 182, 187, 192, 203, 210, 212, 215, 218, 223, 224, 226, 231, 235, 239, 240, 241, 244, 247, 248, 259, 262, 263, 265, 266, 270, 304, 307, 313, 314, 330], "model_arch": [190, 192, 239], "model_descript": 313, "model_dir": [115, 119], "model_info": 270, "model_inp_s": 192, "model_nam": [62, 63, 66, 175, 176, 179, 211, 212, 215, 270], "model_path": [51, 65, 76, 78, 80, 164, 178, 192, 214, 224, 226, 231, 313], "model_properti": 192, "model_util": 307, "modelbuild": 112, "modelpath": [51, 80, 164, 224, 226, 264], "modelutil": [307, 313], "modelwithloss": [66, 179, 215], "modif": [0, 1, 338], "modifi": [59, 60, 83, 110, 111, 172, 173, 208, 209, 261, 262, 289, 304, 326, 327, 330], "modifiedresnet": 242, "modul": [0, 1, 2, 4, 6, 8, 10, 12, 13, 16, 18, 20, 41, 43, 47, 48, 50, 52, 54, 61, 67, 68, 75, 77, 79, 81, 82, 85, 86, 87, 94, 100, 102, 103, 109, 122, 130, 136, 140, 144, 152, 155, 160, 163, 165, 167, 174, 180, 181, 188, 191, 194, 196, 198, 200, 201, 203, 210, 216, 217, 225, 227, 230, 232, 234, 236, 238, 240, 245, 247, 251, 260, 265, 268, 275, 276, 279, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 303, 307, 316, 323, 327, 328, 329, 330, 332, 333], "modular": 330, "modulate_occ": [14, 42], "modulate_weight": [14, 42], "momentum": [69, 70, 96, 123, 124, 145, 146, 182, 183, 218, 219], "monkei": [72, 98, 185, 221], "more": [0, 63, 123, 124, 145, 146, 176, 212, 241, 254, 255, 301, 308, 325, 328, 330, 331, 334], "most": [0, 1, 62, 83, 175, 211, 312], "move": [74, 187, 223], "mp_dic": 11, "ms_class": 326, "ms_footprint_handl": [284, 330], "ms_footprint_scrap": [275, 330], "ms_footprintscrap": [285, 326, 330], "ms_inventori": 326, "ms_scraper": 326, "msf": 31, "msf_config": 31, "msg": [71, 97, 184, 220], "multi": [253, 304, 311], "multilinestr": 311, "multimask_output": [254, 255, 257, 259], "multinomi": [126, 148], "multipl": [60, 69, 72, 96, 98, 105, 173, 182, 185, 209, 218, 221, 254, 255, 257, 259, 285, 304, 308, 309, 331], "multipli": [63, 176, 212], "multipolygon": [309, 311], "multiscal": [60, 173, 209], "must": [0, 1, 5, 7, 60, 63, 123, 124, 145, 146, 173, 176, 193, 209, 212, 258, 278, 283, 287, 291, 304, 306, 321, 338], "mutualexclud": [127, 149], "mvit": 253, "mvitv2": 253, "my_data": 192, "my_image_set": 314, "my_predict": 314, "mydata": 330, "mymodel": 310, "n": [60, 69, 96, 126, 129, 148, 151, 173, 182, 209, 218, 256, 259, 270, 326, 332], "n_bldg_subset": 14, "n_head": 242, "n_layer": 261, "n_per_sid": 261, "n_point": 258, "n_possible_world": [11, 14, 17, 19, 39, 331], "n_pw": [11, 14, 19, 39, 46, 304], "na": [326, 331, 332], "name": [0, 1, 3, 55, 63, 66, 168, 176, 179, 192, 204, 212, 215, 226, 228, 229, 239, 241, 278, 289, 302, 304, 305, 306, 308, 310, 314, 317, 321, 326, 327, 330, 332], "namedloc": 330, "namedtupl": [62, 63, 175, 176, 211, 212], "narg": [326, 327, 332], "nation": [287, 289, 291, 332, 333, 335], "natur": [0, 333, 334, 336], "nb_epoch": 270, "nbi": 287, "nbi_scrap": 275, "nbiscrap": 287, "nbldg_per_clust": 11, "nbrs_g": 11, "nc": 315, "nceaverag": [122, 144], "ncecriterion": [122, 144], "ncefunct": [124, 146], "ncrop": [328, 329], "ndarrai": [57, 127, 149, 170, 206, 246, 248, 259, 261, 263, 315], "nearest": [11, 78, 127, 149], "nearestneighbour": 331, "necessari": [0, 1, 63, 107, 176, 212, 231, 287, 291, 301, 313], "necessarili": 335, "need": [0, 17, 53, 58, 59, 60, 63, 64, 66, 69, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 182, 183, 202, 207, 208, 209, 212, 213, 215, 218, 219, 242, 243, 252, 253, 254, 255, 258, 259, 262, 266, 271, 301, 313, 321, 326, 327, 328, 330, 334], "needed_featur": [19, 32], "needed_kei": [14, 17], "needs_input_grad": [63, 123, 124, 145, 146, 176, 212], "neeed": [330, 332], "neglig": [0, 1, 338], "neighbor": 11, "neither": [0, 1], "nepoch": [51, 76, 164, 192, 224, 226, 231], "nest": [51, 164, 224, 304, 311], "net": 270, "net_dec": 112, "net_enc": 112, "network": [0, 63, 69, 96, 127, 149, 176, 182, 212, 218, 308], "neural": [127, 149], "new": [9, 11, 14, 17, 19, 39, 40, 46, 76, 105, 192, 226, 248, 304, 305, 317, 328, 330, 332, 334], "new_featur": 304, "new_inventori": 331, "new_prop": 14, "new_stat": 261, "nfloor_detector": 200, "nfloor_gpt": 47, "nfloor_vlm": 47, "nfloordetector": [224, 329], "nfloorgpt": [197, 233], "nfloors_detector": 47, "nfloorsgpt": 329, "nfloorsvlm": 329, "nfloorvlm": 199, "nga": 332, "ngpu": [51, 164, 224], "nheri": [0, 1, 119, 243, 299, 333, 334, 336, 337], "nightli": [330, 332], "nj": 38, "nlem": [125, 147], "nm": [59, 172, 208, 248], "nms_thresh": 248, "nms_threshold": 246, "nn": [69, 93, 182, 218, 241, 252, 253, 254, 255, 256, 258], "no_urm": 42, "nois": [127, 149], "noisi": 0, "non": [11, 63, 105, 123, 124, 145, 146, 176, 212, 241, 253, 259, 310, 326], "none": [3, 7, 17, 19, 39, 49, 51, 55, 57, 59, 60, 62, 63, 66, 72, 74, 76, 80, 83, 98, 101, 112, 115, 123, 124, 140, 141, 142, 143, 145, 146, 164, 168, 170, 172, 173, 175, 176, 179, 185, 187, 189, 190, 192, 197, 199, 204, 206, 208, 209, 211, 212, 215, 221, 223, 224, 226, 231, 233, 235, 237, 239, 241, 242, 246, 248, 249, 250, 253, 256, 259, 261, 264, 266, 287, 291, 299, 302, 304, 305, 306, 308, 312, 313, 314, 315, 330], "noqa": 253, "nor": [0, 1], "norm": [59, 172, 208], "norm_lay": [253, 266], "normal": [57, 69, 70, 96, 122, 127, 144, 149, 170, 182, 183, 192, 206, 218, 219, 243, 253, 256, 257, 321], "normalize_unit": 321, "normalized_shap": 242, "normalizenumpi": [127, 149], "notadirectoryerror": [80, 192], "notat": [63, 176, 212], "note": [1, 3, 69, 72, 78, 96, 98, 182, 185, 218, 221, 289, 301, 304, 308, 309, 314, 321, 326], "notebook": 325, "notfounderror": [3, 310], "notic": [0, 1, 338], "notimplementederror": [192, 308], "notion": 1, "notsupportedcliexcept": 118, "now": [242, 332], "nowher": 330, "np": [248, 259, 315, 331], "npid": [0, 81], "npid_dataset": 136, "npid_lib": 136, "npid_model": 136, "npid_toolbox": 136, "npp": 11, "nr_slave": [71, 97, 184, 220], "nsampl": 304, "nsfloordetector": 329, "nsi": [289, 325, 333, 334], "nsi2brailsmap": 289, "nsi_class": 332, "nsi_data": 332, "nsi_inventori": 332, "nsi_inventory_subset": 332, "nsi_pars": [275, 332], "nsmall": 326, "nti": [80, 291], "nti_scrap": 275, "ntiscrap": 291, "num": [328, 329, 330], "num_anchor": [59, 172, 208], "num_channel": [59, 172, 208, 252], "num_class": [53, 59, 62, 63, 112, 113, 114, 133, 166, 172, 175, 176, 202, 208, 211, 212, 244, 266, 270], "num_dense_lay": 133, "num_epoch": [66, 179, 215], "num_featur": [69, 70, 96, 182, 183, 218, 219], "num_gpu": [66, 74, 179, 187, 215, 223], "num_head": [242, 253, 258], "num_lay": [59, 172, 208, 254, 255], "num_multimask_output": [254, 255], "num_point": 262, "num_pos_feat": 256, "num_repeat": [63, 176, 212], "num_sampl": [107, 314], "num_stori": 332, "num_window": 253, "num_work": [66, 179, 215], "number": [11, 46, 51, 60, 63, 76, 84, 107, 123, 124, 145, 146, 164, 173, 176, 192, 197, 199, 209, 212, 224, 226, 231, 233, 239, 241, 256, 257, 259, 289, 293, 301, 304, 308, 309, 314, 315, 326, 327, 331, 332, 334], "numberofstori": [14, 17, 19, 39, 330], "numberofstories_kei": [14, 17, 19, 39], "numberofunit": 39, "numberofunits_kei": 39, "numclass": 118, "numer": [69, 70, 96, 182, 183, 218, 219, 304, 321], "numpi": [60, 84, 127, 149, 173, 209, 263], "nums_block_list": 135, "nums_class": 135, "numstori": [326, 331, 332], "nuse": 326, "nx2": 259, "o": [327, 328, 329, 330, 331, 332], "o65dis": 332, "obj": [101, 108, 304, 310], "obj_list": [66, 74, 179, 187, 215, 223], "objdata": 310, "object": [0, 1, 7, 51, 55, 57, 63, 65, 66, 71, 72, 76, 78, 80, 97, 98, 105, 107, 112, 118, 119, 123, 124, 126, 127, 129, 145, 146, 148, 149, 151, 164, 168, 170, 176, 178, 179, 184, 185, 189, 192, 199, 204, 206, 212, 214, 215, 220, 221, 224, 226, 231, 235, 237, 239, 243, 246, 248, 259, 261, 263, 264, 285, 287, 289, 291, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 321, 330, 332, 333, 334], "observ": [0, 1], "obstruct": 0, "obtain": [5, 7, 71, 97, 184, 220, 261, 278, 280, 282, 283, 301, 306, 308, 326, 327, 328, 329, 332, 334, 337], "occ": [14, 42], "occlud": 330, "occtyp": 332, "occup": [226, 289, 329, 331, 332], "occupancy2": 331, "occupancy_classifi": 47, "occupancyclass": [14, 17, 19, 39], "occupancyclass_kei": [14, 17, 19, 39], "occupancyclassifi": [226, 329], "occur": [3, 84, 308, 313], "odgt": 90, "offer": 326, "offici": [63, 176, 212], "often": 259, "oldenburg": [0, 1], "older": [1, 241], "oldh": 263, "oldw": 263, "one": [0, 1, 11, 53, 58, 59, 60, 63, 64, 66, 69, 70, 71, 78, 84, 96, 97, 107, 112, 113, 114, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 145, 146, 147, 149, 150, 166, 171, 172, 173, 176, 177, 179, 182, 183, 184, 202, 207, 208, 209, 212, 213, 215, 218, 219, 220, 242, 252, 253, 254, 255, 258, 262, 266, 271, 304, 321, 325, 330, 331], "onli": [0, 1, 51, 69, 71, 96, 97, 164, 182, 184, 218, 220, 224, 259, 289, 304, 305, 309, 325, 331, 332], "onnx": [63, 176, 212, 260], "onnx_export": [59, 172, 208], "onward": 1, "open": [248, 311, 326, 327, 328, 329, 333], "openstreetmap": [293, 302, 326], "oper": [63, 105, 123, 124, 145, 146, 176, 192, 212, 304, 307, 309], "opinion": 335, "oppos": 242, "opposit": 309, "opt": 90, "optain": 278, "optim": [0, 1, 51, 66, 80, 83, 164, 179, 192, 215, 224, 241], "option": [1, 7, 42, 76, 80, 83, 164, 190, 192, 199, 224, 226, 235, 239, 246, 262, 289, 299, 304, 305, 306, 308, 309, 313, 314, 331], "optional_needed_kei": [14, 17], "order": [107, 304, 309, 330], "organ": [51, 164, 224, 287, 291, 325], "orient": [330, 333, 334], "orig_box": 261, "orig_h": 261, "orig_im_s": 262, "orig_net": 112, "orig_resnet": 112, "orig_w": 261, "origin": [0, 72, 98, 185, 221, 253, 257, 259, 261, 263, 304, 315, 332, 334], "original_image_s": 259, "original_s": [257, 263], "osm": [293, 302, 306, 308, 326], "osm_class": 326, "osm_footprint_scrap": [275, 330], "osm_footprintscrap": [293, 326, 330, 332], "osm_footprintsscrap": 326, "osm_inventori": 326, "osm_power_network_scrap": 275, "osm_scrap": 326, "other": [0, 1, 63, 105, 123, 124, 145, 146, 176, 212, 226, 239, 285, 289, 308, 325, 331, 338], "other_data_path": [140, 142], "other_idea": 47, "otherwis": [0, 1, 63, 83, 176, 212, 248, 304, 305, 309, 310, 311, 312, 321, 338], "ounc": 321, "out": [0, 1, 289, 326, 332, 334, 338], "out_chan": 253, "out_channel": [59, 63, 64, 131, 132, 172, 176, 177, 208, 212, 213], "out_featur": 135, "out_plan": [112, 271], "outcom": [126, 148], "outfil": 289, "outlier": [0, 1], "outlin": [0, 331, 336], "output": [5, 7, 62, 63, 69, 80, 84, 96, 123, 124, 145, 146, 175, 176, 182, 211, 212, 218, 259, 261, 263, 289, 302, 304, 309, 314, 321, 325, 326, 331, 332], "output_devic": [72, 98, 101, 185, 221], "output_dim": [133, 242, 254, 255], "output_dim_ff": 133, "output_dir": [7, 246, 264, 315], "output_fil": [190, 304, 309], "output_filt": [63, 176, 212], "output_mod": 248, "output_path": 264, "output_s": 133, "outputfil": 302, "outputs": [123, 124, 145, 146], "outsid": 289, "over": [69, 80, 84, 96, 107, 182, 192, 218, 226, 248, 257, 309], "overlai": [315, 326], "overlaid": 315, "overlap": [105, 253], "overlap_ratio": 261, "overrid": [63, 105, 123, 124, 145, 146, 176, 212, 331], "overridden": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271], "override_param": [62, 63, 175, 176, 211, 212], "overs": 308, "overture_maps_scrap": 275, "overview": 326, "overwirte_exist": [14, 17, 19, 39], "overwrit": [46, 304], "own": [248, 326], "oz": 321, "p": [63, 90, 119, 127, 149, 176, 212, 332], "p1": 309, "p2": 309, "p3_0": [59, 172, 208], "p3_2": [59, 172, 208], "p4_0": [59, 172, 208], "p4_1": [59, 172, 208], "p4_2": [59, 172, 208], "p5_0": [59, 172, 208], "p5_1": [59, 172, 208], "p5_2": [59, 172, 208], "p6_0": [59, 172, 208], "p6_1": [59, 172, 208], "p6_2": [59, 172, 208], "p7_0": [59, 172, 208], "p7_2": [59, 172, 208], "packag": [0, 127, 149, 304, 310, 323], "package_nam": 310, "package_path": 310, "pad": [63, 64, 84, 176, 177, 212, 213, 253, 257, 271], "pad_hw": 253, "page": [325, 333], "pair": [243, 302, 304, 305, 311], "pano": [328, 329], "paper": [253, 336], "parallel": [71, 72, 94, 97, 98, 184, 185, 220, 221, 308], "param": [55, 63, 83, 123, 124, 145, 146, 168, 176, 204, 212], "paramet": [0, 1, 3, 51, 55, 62, 63, 69, 80, 83, 84, 96, 164, 168, 175, 176, 182, 204, 211, 212, 218, 224, 239, 242, 248, 282, 308], "parameters__": 192, "parent": 237, "pars": [0, 1, 78, 118, 302, 308, 310, 321, 326, 327, 328, 329, 330, 332], "parse_aim": 38, "parse_arg": [326, 327, 328, 329, 330, 332], "parse_devic": 118, "parse_input_list": 90, "parse_unit": 321, "parsed_api_kei": 327, "parser": [326, 327, 328, 329, 330, 332], "part": [0, 309], "particular": [0, 1, 304, 338], "particularli": 326, "partit": 253, "pass": [53, 58, 59, 60, 63, 64, 66, 70, 71, 97, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 184, 202, 207, 208, 209, 212, 213, 215, 219, 220, 242, 252, 253, 254, 255, 257, 258, 259, 262, 266, 271, 308, 311, 312, 334], "patch": [72, 98, 185, 221, 253], "patch_replication_callback": [72, 98, 185, 221], "patch_siz": [242, 253], "patch_sync_batchnorm": [69, 182, 218], "patchemb": 253, "path": [0, 1, 5, 7, 51, 53, 76, 78, 80, 140, 142, 164, 166, 192, 202, 224, 226, 231, 241, 264, 280, 282, 283, 304, 305, 310, 311, 313, 314, 315, 327, 328, 329, 330, 331, 332], "path_to_dir": 305, "pathlib": [328, 329], "pd": [78, 304], "peak": [127, 149], "per": [69, 96, 182, 192, 218, 226, 231, 301, 308, 321], "percentag": [243, 331], "perf": 1, "perfect": [326, 331, 332], "perform": [0, 1, 51, 53, 58, 59, 60, 63, 64, 66, 70, 76, 80, 83, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 164, 166, 171, 172, 173, 176, 177, 179, 183, 192, 202, 207, 208, 209, 212, 213, 215, 219, 224, 226, 242, 252, 253, 254, 255, 258, 262, 266, 271, 304, 308, 309, 311, 317, 318, 320, 321, 326, 332], "period": 326, "permiss": [0, 1], "permit": [0, 1, 338], "perturb": 1, "pic": 119, "piec": [84, 331], "pier": 0, "pil": [127, 149, 241], "pile": 0, "pip": [0, 1, 337], "pipe": [71, 97, 184, 220], "pitch": 78, "pixel": [248, 257, 259], "pixel_acc": 112, "pixel_mean": 257, "pixel_std": 257, "pkl": 80, "place": [71, 78, 97, 114, 184, 220, 248, 304, 328, 330], "plai": 325, "plainradam": 83, "plan": [289, 328], "planarea": [14, 17, 39], "planarea_kei": [14, 17, 39], "plane": 242, "platform": 326, "platt": [127, 149], "pleas": [0, 308, 328, 329, 336], "plot": [76, 192, 226, 231, 301, 308, 309, 314], "plot_accuraci": 192, "plot_cel": [301, 308], "plot_loss": [76, 226, 231], "plot_mesh": 308, "plot_one_box": [74, 187, 223], "plot_polygon_cel": [308, 309], "plot_tool": 307, "plottool": [307, 314], "pmg": 271, "png": [0, 309, 311], "point": [1, 248, 254, 255, 256, 257, 258, 259, 261, 289, 302, 304, 309, 311, 316, 318, 319, 320, 326, 327, 331, 332], "point_coord": [248, 257, 259, 262], "point_embed": 258, "point_grid": 248, "point_inventori": [319, 320], "point_label": [257, 259, 262], "points_per_batch": 248, "points_per_sid": 248, "poisson": [127, 149], "poisson_downsampl": [127, 149], "poissonsubsampl": [127, 149], "poli": 309, "polygon": [51, 164, 224, 289, 301, 304, 306, 308, 309, 311, 316, 319, 320], "polygon_inventori": [319, 320], "pool": 242, "pool_scal": 112, "pop2amo65": 332, "pop2amu65": 332, "pop2pmo65": 332, "pop2pmu65": 332, "popual": 38, "popul": 38, "posit": [80, 253, 254, 255, 256, 258, 304], "position": 256, "positionembeddingrandom": 256, "possibl": [0, 1, 11, 46, 80, 304, 330, 331, 334, 338], "possibli": 105, "post": 0, "postfirm": 19, "postfirm_kei": 19, "postfirm_year_by_c": 19, "postprocess": [74, 187, 223, 262], "postprocess_mask": 257, "postprocess_small_region": 248, "pound": 321, "power": [128, 150], "ppm": 112, "ppm_deepsup": [112, 119], "ppmdeepsup": 112, "ppp": 0, "ppp_build": 0, "practic": [127, 149], "pre": [51, 76, 80, 111, 113, 114, 134, 164, 192, 224, 266, 313], "pred": [65, 74, 112, 118, 178, 187, 214, 223], "pred_idx_to_label": 244, "pred_iou_thresh": 248, "predefin": 237, "predict": [1, 49, 51, 65, 76, 78, 80, 164, 178, 189, 192, 193, 197, 199, 214, 224, 226, 228, 229, 231, 233, 235, 237, 239, 248, 254, 255, 257, 259, 261, 264, 304, 314, 329], "predict_mask": [254, 255], "predict_torch": 259, "predict_wrapp": 244, "predicted_i": 248, "prediction_df": 244, "predictionsari": 330, "predictionsstreet": 330, "predictor": [80, 224, 247], "prefer": 0, "prefix": 0, "preliminari": 308, "preliminary_cel": 308, "prepar": [192, 226], "prepend": 242, "preprocess": [74, 80, 187, 223, 241, 244, 257], "preprocess_batch_img": 244, "preprocess_video": [74, 187, 223], "prescrib": 334, "present": [257, 304, 309, 314, 325], "preset": 304, "pretrain": [63, 110, 111, 113, 114, 115, 134, 176, 212, 266, 270], "previou": [0, 259, 325], "prictur": 330, "primari": [317, 318], "primarili": 325, "primit": [304, 331], "print": [55, 168, 204, 304, 305, 308, 321, 326, 327, 328, 329, 330, 331, 332], "print_info": [304, 305, 326, 327, 328, 329, 330, 332], "print_output": 332, "prior": [0, 1, 325, 328], "prob": [126, 148], "probabl": 107, "proc": [127, 149], "proce": 331, "procedure__": 192, "process": [0, 51, 78, 80, 164, 224, 239, 258, 287, 289, 291, 293, 299, 304, 306, 308, 326, 327, 328, 332], "process_rang": 118, "processor": [0, 2, 325, 328, 331, 333, 334], "procur": [0, 1, 338], "produc": [0, 105, 259, 325, 328, 329, 330, 331], "product": [0, 1], "profit": [0, 1, 338], "progress": [266, 308, 325], "project": 258, "promot": [0, 1], "prompt": [190, 199, 235, 237, 239, 254, 255, 256, 257, 259, 262, 330], "prompt_and_save_capt": 190, "prompt_encod": [251, 257], "prompt_str": 189, "promptencod": [256, 257], "promptsfornumfloor": 330, "propag": 253, "proper": 304, "properli": 226, "properti": [1, 7, 71, 78, 97, 105, 184, 220, 242, 246, 257, 259, 304, 305], "provid": [0, 1, 17, 38, 46, 49, 51, 76, 80, 105, 107, 164, 192, 193, 197, 224, 226, 231, 233, 235, 257, 259, 263, 280, 282, 285, 289, 293, 301, 304, 306, 308, 309, 311, 312, 313, 314, 315, 318, 320, 321, 325, 326, 328, 329, 331, 334, 336, 338], "proxim": [318, 320], "pth": [51, 66, 119, 164, 179, 192, 215, 224], "publish": 336, "pulsar": 299, "pulsar_image_extractor": 299, "pure": 193, "purpos": [0, 1, 105, 314, 327, 328, 329, 330, 332, 338], "put": [1, 71, 97, 184, 220, 241, 333], "pwd": [0, 1], "py": [0, 1, 60, 127, 149, 173, 209, 253, 326, 327, 328, 329, 330, 331, 332], "pycoco": 261, "pypi": [330, 332, 337], "pyramid_level": [60, 173, 209], "python": [140, 141, 325, 328, 330, 331], "python3": [0, 1, 127, 149, 326, 328, 329, 330, 331, 332], "python_env": [127, 149], "pythonpath": [0, 1], "pytorch": [69, 70, 96, 111, 182, 183, 192, 218, 219], "q": [253, 258], "q_h": 253, "q_size": 253, "q_w": 253, "qg": 330, "qkv": 242, "qkv_bia": 253, "quadkei": 285, "qualit": 314, "qualiti": [0, 248, 254, 255, 257, 259, 326], "quatntati": 331, "queri": [253, 258, 293, 306, 308], "query_p": 258, "queryarea": 302, "queue": [71, 97, 184, 220], "quick": [140, 142, 326, 327, 328, 329], "quickgelu": 242, "r": [0, 1, 63, 123, 124, 135, 145, 146, 176, 212, 327, 328, 329], "r6q": 332, "radam": 82, "rais": [3, 60, 78, 80, 173, 209, 237, 239, 280, 282, 287, 291, 301, 304, 306, 308, 309, 310, 312, 313, 317, 321, 327, 328, 329], "raises__": 192, "randn": [69, 96, 182, 218], "random": [0, 1, 127, 149, 256, 304, 326, 327, 328, 329], "random_num_gener": [127, 149], "random_split": 105, "random_st": [127, 149], "randomcropnumpi": [127, 149], "randomgaussianblur": [127, 149], "randomli": [105, 107, 127, 149, 304, 314, 328, 329], "randomrot": [127, 149], "randomsampl": 107, "rang": [1, 55, 105, 107, 168, 204, 304, 311], "range_max": [127, 149], "range_min": [127, 149], "rapid": 299, "rapid_image_processor": 275, "rapidimageprocessor": 299, "rate": [51, 62, 164, 175, 211, 224], "rather": 325, "ratio": [308, 314], "raw": [289, 328, 332], "rcc": 76, "re": [0, 51, 70, 164, 183, 219, 224, 243, 259, 330, 332, 334], "reach": 0, "read": [289, 304, 311, 328, 329, 330], "read_from_csv": [304, 331], "readabl": [63, 176, 212, 304, 306, 310, 313, 321], "readlin": [327, 328, 329], "real": [64, 177, 213, 326], "realiz": [11, 46, 304], "receiv": [71, 97, 184, 220], "receiving_point_inventori": 318, "recent": 312, "recip": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271], "recogn": 321, "recognit": [127, 149], "recommend": [257, 335], "record": [248, 308], "rectangl": 309, "rectangular": [293, 308, 309], "recurs": [69, 182, 218, 304, 308], "redistribut": [0, 1, 338], "reduc": [69, 96, 182, 218, 304], "reevalu": 83, "refer": [74, 187, 223, 304, 321, 336], "refin": 308, "reflect": [1, 127, 149, 335], "reformat": 321, "regent": [0, 1, 338], "regim": 1, "region": [14, 42, 127, 149, 248, 261, 278, 285, 287, 289, 291, 293, 301, 306, 308, 325, 326, 327, 332, 333, 334, 336], "region_boundari": [303, 330], "region_boundary_class": [326, 327, 328, 329, 330, 332], "region_boundary_object": [326, 327, 328, 329, 330, 332], "regionboundari": [278, 285, 287, 289, 291, 293, 301, 306, 326, 327, 328, 329, 330, 332, 334], "regioninput": 306, "regist": [53, 58, 59, 60, 63, 64, 66, 70, 71, 97, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 184, 202, 207, 208, 209, 212, 213, 215, 219, 220, 242, 252, 253, 254, 255, 258, 262, 266, 271], "register_slav": [71, 97, 184, 220], "regress": [58, 60, 74, 171, 173, 187, 207, 209, 223], "regressbox": [74, 187, 223], "regressor": [59, 74, 172, 187, 208, 223], "rel": [80, 253], "rel_po": 253, "rel_pos_h": 253, "rel_pos_w": 253, "rel_pos_zero_init": 253, "relat": [199, 237, 261, 305], "relationship": [318, 319], "releas": 333, "relev": [38, 285, 289], "reli": [313, 327], "relu": [112, 258, 271], "remain": 0, "remov": [0, 127, 149, 248, 253, 257, 261, 304, 314, 328, 330, 334], "remove_asset": 304, "remove_featur": 304, "remove_small_region": 261, "removebackgroundnois": 330, "removetre": 330, "renam": 304, "repaircost": [331, 332], "repeat": [63, 176, 212], "replac": [69, 107, 182, 218, 289, 304, 309, 331], "replace_stride_with_dil": 266, "replace_w_sync_bn": [74, 187, 223], "replacementcost": [14, 17, 39], "replacementcost_kei": [14, 17], "replic": [68, 71, 95, 97, 181, 184, 217, 220], "report": [0, 51, 164, 224, 312], "repositori": [0, 1, 63, 110, 111, 176, 212, 336], "repres": [0, 1, 9, 40, 60, 63, 105, 123, 124, 145, 146, 173, 176, 199, 209, 212, 237, 243, 278, 287, 291, 304, 305, 306, 308, 309, 311, 314, 315, 325, 331], "represent": [241, 304, 315, 321], "reproduc": [0, 1, 11, 46, 304, 338], "request": [282, 308, 331], "requested_field": 308, "requir": [0, 1, 3, 51, 63, 78, 123, 124, 145, 146, 164, 176, 193, 212, 224, 226, 231, 241, 248, 263, 264, 304, 310, 325, 326, 327, 332], "require_grad": 270, "rerun": 248, "res1": [331, 332], "res3_ab_to_res1": 42, "res3a": [331, 332], "research": 333, "reserv": 338, "reset": [129, 151, 259], "reset_imag": 259, "reset_paramet": [70, 183, 219], "reset_running_stat": [70, 183, 219], "residenti": [226, 331], "residu": [62, 175, 211, 253], "residual_attention_network": 130, "residualattentionblock": 242, "residualattentionmodel_92": 133, "residualattentionmodel_92_32input": 133, "residualattentionmodel_92_32input_upd": 133, "residualattentionmodel_92_smal": 133, "residualattentionmodel_92_small_1d": 133, "residualblock": 132, "residualblock1d": 132, "resiz": [57, 80, 127, 149, 170, 192, 206, 257, 263, 314], "resize_longest_image_s": 262, "resizelongestsid": [259, 263], "resnet": [0, 109, 112, 114, 134, 152, 242, 265], "resnet101": [113, 134, 266], "resnet152": [134, 266], "resnet18": [69, 113, 134, 182, 218, 266], "resnet34": [134, 266], "resnet50": [113, 134, 192, 266], "resnet50dil": [112, 119], "resnet_appli": 130, "resnet_cifar": 152, "resnetdil": 112, "resnext": 109, "resnext101": 114, "resnext101_32x8d": 266, "resnext50_32x4d": 266, "resolut": [257, 259, 282], "resolv": [321, 328, 329], "resourc": [325, 327], "respect": [192, 226], "respons": [289, 308], "result": [0, 1, 51, 71, 80, 97, 164, 184, 220, 224, 241, 259, 287, 289, 291, 315, 317, 320, 326, 331], "resum": 0, "retain": [0, 1, 338], "retrain": [51, 76, 164, 192, 224, 226, 231], "retri": 308, "retriev": [63, 80, 105, 123, 124, 145, 146, 176, 212, 280, 282, 283, 285, 287, 289, 291, 293, 301, 304, 305, 306, 308, 310, 321, 326, 327, 330], "return": [5, 7, 9, 11, 14, 17, 19, 39, 40, 46, 49, 55, 60, 62, 63, 71, 78, 80, 83, 97, 107, 111, 113, 114, 123, 124, 134, 140, 142, 145, 146, 168, 173, 175, 176, 184, 192, 193, 197, 204, 209, 211, 212, 220, 226, 231, 233, 235, 237, 239, 243, 248, 253, 254, 255, 256, 257, 258, 259, 261, 264, 266, 278, 280, 282, 283, 285, 287, 289, 291, 293, 299, 301, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 321, 326, 327, 328, 329, 330, 331], "return_count": 118, "return_extra_metr": 262, "return_feature_map": 112, "return_index": 118, "return_invers": 118, "return_logit": 259, "return_single_mask": 262, "returns_": 51, "returns__": [164, 192, 224, 231], "revers": 243, "rgb": [118, 257, 259, 315], "right": [0, 1, 338], "risk": 328, "rle": [248, 261], "rle_to_mask": 261, "rm1": [331, 332], "rn101": 239, "rn50": 239, "rn50x16": 239, "rn50x4": 239, "rn50x64": 239, "roof": [78, 231, 235, 329, 330, 331, 334], "roof_shape_classifi": 47, "roof_shape_gpt": 47, "roof_shape_vlm": 47, "roof_typ": 304, "roofeaveheight": 78, "roofpitch": 78, "roofshap": [39, 326, 330, 331, 332], "roofshape_kei": 39, "roofshapeclassifi": [231, 329], "roofshapeclip": 330, "roofshapegpt": 233, "roofshapevlm": 235, "roofslop": 39, "roofslope_kei": 39, "roofsystem": 39, "roofsystem_kei": 39, "root": [140, 141, 142, 143, 310], "root_dataset": 90, "root_dir": [57, 66, 118, 170, 179, 206, 215], "rotat": [127, 149], "round": [63, 78, 176, 212, 244], "round2nearest_multipl": [90, 119], "round_filt": [63, 176, 212], "round_repeat": [63, 176, 212], "row": [0, 1, 84, 107, 309, 331], "rtol": 99, "rule": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 311], "ruleset": [14, 19, 39, 42], "run": [1, 53, 58, 59, 60, 63, 64, 66, 69, 70, 96, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 182, 183, 202, 207, 208, 209, 212, 213, 215, 218, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271, 317, 325, 326, 327, 328, 329, 330, 331, 332], "run_mast": [71, 97, 184, 220], "run_on_one_imag": 246, "run_slav": [71, 97, 184, 220], "running_mean": [69, 96, 182, 218], "running_var": [69, 96, 182, 218], "runtest": [73, 99, 186, 222], "s1": 331, "safe": [71, 97, 184, 220, 311], "sai": 243, "sam": [248, 251, 259, 262, 330], "sam_model": 259, "sam_predictor": 246, "samautomaticmaskgener": 248, "same": [0, 1, 51, 60, 64, 69, 96, 107, 164, 173, 177, 182, 193, 209, 213, 218, 224, 231, 258, 304, 309, 311, 321, 328, 331], "samonnxmodel": 262, "sampl": [11, 46, 57, 69, 96, 105, 107, 126, 148, 170, 182, 192, 206, 218, 226, 231, 304, 314, 326, 328, 329, 331], "sample_d": 11, "sampler": 103, "sampredictor": [246, 257, 259], "sanjai": 336, "sascha": [0, 1, 336], "satellit": [280, 326, 327], "satelliteimagesourc": 330, "satisfi": [55, 168, 204], "save": [1, 5, 7, 63, 123, 124, 145, 146, 176, 192, 212, 264, 280, 282, 283, 299, 301, 308, 309, 315, 331], "save_checkpoint": [66, 179, 215], "save_directori": [280, 282, 283], "save_for_backward": [63, 123, 124, 145, 146, 176, 212], "save_for_forward": [63, 123, 124, 145, 146, 176, 212], "save_interv": [66, 179, 215], "save_masked_imag": [0, 81], "save_respons": 189, "saved_path": 264, "scalar": 304, "scale": [60, 105, 127, 149, 173, 209, 256, 333, 334, 336], "scale_per_lay": 261, "scatter": [74, 101, 187, 223], "schoettler": 336, "scienc": [331, 333, 335], "scope": 310, "score": [0, 7, 74, 187, 223, 246, 259, 261], "scrape": [287, 289, 291, 293], "scraper": [2, 326, 327, 328, 329, 330, 332, 334], "scraper_class": [327, 328, 329, 330, 332], "scraper_inventori": 332, "scraper_typ": 330, "script": [1, 262, 325, 326, 327, 328, 329, 330, 331, 332], "se_ratio": [63, 176, 212], "sea": [126, 148], "seamlessli": 330, "search": [330, 333], "secb": 33, "secb_config": 33, "second": [304, 308, 309, 331], "secondari": 317, "section": 0, "see": [0, 62, 63, 70, 71, 84, 97, 123, 124, 145, 146, 175, 176, 183, 184, 211, 212, 219, 220, 254, 255, 262, 326, 330], "seed": [11, 14, 17, 19, 39, 46, 304, 328, 329], "seen": [0, 1, 69, 96, 182, 218], "segm": 90, "segm_transform": 90, "segment": [110, 246, 248, 315, 330, 334], "segment_anyth": 245, "segmentation_util": 307, "segmentationmodul": 112, "segmentationmodulebas": 112, "segsiz": 112, "select": [11, 259, 289, 304, 309, 320, 327, 328, 329, 332], "select_mask": 262, "self": [51, 80, 105, 123, 124, 145, 146, 164, 224, 226, 304], "semant": [1, 110], "semi": 0, "send": [71, 74, 97, 184, 187, 192, 220, 223, 308], "sens": 331, "sent": [71, 97, 184, 220], "separ": [0, 1, 63, 123, 124, 145, 146, 176, 212, 304], "separableconv": [74, 187, 223], "separableconvblock": [59, 172, 208], "seper": 326, "sequenc": [72, 98, 101, 105, 185, 221, 253, 311], "sequenti": [11, 107], "sequential_imput": 11, "sequentialsampl": 107, "serb": 34, "serb_config": 34, "seri": [325, 330], "serial": 304, "serv": 231, "server": [308, 325], "servic": [0, 1, 307, 308, 338], "set": [0, 1, 5, 7, 49, 51, 62, 63, 69, 80, 84, 96, 123, 124, 145, 146, 164, 175, 176, 182, 192, 193, 197, 211, 212, 218, 224, 226, 231, 233, 235, 237, 243, 246, 256, 259, 264, 289, 301, 304, 305, 314, 325, 326, 327, 331, 332, 334], "set_dir": [57, 66, 170, 179, 206, 215], "set_directori": 305, "set_fixed_param": [66, 164, 179, 215, 224], "set_hyperparam": [66, 179, 215], "set_imag": [259, 305], "set_model": [66, 179, 215], "set_swish": [62, 175, 211], "set_torch_imag": 259, "set_train_dataset": [66, 179, 215], "set_val_dataset": [66, 179, 215], "setup": [51, 164, 224, 323, 330], "setup_context": [63, 123, 124, 145, 146, 176, 212], "setup_logg": 118, "sever": [127, 149, 325], "sgd": 192, "shall": [0, 1, 338], "shape": [60, 69, 96, 127, 149, 173, 182, 209, 218, 231, 235, 241, 248, 253, 254, 255, 256, 257, 258, 259, 261, 263, 304, 306, 308, 309, 329, 331], "share": [62, 72, 98, 175, 185, 211, 221, 318, 320], "sheathingthick": 39, "sheathingthickness_kei": 39, "short": [21, 321], "shorter": 1, "shortest": 309, "shot": [7, 11, 246], "should": [0, 1, 3, 53, 58, 59, 60, 63, 64, 66, 70, 71, 78, 83, 97, 105, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 184, 192, 202, 207, 208, 209, 212, 213, 215, 219, 220, 226, 242, 252, 253, 254, 255, 257, 258, 262, 266, 271, 314], "show": [1, 328, 329, 330, 332], "show_binary_mask": 246, "show_box": 246, "show_point": 246, "show_predict": 314, "shown": [0, 1, 325, 326, 331, 332], "shrink": [11, 14, 17, 19, 39, 46], "side": [263, 309], "sideffect": 84, "sigma": [127, 149], "sigmoid_output": [254, 255], "signal": 84, "signifi": 1, "signific": 243, "significantli": 0, "silenc": 39, "silent": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271, 312], "simard": [127, 149], "simard2003": [127, 149], "simcent": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "simcenter_infer": 12, "simcenterinfer": 42, "similar": [242, 244, 306], "simpl": [326, 330, 331], "simple_token": 240, "simpletoken": 243, "simul": [333, 334, 336], "sinc": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 241, 242, 252, 253, 254, 255, 258, 262, 266, 271, 325, 326], "singl": [0, 1, 83, 193, 239, 254, 255, 257, 259, 304, 308, 311, 331], "site": [127, 149], "size": [60, 63, 69, 76, 84, 90, 96, 105, 107, 127, 131, 149, 173, 176, 182, 192, 209, 212, 218, 242, 253, 256, 257, 258, 259, 261, 263, 304], "size1": 131, "size2": 131, "size3": 131, "size4": 131, "skconv": 135, "skip": [55, 168, 204], "skip_first_layer_p": 258, "sknet": 130, "sknet101": 135, "sknet26": 135, "sknet50": 135, "skunit": 135, "slave": [71, 72, 97, 98, 184, 185, 220, 221], "slavepip": [71, 97, 184, 220], "slice": [69, 96, 127, 149, 182, 218], "slide": 84, "sliding_window": 84, "slightli": [140, 142], "small": [248, 261, 326, 332], "small_inventori": [326, 327, 328, 329, 330], "smaller": [0, 287, 291, 301, 304, 308, 326, 332], "smallinv": 332, "so": [0, 1, 311, 328], "soft": 1, "softwar": [0, 1, 338], "some": [0, 42, 72, 98, 185, 221, 262, 325, 331, 334], "someth": 243, "sourc": [0, 1, 306, 321, 326, 332, 333, 338], "space": [11, 261], "spacial_dim": 242, "spars": 256, "sparse_prompt_embed": [254, 255], "spatial": [11, 69, 96, 182, 218, 253, 256, 259, 304, 307, 316, 317, 318, 319, 320], "spatial_join_method": 307, "spatialjoinmethod": [307, 317, 318, 319, 320], "spatio": [69, 96, 182, 218], "special": [0, 1, 76, 338], "specif": [0, 1, 3, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 293, 299, 304, 306, 308, 311, 319, 331], "specifi": [5, 7, 51, 55, 63, 76, 80, 83, 164, 168, 176, 192, 204, 212, 224, 256, 280, 282, 285, 287, 289, 291, 301, 304, 306, 308, 309, 310, 314, 326, 327, 332], "speckl": [127, 149], "speed": 0, "sphinx": [127, 149, 333, 334], "spline_ord": [127, 149], "split": [74, 105, 127, 149, 187, 192, 223, 287, 289, 291, 301, 308, 309, 330], "split_polygon_into_cel": 308, "splitlevel": [14, 17, 19], "splitlevel_kei": [14, 17, 19], "spmb": 35, "spmb_config": 35, "spolygon": 309, "sqft": [321, 332], "sqrt": [69, 96, 182, 218], "squar": [127, 149, 257, 321], "squeez": [62, 175, 211], "st_damcat": 332, "stabil": [69, 70, 96, 182, 183, 218, 219, 261], "stability_scor": 248, "stability_score_offset": 248, "stability_score_thresh": 248, "stack": [60, 173, 209], "stage": [51, 164, 224, 320], "standard": [0, 1, 21, 62, 69, 96, 118, 175, 182, 211, 218, 311, 321], "standard_to_bgr": [74, 187, 223], "start": [0, 1, 51, 164, 224, 326, 328], "start_idx": 90, "start_train": [66, 179, 215], "state": [0, 237, 326, 330], "state_dict": [241, 242], "statement": 330, "static": [63, 105, 112, 123, 124, 145, 146, 176, 212, 248, 262, 263, 307, 309, 311, 312, 313, 314, 317, 321], "staticmethod": [63, 123, 124, 145, 146, 176, 212], "statist": [69, 96, 182, 218, 331], "std": [1, 57, 74, 127, 149, 170, 187, 206, 223], "stderr": 266, "steinkrau": [127, 149], "stella": 336, "stem": 242, "step": [0, 83, 325, 328, 329], "stepsiz": 84, "stl": 76, "stochast": 192, "stop": 192, "store": [51, 63, 78, 118, 123, 124, 129, 145, 146, 151, 164, 176, 212, 224, 261, 289, 304, 305, 306, 326, 330, 332], "stori": 293, "str": [3, 5, 7, 11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 51, 55, 76, 78, 80, 118, 140, 141, 142, 143, 164, 168, 192, 199, 204, 224, 226, 231, 237, 239, 241, 243, 246, 248, 257, 259, 261, 280, 282, 283, 285, 287, 289, 291, 293, 299, 301, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 317, 321, 326, 327, 328, 329, 330, 332], "str_type": 304, "straight": [63, 176, 212], "strategi": [308, 316, 318, 320], "street": [78, 199, 226, 237, 264, 282, 299, 326, 327, 328, 329], "street_im": 327, "street_imag": 78, "street_level_damage_detect": 47, "street_processor": 227, "streetfilt": 330, "streetimagessourc": 330, "streetprocessor": 229, "streetview": [1, 328, 329], "streev": 328, "strict": [0, 1, 338], "stride": [60, 63, 64, 84, 112, 132, 135, 173, 176, 177, 209, 212, 213, 242, 253, 271], "strides_list": 135, "string": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 63, 80, 176, 212, 241, 243, 289, 302, 304, 306, 308, 309, 311, 314, 321], "string_list": [63, 176, 212], "strip": [327, 328, 329], "structur": [0, 1, 51, 164, 224, 226, 261, 289, 301, 302, 304, 311, 314, 326, 330, 332], "structure_typ": [14, 42], "structuretyp": [14, 17, 39], "structuretype_kei": [14, 17], "student": 332, "stuff": 264, "style": 1, "sub": [0, 72, 98, 185, 221], "subclass": [5, 7, 53, 58, 59, 60, 63, 64, 66, 70, 105, 107, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 140, 141, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271, 278, 280, 283, 317, 330], "subdirectori": [226, 310], "subfold": 1, "subsampl": [127, 149, 327, 328, 329], "subsequ": [257, 259, 327], "subset": [105, 304, 325, 326, 327, 328, 329, 332], "subset_nsi_processed_data": 332, "subsetrandomsampl": 107, "substitut": [0, 1, 331, 338], "success": 311, "successfulli": 304, "suffic": 0, "suffici": 226, "suggest": [0, 1, 328], "suitabl": [1, 309], "sum": [69, 96, 107, 182, 218], "summari": [304, 310, 326], "summary_writ": 84, "supercategori": [55, 168, 204], "supnm": [55, 168, 204], "suppli": [0, 1, 80, 331], "support": [1, 80, 105, 192, 239, 253, 262, 282, 285, 289, 304, 308, 311, 314, 321, 327, 335], "surfac": 309, "survei": 326, "swish": [62, 63, 175, 176, 211, 212], "swishimplement": [63, 176, 212], "sy": [330, 331, 332], "symbol": 243, "sync_batchnorm": [67, 180, 216], "sync_bn": [72, 98, 185, 221], "syncbn": [69, 182, 218], "synchron": [69, 70, 96, 182, 183, 218, 219], "synchronizedbatchnorm": [69, 182, 218], "synchronizedbatchnorm1d": [69, 72, 96, 98, 182, 185, 218, 221], "synchronizedbatchnorm2d": [69, 96, 182, 218], "synchronizedbatchnorm3d": [69, 96, 182, 218], "syncmast": [71, 97, 184, 220], "system": [51, 164, 224, 304, 310], "system_dict": [51, 164, 224], "t": [63, 72, 98, 101, 123, 124, 145, 146, 176, 185, 212, 221, 270, 313], "tabl": [243, 304], "taciroglu": 336, "take": [0, 53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 241, 242, 252, 253, 254, 255, 258, 262, 266, 271, 285, 327, 331, 334], "taken": [1, 334], "tar": [140, 141], "target": [105, 125, 127, 147, 149, 263, 321], "target_height": [127, 149], "target_kei": [14, 17], "target_length": 263, "target_tensor": 105, "target_transform": [140, 141, 142, 143], "target_width": [127, 149], "task": [0, 51, 164, 224, 287, 291, 308, 309, 318], "task_descript": 308, "techniqu": [326, 327, 331], "templat": 239, "tempor": [69, 96, 182, 218], "tensor": [57, 62, 63, 69, 74, 96, 105, 123, 124, 145, 146, 170, 175, 176, 182, 187, 206, 211, 212, 218, 223, 241, 242, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263], "tensordataset": 105, "tensorflow": [63, 64, 176, 177, 212, 213], "term": 334, "termin": [328, 329, 330, 331, 332], "terminologi": [69, 96, 182, 218], "ters": 325, "test": [0, 1, 70, 86, 136, 140, 141, 183, 219, 270, 326, 327, 328, 329, 330, 332], "test_list": [140, 141], "test_softlabel": 270, "testcas": [73, 99, 186, 222], "testdataset": 90, "testload": 270, "text": [199, 237, 239, 241, 242, 243], "text_featur": 244, "text_input": 244, "text_prompt": [199, 235, 237, 239], "text_threshold": 246, "textual": [235, 239], "tgz_md5": [140, 141], "th": 102, "than": [0, 1, 107, 241, 259, 301, 304, 308], "thei": [1, 63, 107, 123, 124, 145, 146, 176, 212, 321, 325, 326, 328, 329, 330, 331, 333], "them": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271, 280, 282, 299, 310, 313, 314, 326, 328], "theori": [0, 1, 338], "therefor": [0, 1], "thi": [0, 1, 3, 5, 7, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 51, 53, 58, 59, 60, 63, 64, 66, 69, 70, 71, 72, 76, 80, 83, 96, 97, 98, 110, 111, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 140, 141, 145, 146, 147, 150, 164, 166, 171, 172, 173, 176, 177, 179, 182, 183, 184, 185, 192, 199, 202, 207, 208, 209, 212, 213, 215, 218, 219, 220, 221, 224, 226, 231, 237, 239, 242, 243, 248, 252, 253, 254, 255, 257, 258, 259, 262, 263, 266, 271, 278, 280, 282, 283, 285, 287, 289, 291, 293, 301, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 335, 338], "this_inventori": [19, 39, 46], "those": [63, 176, 212, 308, 333, 334, 335], "though": [63, 123, 124, 145, 146, 176, 212], "thread": [71, 97, 184, 220], "three": [1, 259, 311, 321], "thresh": [59, 172, 208], "threshold": [7, 51, 65, 74, 164, 178, 187, 214, 223, 224, 246, 259, 261, 308], "threshold_offset": 261, "through": [72, 98, 185, 221, 304, 310, 314, 330, 334], "throw": 331, "tiburon": [326, 327, 332], "tilemap": 280, "time": [0, 51, 63, 78, 164, 176, 212, 224, 304, 326, 327], "timespan": 1, "timestamp": 304, "titl": 314, "tmp": [51, 164, 192, 224, 264, 327, 328, 329, 331, 332], "to_json": [19, 39, 46], "to_numpi": 261, "to_tensor": [127, 149], "to_unit": 321, "togeth": [127, 149, 333, 334], "token": [241, 243, 253], "toler": 192, "ton": 321, "ton_u": 321, "ton_uk": 321, "tonylin": 111, "took": 331, "tool": [261, 336], "top": [1, 51, 164, 224, 301, 314], "top_onli": [51, 164, 224], "torch": [60, 63, 69, 96, 123, 124, 145, 146, 173, 176, 182, 192, 209, 212, 218, 239, 241, 242, 252, 253, 254, 255, 256, 257, 258, 259, 263], "torchtestcas": [73, 99, 186, 222], "torchvis": [69, 182, 218, 241, 242], "toronto": [140, 141], "tort": [0, 1, 338], "total": [304, 308, 330, 332], "totensor": [127, 149], "trace": 262, "traceback": 312, "traci": 336, "track": 308, "train": [51, 62, 63, 66, 69, 76, 78, 80, 81, 86, 96, 111, 113, 114, 134, 140, 141, 142, 143, 164, 175, 176, 179, 182, 192, 211, 212, 215, 218, 224, 226, 231, 265, 266, 313], "train2017": [57, 170, 206], "train_data_dir": 192, "train_detector": [52, 165, 201], "train_list": [140, 141], "traindataset": 90, "trained_model": 192, "trainer": 192, "trainy_g_list": 11, "transfer": 192, "transform": [57, 127, 140, 141, 142, 143, 149, 170, 206, 241, 242, 251, 253, 254, 255, 257, 259, 260], "transformed_imag": 259, "transformer_dim": [254, 255], "transformer_head": 242, "transformer_lay": 242, "transformer_width": 242, "transient": 308, "travers": [69, 182, 218, 304], "treat": 304, "tree": 330, "tri": 1, "trigger": [71, 97, 184, 220], "true": [11, 14, 17, 19, 39, 46, 51, 55, 59, 62, 63, 64, 65, 69, 74, 76, 83, 84, 96, 107, 111, 113, 114, 123, 124, 134, 140, 141, 142, 143, 145, 146, 164, 168, 172, 175, 176, 177, 178, 182, 187, 189, 192, 204, 208, 211, 212, 213, 214, 218, 223, 224, 226, 231, 242, 253, 259, 264, 266, 270, 271, 301, 304, 305, 308, 309, 311, 312, 314, 321, 331, 332], "truncat": 241, "truth": 1, "try": [327, 332], "tune": 192, "tunnel": [80, 291], "tupl": [63, 74, 78, 123, 124, 127, 145, 146, 149, 176, 187, 212, 223, 242, 243, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 302, 304, 306, 308, 309, 311], "two": [0, 1, 63, 78, 123, 124, 145, 146, 176, 192, 212, 241, 304, 308, 309, 311, 317, 320, 326, 327, 328, 329, 332], "twowayattentionblock": 258, "twowaytransform": 258, "txt": [0, 1, 118, 243, 327, 328, 329, 330], "type": [2, 51, 63, 76, 123, 124, 140, 142, 145, 146, 164, 176, 212, 224, 226, 231, 235, 252, 253, 254, 255, 256, 258, 289, 310, 311, 321, 326, 327, 328, 329, 330, 331, 332, 334], "type_of_th": 3, "typeerror": [237, 239, 287, 291, 301, 304, 309, 312, 317], "typic": [259, 328, 330], "u": [321, 330, 332], "u65dis": 332, "uint8": [119, 248, 259, 263], "uk": 321, "un": 259, "unchang": 304, "uncompress": 261, "uncompressed_rl": 261, "uncrop_boxes_xyxi": 261, "uncrop_mask": 261, "uncrop_point": 261, "under": [51, 164, 224, 304, 308, 332, 333, 335, 337, 338], "understand": [325, 331, 333, 334], "undesir": 84, "uneven": 1, "uni": [0, 1], "unicod": 243, "uniform": 308, "uniformli": 308, "union": [192, 241, 305, 306, 309, 314], "uniqu": [118, 304, 310, 314], "unit": [59, 172, 208, 285, 287, 289, 291, 293, 301, 307, 321, 326, 330], "unit_convert": 307, "unit_default": 321, "unit_typ": 321, "unit_valid": 321, "unitconvert": [307, 321], "unittest": [68, 95, 181, 217], "univers": [0, 1, 338], "unk": 243, "unknown": [330, 331], "unless": [83, 304], "unload": 78, "unpartit": 253, "unrecogn": 321, "unsupport": 321, "unwant": 328, "up": [0, 51, 63, 107, 123, 124, 145, 146, 164, 176, 212, 224, 226, 231, 243, 325, 326, 327, 328, 332], "updat": [51, 83, 118, 129, 151, 164, 224, 226, 304, 305, 326, 332], "update_inventori": 11, "update_properti": 305, "update_world_r": 304, "updates__": [164, 224], "upernet": 112, "upload": 328, "upon": [1, 335], "upscal": 257, "urban": 326, "url": [115, 140, 141, 308, 313], "us": [3, 5, 7, 9, 11, 38, 49, 51, 63, 69, 70, 71, 72, 76, 80, 96, 97, 98, 105, 123, 124, 145, 146, 164, 176, 182, 183, 184, 185, 192, 193, 197, 199, 212, 218, 219, 220, 221, 224, 226, 231, 233, 235, 237, 239, 241, 246, 248, 256, 257, 259, 262, 278, 283, 285, 289, 293, 299, 301, 304, 308, 310, 313, 315, 317, 318, 321, 326, 327, 328, 329, 330, 331, 332, 334, 337, 338], "usa": [301, 302, 326, 330], "usa_class": 326, "usa_footprint_scrap": [275, 330], "usa_footprintscrap": [301, 326, 327, 328, 329, 330], "usa_footprintsscrap": 326, "usa_inventori": 326, "usa_scrap": 326, "usag": [63, 71, 97, 123, 124, 145, 146, 176, 184, 212, 220, 308, 321], "usastr": 299, "use_abs_po": 253, "use_default": [38, 39], "use_gpu": [65, 178, 214], "use_rel_po": 253, "use_softmax": 112, "use_stability_scor": 262, "user": [1, 46, 80, 118, 119, 127, 149, 243, 302, 304, 305, 308, 321, 326, 328, 331], "user_footprint": 275, "user_infer": 12, "user_path": 46, "user_scattered_col": 101, "userfootprint": 302, "userinfer": 46, "userscattereddataparallel": 101, "usual": [71, 97, 184, 220], "utf": [243, 327, 328, 329], "util": [2, 52, 54, 61, 78, 81, 82, 86, 93, 109, 122, 144, 165, 167, 174, 188, 201, 203, 210, 239, 240, 247, 268, 326, 327, 329, 330, 331], "utils_extra": [61, 174, 210], "v": [99, 258, 321], "v2": 111, "v3": 336, "vacanc": [70, 183, 219], "val": [0, 1, 118, 129, 151], "val_cont": 332, "val_interv": [66, 179, 215], "val_struct": 332, "val_veh": 332, "valdataset": 90, "valid": [0, 1, 39, 51, 78, 80, 164, 192, 224, 304, 305, 306, 307, 308, 309, 311, 312, 317, 321], "validate_coordin": 311, "validate_inventori": 312, "validationcondit": 306, "valu": [0, 1, 60, 63, 69, 84, 96, 118, 123, 124, 129, 145, 146, 151, 173, 176, 182, 192, 193, 209, 212, 218, 226, 231, 257, 258, 259, 261, 304, 305, 308, 309, 311, 314, 321, 326, 328, 329, 331], "valueerror": [60, 78, 173, 192, 209, 237, 239, 280, 282, 304, 306, 308, 309, 313, 317, 321, 327], "vanishingpoint": 330, "var": [69, 96, 182, 218], "variabl": [0, 1, 11, 17, 49, 69, 96, 182, 197, 218, 226, 233, 243, 326], "varianc": [69, 96, 182, 218], "variance_scaling_": [74, 187, 223], "variancesc": [74, 187, 223], "variat": [1, 321, 326], "variou": [51, 164, 224, 282, 309, 311], "vector": [69, 96, 182, 218], "verbos": [65, 66, 178, 179, 214, 215], "verif": 326, "verifi": 309, "verify_and_download_model": 246, "version": [69, 96, 182, 218, 241, 304, 336, 337], "versu": 192, "vert1": 289, "vertic": 289, "vertlast": 289, "via": [0, 321], "view": [282, 327, 328, 335], "virtual": 193, "vision": [307, 313], "vision_lay": 242, "vision_patch_s": 242, "vision_width": 242, "visiontransform": 242, "visual": [1, 127, 149, 246, 264, 307, 308, 309, 314, 315], "vit": [239, 255], "vit_dim": 255, "vjp": [63, 123, 124, 145, 146, 176, 212], "vlm_image_classifi": 47, "vlm_segment": [47, 329], "vlmsegment": 264, "vocab": 243, "vocab_s": 242, "volumetr": [69, 96, 182, 218], "volunt": 326, "w": [63, 69, 96, 123, 124, 127, 145, 146, 149, 176, 182, 212, 218, 253, 257, 258, 259, 263, 315, 330, 332], "w1": [331, 332], "wa": [0, 1, 80, 304, 305, 333, 334], "wael": 336, "wai": [0, 1, 63, 107, 123, 124, 140, 142, 145, 146, 176, 212, 328, 332, 338], "wang": 336, "want": [71, 97, 184, 220, 243, 289, 326], "wari": 84, "warmup": 83, "warn": 0, "warranti": [0, 1, 338], "wc4": 332, "we": [72, 98, 185, 221, 241, 243, 326, 328, 329, 334], "web": 326, "weight": [0, 1, 14, 39, 42, 63, 107, 112, 118, 176, 212, 265, 313, 321], "weight_decai": 83, "weightedrandomsampl": 107, "weights_init": 112, "weights_path": [74, 187, 223], "well": [1, 140, 142, 263], "were": [63, 71, 97, 123, 124, 145, 146, 176, 184, 212, 220, 304], "what": [262, 325, 326, 334], "when": [0, 1, 3, 69, 71, 72, 84, 96, 97, 98, 107, 182, 184, 185, 218, 220, 221, 241, 243, 304, 306, 308, 310, 326, 330, 331, 332], "where": [1, 3, 69, 78, 84, 96, 182, 192, 218, 242, 256, 257, 259, 280, 282, 283, 304, 309, 311, 314, 315, 318, 321, 326], "whether": [0, 1, 62, 63, 76, 123, 124, 145, 146, 175, 176, 192, 211, 212, 231, 237, 241, 254, 255, 257, 304, 305, 309, 311, 312, 338], "which": [0, 1, 60, 69, 71, 96, 97, 107, 127, 140, 142, 149, 173, 182, 184, 192, 193, 209, 218, 220, 226, 231, 259, 264, 280, 282, 283, 287, 291, 301, 304, 308, 314, 319, 321, 326, 327, 328, 329, 330, 331, 332, 334], "while": [53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271, 314, 325, 331], "whitespac": [243, 328, 329], "whitespace_clean": 243, "whole": [0, 1], "whose": 334, "width": [60, 69, 74, 96, 173, 182, 187, 209, 218, 223, 242, 253], "width_coeffici": [63, 176, 212], "width_per_group": 266, "wil": 334, "windcecbruleset": 20, "windcerbruleset": 20, "windefruleset": 20, "windmecbruleset": 20, "windmerbruleset": 20, "windmetavarruleset": 20, "windmhruleset": 20, "windmlriruleset": 20, "windmlrmruleset": 20, "windmmuhruleset": 20, "windmsfruleset": 20, "window": [84, 253, 328, 329, 330, 331, 332, 334], "window_partit": 253, "window_s": 253, "window_unpartit": 253, "windowarea": 39, "windowarea_kei": 39, "windsecbruleset": 20, "windserbruleset": 20, "windspmbruleset": 20, "windwmuhruleset": 20, "windwsfruleset": 20, "windzon": 39, "windzone_kei": 39, "wise": 1, "within": [0, 1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 53, 58, 59, 60, 63, 64, 66, 70, 112, 113, 114, 123, 124, 125, 128, 131, 132, 133, 134, 135, 145, 146, 147, 150, 166, 171, 172, 173, 176, 177, 179, 183, 202, 207, 208, 209, 212, 213, 215, 219, 242, 252, 253, 254, 255, 258, 262, 266, 271, 285, 287, 289, 291, 301, 304, 308, 309, 310, 319, 330, 332], "without": [0, 1, 69, 96, 107, 182, 192, 218, 304, 311, 314, 320, 326, 330, 331, 338], "wmuh": 36, "wmuh_config": 36, "wod": 76, "word": 243, "work": [0, 243, 328, 334, 335], "workflow": [327, 330, 331, 334], "world": [11, 46, 304, 331, 334], "world_real": 304, "would": [1, 107, 328, 329, 330, 331], "wp": 253, "wrap": [69, 96, 105, 107, 182, 218, 304], "wrapper": [226, 231], "write": [289, 304, 309, 332], "write_dict": 264, "write_polygon_to_geojson": 309, "write_to_geojson": [304, 331, 332], "written": [0, 1, 304, 309, 326, 327, 328, 329, 330, 331, 332], "wsf": [27, 37], "wsf_config": 37, "www": [140, 141, 334], "x": [59, 63, 64, 69, 73, 74, 90, 96, 112, 113, 114, 119, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 145, 146, 147, 149, 150, 172, 176, 177, 182, 186, 187, 208, 212, 213, 218, 222, 223, 242, 252, 253, 254, 255, 256, 257, 258, 259, 261, 266, 271, 332, 336], "x1": [60, 173, 209], "x2": [60, 173, 209], "x4": 261, "xhxw": 261, "xmax": [7, 246], "xmin": [7, 246], "xpu": 118, "xywh": 248, "xyxi": [7, 246, 259, 261], "y": [69, 73, 96, 123, 124, 145, 146, 182, 186, 218, 222, 259, 332], "y1": [60, 173, 209], "y2": [60, 173, 209], "y_gt": 84, "y_pred": 84, "yaml": 119, "yard": 321, "yd": 321, "yd2": 321, "year": 289, "year_built_classifi": [1, 47], "year_class": [14, 42], "yearbuilt": [14, 17, 19, 39], "yearbuilt_kei": [14, 17, 19, 39], "yearbuiltclassifi": 329, "yet": 326, "yield": 107, "ymax": [7, 246], "ymin": [7, 246], "you": [63, 72, 98, 123, 124, 145, 146, 176, 185, 212, 221, 243, 289, 325, 327, 328, 337], "your": [243, 328], "yu": 336, "yunhui": 336, "z": [124, 146], "z0": 39, "z0_kei": 39, "zenodo": [330, 336], "zero": [7, 246, 304], "zero_init_residu": 266, "zh": [74, 187, 223], "zhao": 336, "zoom": [127, 149], "zsarn\u00f3czai": 336, "zylo117": [59, 60, 64, 172, 173, 177, 208, 209, 213]}, "titles": ["Raised Foundation Classification", "Year Built Classification", "brails package", "brails.exceptions module", "brails.filters package", "brails.filters.filter module", "brails.filters.house_view package", "brails.filters.house_view.house_view module", "brails.imputers package", "brails.imputers.imputation module", "brails.imputers.knn_imputer package", "brails.imputers.knn_imputer.knn_imputer module", "brails.inferers package", "brails.inferers.hazus_inferer package", "brails.inferers.hazus_inferer.hazus_inferer module", "brails.inferers.hazus_inferer.hazus_rulesets module", "brails.inferers.hazus_inferer_earthquake package", "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake module", "brails.inferers.hazus_inferer_flood package", "brails.inferers.hazus_inferer_flood.hazus_inferer_flood module", "brails.inferers.hazus_inferer_wind package", "brails.inferers.hazus_inferer_wind.BuildingClassRulesets module", "brails.inferers.hazus_inferer_wind.WindCECBRulesets module", "brails.inferers.hazus_inferer_wind.WindCERBRulesets module", "brails.inferers.hazus_inferer_wind.WindEFRulesets module", "brails.inferers.hazus_inferer_wind.WindMECBRulesets module", "brails.inferers.hazus_inferer_wind.WindMERBRulesets module", "brails.inferers.hazus_inferer_wind.WindMHRulesets module", "brails.inferers.hazus_inferer_wind.WindMLRIRulesets module", "brails.inferers.hazus_inferer_wind.WindMLRMRulesets module", "brails.inferers.hazus_inferer_wind.WindMMUHRulesets module", "brails.inferers.hazus_inferer_wind.WindMSFRulesets module", "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets module", "brails.inferers.hazus_inferer_wind.WindSECBRulesets module", "brails.inferers.hazus_inferer_wind.WindSERBRulesets module", "brails.inferers.hazus_inferer_wind.WindSPMBRulesets module", "brails.inferers.hazus_inferer_wind.WindWMUHRulesets module", "brails.inferers.hazus_inferer_wind.WindWSFRulesets module", "brails.inferers.hazus_inferer_wind.auto_HU_NJ module", "brails.inferers.hazus_inferer_wind.hazus_inferer_wind module", "brails.inferers.inferenceEngine module", "brails.inferers.simcenter_inferer package", "brails.inferers.simcenter_inferer.simCenter_inferer module", "brails.inferers.user_inferer package", "brails.inferers.user_inferer.content_value_inferer module", "brails.inferers.user_inferer.floor_area_inferer module", "brails.inferers.user_inferer.user_inferer module", "brails.processors package", "brails.processors.building_material_llm package", "brails.processors.building_material_llm.building_material_llm module", "brails.processors.chimney_detector package", "brails.processors.chimney_detector.chimney_detector module", "brails.processors.chimney_detector.lib package", "brails.processors.chimney_detector.lib.backbone module", "brails.processors.chimney_detector.lib.efficientdet package", "brails.processors.chimney_detector.lib.efficientdet.coco module", "brails.processors.chimney_detector.lib.efficientdet.config module", "brails.processors.chimney_detector.lib.efficientdet.dataset module", "brails.processors.chimney_detector.lib.efficientdet.loss module", "brails.processors.chimney_detector.lib.efficientdet.model module", "brails.processors.chimney_detector.lib.efficientdet.utils module", "brails.processors.chimney_detector.lib.efficientnet package", "brails.processors.chimney_detector.lib.efficientnet.model module", "brails.processors.chimney_detector.lib.efficientnet.utils module", "brails.processors.chimney_detector.lib.efficientnet.utils_extra module", "brails.processors.chimney_detector.lib.infer_detector module", "brails.processors.chimney_detector.lib.train_detector module", "brails.processors.chimney_detector.lib.utils package", "brails.processors.chimney_detector.lib.utils.sync_batchnorm package", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest module", "brails.processors.chimney_detector.lib.utils.utils module", "brails.processors.cons_type_classifier package", "brails.processors.cons_type_classifier.ConstructionTypeClassifier module", "brails.processors.facade_parser package", "brails.processors.facade_parser.facade_parser module", "brails.processors.ffh_predictor_klepac package", "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac module", "brails.processors.foundation_classifier package", "brails.processors.foundation_classifier.attention_utils package", "brails.processors.foundation_classifier.attention_utils.radam module", "brails.processors.foundation_classifier.attention_utils.utils module", "brails.processors.foundation_classifier.csail_segmentation_tool package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation module", "brails.processors.foundation_classifier.detect module", "brails.processors.foundation_classifier.foundation_classifier module", "brails.processors.foundation_classifier.lib package", "brails.processors.foundation_classifier.lib.LinearAverage module", "brails.processors.foundation_classifier.lib.NCEAverage module", "brails.processors.foundation_classifier.lib.NCECriterion module", "brails.processors.foundation_classifier.lib.alias_multinomial module", "brails.processors.foundation_classifier.lib.custom_transforms module", "brails.processors.foundation_classifier.lib.normalize module", "brails.processors.foundation_classifier.lib.utils module", "brails.processors.foundation_classifier.models package", "brails.processors.foundation_classifier.models.attention_module module", "brails.processors.foundation_classifier.models.basic_layer module", "brails.processors.foundation_classifier.models.residual_attention_network module", "brails.processors.foundation_classifier.models.resnet_applied module", "brails.processors.foundation_classifier.models.sknet module", "brails.processors.foundation_classifier.npid package", "brails.processors.foundation_classifier.npid.MDistance module", "brails.processors.foundation_classifier.npid.cifar module", "brails.processors.foundation_classifier.npid.main module", "brails.processors.foundation_classifier.npid.npid_datasets package", "brails.processors.foundation_classifier.npid.npid_datasets.cifar module", "brails.processors.foundation_classifier.npid.npid_datasets.folder module", "brails.processors.foundation_classifier.npid.npid_datasets.mnist module", "brails.processors.foundation_classifier.npid.npid_lib package", "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage module", "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage module", "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion module", "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial module", "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms module", "brails.processors.foundation_classifier.npid.npid_lib.normalize module", "brails.processors.foundation_classifier.npid.npid_lib.utils module", "brails.processors.foundation_classifier.npid.npid_models package", "brails.processors.foundation_classifier.npid.npid_models.resnet module", "brails.processors.foundation_classifier.npid.npid_models.resnet_cifar module", "brails.processors.foundation_classifier.npid.npid_toolbox package", "brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances module", "brails.processors.foundation_classifier.npid.test module", "brails.processors.foundation_classifier.save_masked_images module", "brails.processors.foundation_classifier.train module", "brails.processors.foundation_classifier.utils package", "brails.processors.foundation_classifier.utils.Datasets module", "brails.processors.foundation_classifier.utils.generate_csv module", "brails.processors.garage_detector package", "brails.processors.garage_detector.garage_detector module", "brails.processors.garage_detector.lib package", "brails.processors.garage_detector.lib.backbone module", "brails.processors.garage_detector.lib.efficientdet package", "brails.processors.garage_detector.lib.efficientdet.coco module", "brails.processors.garage_detector.lib.efficientdet.config module", "brails.processors.garage_detector.lib.efficientdet.dataset module", "brails.processors.garage_detector.lib.efficientdet.loss module", "brails.processors.garage_detector.lib.efficientdet.model module", "brails.processors.garage_detector.lib.efficientdet.utils module", "brails.processors.garage_detector.lib.efficientnet package", "brails.processors.garage_detector.lib.efficientnet.model module", "brails.processors.garage_detector.lib.efficientnet.utils module", "brails.processors.garage_detector.lib.efficientnet.utils_extra module", "brails.processors.garage_detector.lib.infer_detector module", "brails.processors.garage_detector.lib.train_detector module", "brails.processors.garage_detector.lib.utils package", "brails.processors.garage_detector.lib.utils.sync_batchnorm package", "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest module", "brails.processors.garage_detector.lib.utils.utils module", "brails.processors.gpt_base_model package", "brails.processors.gpt_base_model.GPT module", "brails.processors.gpt_base_model.utils module", "brails.processors.image_classifier package", "brails.processors.image_classifier.image_classifier module", "brails.processors.image_processor module", "brails.processors.image_segmenter package", "brails.processors.image_segmenter.image_segmenter module", "brails.processors.nFloor_gpt package", "brails.processors.nFloor_gpt.nFloor_gpt module", "brails.processors.nFloor_vlm package", "brails.processors.nFloor_vlm.nFloor_vlm module", "brails.processors.nfloors_detector package", "brails.processors.nfloors_detector.lib package", "brails.processors.nfloors_detector.lib.backbone module", "brails.processors.nfloors_detector.lib.efficientdet package", "brails.processors.nfloors_detector.lib.efficientdet.coco module", "brails.processors.nfloors_detector.lib.efficientdet.config module", "brails.processors.nfloors_detector.lib.efficientdet.dataset module", "brails.processors.nfloors_detector.lib.efficientdet.loss module", "brails.processors.nfloors_detector.lib.efficientdet.model module", "brails.processors.nfloors_detector.lib.efficientdet.utils module", "brails.processors.nfloors_detector.lib.efficientnet package", "brails.processors.nfloors_detector.lib.efficientnet.model module", "brails.processors.nfloors_detector.lib.efficientnet.utils module", "brails.processors.nfloors_detector.lib.efficientnet.utils_extra module", "brails.processors.nfloors_detector.lib.infer_detector module", "brails.processors.nfloors_detector.lib.train_detector module", "brails.processors.nfloors_detector.lib.utils package", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm package", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest module", "brails.processors.nfloors_detector.lib.utils.utils module", "brails.processors.nfloors_detector.nfloor_detector module", "brails.processors.occupancy_classifier package", "brails.processors.occupancy_classifier.occupancy_classifier module", "brails.processors.other_idea package", "brails.processors.other_idea.arial_processing module", "brails.processors.other_idea.street_processor module", "brails.processors.roof_shape_classifier package", "brails.processors.roof_shape_classifier.roof_shape_classifier module", "brails.processors.roof_shape_gpt package", "brails.processors.roof_shape_gpt.roof_shape_gpt module", "brails.processors.roof_shape_vlm package", "brails.processors.roof_shape_vlm.roof_shape_vlm module", "brails.processors.street_level_damage_detection package", "brails.processors.street_level_damage_detection.street_level_damage_detection module", "brails.processors.vlm_image_classifier package", "brails.processors.vlm_image_classifier.CLIPClassifier module", "brails.processors.vlm_image_classifier.clip package", "brails.processors.vlm_image_classifier.clip.clip module", "brails.processors.vlm_image_classifier.clip.model module", "brails.processors.vlm_image_classifier.clip.simple_tokenizer module", "brails.processors.vlm_image_classifier.clip.utils module", "brails.processors.vlm_segmenter package", "brails.processors.vlm_segmenter.grounded_sam_utils module", "brails.processors.vlm_segmenter.segment_anything package", "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator module", "brails.processors.vlm_segmenter.segment_anything.build_sam module", "brails.processors.vlm_segmenter.segment_anything.build_sam_hq module", "brails.processors.vlm_segmenter.segment_anything.modeling package", "brails.processors.vlm_segmenter.segment_anything.modeling.common module", "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder module", "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder module", "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq module", "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder module", "brails.processors.vlm_segmenter.segment_anything.modeling.sam module", "brails.processors.vlm_segmenter.segment_anything.modeling.transformer module", "brails.processors.vlm_segmenter.segment_anything.predictor module", "brails.processors.vlm_segmenter.segment_anything.utils package", "brails.processors.vlm_segmenter.segment_anything.utils.amg module", "brails.processors.vlm_segmenter.segment_anything.utils.onnx module", "brails.processors.vlm_segmenter.segment_anything.utils.transforms module", "brails.processors.vlm_segmenter.vlm_segmenter module", "brails.processors.year_built_classifier package", "brails.processors.year_built_classifier.Resnet module", "brails.processors.year_built_classifier.detect module", "brails.processors.year_built_classifier.lib package", "brails.processors.year_built_classifier.lib.datasets module", "brails.processors.year_built_classifier.lib.utils module", "brails.processors.year_built_classifier.model module", "brails.processors.year_built_classifier.train module", "brails.processors.year_built_classifier.weights package", "brails.processors.year_built_classifier.year_built_classifier module", "brails.scrapers package", "brails.scrapers.asce_hazard_data_scraper package", "brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper module", "brails.scrapers.footprint_scraper module", "brails.scrapers.google_satellite package", "brails.scrapers.google_satellite.google_satellite module", "brails.scrapers.google_streetview package", "brails.scrapers.google_streetview.google_streetview module", "brails.scrapers.image_scraper module", "brails.scrapers.ms_footprint_scraper package", "brails.scrapers.ms_footprint_scraper.ms_footprint_handler module", "brails.scrapers.nbi_scraper package", "brails.scrapers.nbi_scraper.nbi_scraper module", "brails.scrapers.nsi_parser package", "brails.scrapers.nsi_parser.nsi_parser module", "brails.scrapers.nti_scraper package", "brails.scrapers.nti_scraper.nti_scraper module", "brails.scrapers.osm_footprint_scraper package", "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper module", "brails.scrapers.osm_power_network_scraper package", "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper module", "brails.scrapers.overture_maps_scraper package", "brails.scrapers.overture_maps_scraper.overture_maps_scraper module", "brails.scrapers.rapid_image_processors package", "brails.scrapers.rapid_image_processors.rapid_image_processors module", "brails.scrapers.usa_footprint_scraper package", "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper module", "brails.scrapers.user_footprints module", "brails.types package", "brails.types.asset_inventory module", "brails.types.image_set module", "brails.types.region_boundary module", "brails.utils package", "brails.utils.arcgisapi_service_helper module", "brails.utils.geo_tools module", "brails.utils.importer module", "brails.utils.input_validator module", "brails.utils.inventory_validator module", "brails.utils.model_utils module", "brails.utils.plot_tools module", "brails.utils.segmentation_utils module", "brails.utils.spatial_join_methods package", "brails.utils.spatial_join_methods.base module", "brails.utils.spatial_join_methods.distance_based_point_matcher module", "brails.utils.spatial_join_methods.get_points_in_polygons module", "brails.utils.spatial_join_methods.get_points_near_polygons module", "brails.utils.unit_converter module", "conf module", "brailsPlusPlus", "setup module", "Examples", "Building Footprints", "Downloading Images", "Image Filters", "Image Processors", "Importer", "Imputation Algorithms", "NSI Integration", "Indices and tables", "About", "Acknowledgements", "How to Cite", "Installation", "Copyright and License"], "titleterms": {"3": [0, 1], "about": 334, "acknowledg": 335, "algorithm": 331, "alias_multinomi": [126, 148], "amg": 261, "arcgisapi_service_help": 308, "arial_process": 228, "asce_hazard_data_scrap": [276, 277], "asset_inventori": 304, "attention_modul": 131, "attention_util": [82, 83, 84], "auto_hu_nj": 38, "automatic_mask_gener": 248, "backbon": [53, 166, 202], "base": 317, "basic_lay": 132, "batchnorm": [69, 96, 182, 218], "batchnorm_reimpl": [70, 183, 219], "brail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], "brailsplusplu": 323, "bsd": [0, 1], "build": 326, "build_sam": 249, "build_sam_hq": 250, "building_material_llm": [48, 49], "buildingclassruleset": 21, "built": 1, "calculate_all_dist": 156, "calus": 1, "chimney_detector": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "cifar": [138, 141], "cite": 336, "classif": [0, 1], "claus": 0, "clean": [0, 1], "clip": [240, 241, 242, 243, 244], "clipclassifi": 239, "coco": [55, 168, 204], "comm": [71, 97, 184, 220], "common": 252, "conf": 322, "config": [56, 87, 88, 169, 205], "cons_type_classifi": [75, 76], "constructiontypeclassifi": 76, "content": [1, 333], "content_value_infer": 44, "copyright": [0, 1, 338], "csail_seg": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "csail_segment": 119, "csail_segmentation_tool": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "custom_transform": [127, 149], "data": [0, 1, 89, 103, 104, 105, 106, 107], "data_parallel": 101, "dataload": 104, "dataset": [0, 1, 57, 90, 105, 161, 170, 206, 269], "default": 88, "detect": [120, 267], "distance_based_point_match": 318, "distribut": 106, "download": 327, "efficientdet": [54, 55, 56, 57, 58, 59, 60, 167, 168, 169, 170, 171, 172, 173, 203, 204, 205, 206, 207, 208, 209], "efficientnet": [61, 62, 63, 64, 174, 175, 176, 177, 210, 211, 212, 213], "eval": 91, "eval_multipro": 92, "exampl": [84, 226, 325], "except": 3, "execut": [0, 1], "facade_pars": [77, 78], "ffh_predictor_klepac": [79, 80], "filter": [4, 5, 6, 7, 328], "floor_area_infer": 45, "folder": 142, "footprint": 326, "footprint_scrap": 278, "format": [0, 1], "foundat": [0, 1], "foundation_classifi": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], "garage_detector": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "generate_csv": 162, "geo_tool": 309, "get_points_in_polygon": 319, "get_points_near_polygon": 320, "google_satellit": [279, 280], "google_streetview": [281, 282], "gpt": 189, "gpt_base_model": [188, 189, 190], "grounded_sam_util": 246, "hazus_infer": [13, 14, 15], "hazus_inferer_earthquak": [16, 17], "hazus_inferer_flood": [18, 19], "hazus_inferer_wind": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "hazus_ruleset": 15, "house_view": [6, 7], "how": [0, 1, 336], "hrnet": 110, "i": [0, 1], "imag": [0, 327, 328, 329], "image_classifi": [191, 192], "image_encod": 253, "image_processor": 193, "image_scrap": 283, "image_segment": [194, 195], "image_set": 305, "import": [310, 330], "improv": 0, "imput": [8, 9, 10, 11, 331], "indic": 333, "infer": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "infer_detector": [65, 178, 214], "inferenceengin": 40, "input": [0, 1], "input_valid": 311, "instal": [0, 1, 337], "integr": 332, "inventory_valid": 312, "knn_imput": [10, 11], "lib": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 122, 123, 124, 125, 126, 127, 128, 129, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 268, 269, 270], "licens": [0, 1, 338], "linearaverag": [123, 145], "loss": [58, 171, 207], "main": 139, "mask": 0, "mask_decod": 254, "mask_decoder_hq": 255, "mdistanc": 137, "mnist": 143, "mobilenet": 111, "model": [0, 1, 59, 62, 109, 110, 111, 112, 113, 114, 115, 130, 131, 132, 133, 134, 135, 172, 175, 208, 211, 242, 251, 252, 253, 254, 255, 256, 257, 258, 271], "model_util": 313, "modul": [3, 5, 7, 9, 11, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 49, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 78, 80, 83, 84, 88, 90, 91, 92, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 195, 197, 199, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 231, 233, 235, 237, 239, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 274, 277, 278, 280, 282, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324], "ms_footprint_handl": 285, "ms_footprint_scrap": [284, 285], "nbi_scrap": [286, 287], "nceaverag": [124, 146], "ncecriterion": [125, 147], "nfloor_detector": 224, "nfloor_gpt": [196, 197], "nfloor_vlm": [198, 199], "nfloors_detector": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "nn": [94, 95, 96, 97, 98, 99, 100, 101], "normal": [128, 150], "note": [84, 226], "notebook": [326, 331, 332], "npid": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "npid_dataset": [140, 141, 142, 143], "npid_lib": [144, 145, 146, 147, 148, 149, 150, 151], "npid_model": [152, 153, 154], "npid_toolbox": [155, 156], "nsi": 332, "nsi_pars": [288, 289], "nti_scrap": [290, 291], "occupancy_classifi": [225, 226], "onnx": 262, "option": 0, "osm_footprint_scrap": [292, 293], "osm_power_network_scrap": [294, 295], "other_idea": [227, 228, 229], "overture_maps_scrap": [296, 297], "packag": [2, 4, 6, 8, 10, 12, 13, 16, 18, 20, 41, 43, 47, 48, 50, 52, 54, 61, 67, 68, 75, 77, 79, 81, 82, 85, 86, 87, 89, 93, 94, 95, 100, 102, 103, 109, 122, 130, 136, 140, 144, 152, 155, 160, 163, 165, 167, 174, 180, 181, 188, 191, 194, 196, 198, 200, 201, 203, 210, 216, 217, 225, 227, 230, 232, 234, 236, 238, 240, 245, 247, 251, 260, 265, 268, 273, 275, 276, 279, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 303, 307, 316], "parallel": [100, 101], "paramet": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 241], "plot_tool": 314, "pre": 0, "predictor": 259, "pretrain": [0, 1], "processor": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 329], "prompt_encod": 256, "radam": 83, "rais": 0, "rapid_image_processor": [298, 299], "region_boundari": 306, "replic": [72, 98, 185, 221], "residual_attention_network": 133, "resnet": [113, 153, 266], "resnet_appli": 134, "resnet_cifar": 154, "resnext": 114, "return": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 84, 241], "roof_shape_classifi": [230, 231], "roof_shape_gpt": [232, 233], "roof_shape_vlm": [234, 235], "sam": 257, "sampler": 107, "save": 0, "save_masked_imag": 158, "scraper": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "segment_anyth": [247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "segmentation_util": 315, "setup": 324, "simcenter_infer": [41, 42], "simple_token": 243, "sknet": 135, "spatial_join_method": [316, 317, 318, 319, 320], "street_level_damage_detect": [236, 237], "street_processor": 229, "submodul": [2, 4, 6, 8, 10, 12, 13, 16, 18, 20, 41, 43, 47, 48, 50, 52, 54, 61, 67, 68, 75, 77, 79, 81, 82, 85, 86, 87, 95, 100, 102, 103, 109, 122, 130, 136, 140, 144, 152, 155, 160, 163, 165, 167, 174, 180, 181, 188, 191, 194, 196, 198, 200, 201, 203, 210, 216, 217, 225, 227, 230, 232, 234, 236, 238, 240, 245, 247, 251, 260, 265, 268, 275, 276, 279, 281, 284, 286, 288, 290, 292, 294, 296, 298, 300, 303, 307, 316], "subpackag": [2, 4, 6, 8, 12, 47, 50, 52, 67, 81, 85, 86, 93, 94, 102, 136, 163, 165, 180, 200, 201, 216, 238, 245, 247, 265, 275, 307], "sync_batchnorm": [68, 69, 70, 71, 72, 73, 181, 182, 183, 184, 185, 186, 217, 218, 219, 220, 221, 222], "tabl": [1, 333], "test": [116, 157], "th": 108, "train": [0, 1, 117, 159, 272], "train_detector": [66, 179, 215], "transform": [258, 263], "type": [303, 304, 305, 306], "unit_convert": 321, "unittest": [73, 99, 186, 222], "unsupervis": 0, "us": [0, 1], "usa_footprint_scrap": [300, 301], "user_footprint": 302, "user_infer": [43, 44, 45, 46], "util": [60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 84, 102, 103, 104, 105, 106, 107, 108, 115, 118, 129, 151, 160, 161, 162, 173, 176, 180, 181, 182, 183, 184, 185, 186, 187, 190, 209, 212, 216, 217, 218, 219, 220, 221, 222, 223, 244, 260, 261, 262, 263, 270, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], "utils_extra": [64, 177, 213], "vlm_image_classifi": [238, 239, 240, 241, 242, 243, 244], "vlm_segment": [245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "weight": 273, "what": [0, 1], "windcecbruleset": 22, "windcerbruleset": 23, "windefruleset": 24, "windmecbruleset": 25, "windmerbruleset": 26, "windmetavarruleset": 32, "windmhruleset": 27, "windmlriruleset": 28, "windmlrmruleset": 29, "windmmuhruleset": 30, "windmsfruleset": 31, "windsecbruleset": 33, "windserbruleset": 34, "windspmbruleset": 35, "windwmuhruleset": 36, "windwsfruleset": 37, "year": 1, "year_built_classifi": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274]}})